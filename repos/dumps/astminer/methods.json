[ {
  "name" : "main",
  "full_name" : "Main.main",
  "file" : "astminer/testData/1.java",
  "doc" : null,
  "comment" : null,
  "body" : "public static void main(String[] args) {\n        System.out.println(\"Hello world\");\n    }",
  "commit" : {
    "parents_cnt" : 0,
    "message" : "Initial commit",
    "date" : "2018-12-20",
    "hash" : "cb50054904c2f63654d65bf1d1f472efdb7ed5cf"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 12 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 13 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 14,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "hello|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "fun",
  "full_name" : "SingleFunction.fun",
  "file" : "astminer/testData/gumTreeMethodSplitter/1.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun(String[] args, int param) {\n        System.out.println(\"Hello again world!\");\n    }",
  "commit" : {
    "parents_cnt" : 0,
    "message" : "Initial commit",
    "date" : "2018-12-20",
    "hash" : "cb50054904c2f63654d65bf1d1f472efdb7ed5cf"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 13 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 14 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "InnerClass.SingleMethodInnerClass.main",
  "file" : "astminer/testData/gumTreeMethodSplitter/3.java",
  "doc" : null,
  "comment" : null,
  "body" : "void main(String[] args) {\n            System.out.println(\"Hello world!\");\n        }",
  "commit" : {
    "parents_cnt" : 0,
    "message" : "Initial commit",
    "date" : "2018-12-20",
    "hash" : "cb50054904c2f63654d65bf1d1f472efdb7ed5cf"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 5,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 12,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "hello|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "fun",
  "full_name" : "SingleMethodInnerClass.fun",
  "file" : "astminer/testData/gumTreeMethodSplitter/3.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun(String[] args, int param) {\n        System.out.println(\"Hello again world!\");\n    }",
  "commit" : {
    "parents_cnt" : 0,
    "message" : "Initial commit",
    "date" : "2018-12-20",
    "hash" : "cb50054904c2f63654d65bf1d1f472efdb7ed5cf"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 13 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 14 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "fun",
  "full_name" : "SingleFunction.fun",
  "file" : "astminer/testData/gumTreeMethodSplitter/4.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun(int args, int param) {\n        System.out.println(\"Hello again world!\");\n    }",
  "commit" : {
    "parents_cnt" : 0,
    "message" : "Initial commit",
    "date" : "2018-12-20",
    "hash" : "cb50054904c2f63654d65bf1d1f472efdb7ed5cf"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 12,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "InnerClass.SingleMethodInnerClass.main",
  "file" : "astminer/testData/gumTreeMethodSplitter/2.java",
  "doc" : null,
  "comment" : null,
  "body" : "void main(String[] args) {\n            System.out.println(\"Hello world!\");\n        }",
  "commit" : {
    "parents_cnt" : 0,
    "message" : "Initial commit",
    "date" : "2018-12-20",
    "hash" : "cb50054904c2f63654d65bf1d1f472efdb7ed5cf"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 5,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 12,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "hello|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "runExample",
  "full_name" : "AllJavaFiles.runExample",
  "file" : "astminer/src/main/java/miningtool/examples/AllJavaFiles.java",
  "doc" : null,
  "comment" : null,
  "body" : "public static void runExample() {\n        final PathMiner miner = new PathMiner(new PathRetrievalSettings(5,5));\n        final PathStorage pathStorage = new VocabularyPathStorage();\n\n        final Path inputFolder = Paths.get(INPUT_FOLDER);\n\n        FileVisitor<Path> fileVisitor = new SimpleFileVisitor<Path>() {\n            @Override\n            public FileVisitResult visitFile(Path file, BasicFileAttributes attributes) throws IOException {\n                Node fileTree = new GumTreeJavaParser().parse(new FileInputStream(file.toFile()));\n                if (fileTree == null) {\n                    return FileVisitResult.CONTINUE;\n                }\n                final Collection<ASTPath> paths = miner.retrievePaths(fileTree);\n                final Collection<PathContext> pathContexts = paths\n                        .stream().map(PathUtilKt::toPathContext).collect(Collectors.toList());\n\n                pathStorage.store(pathContexts, file.toAbsolutePath().toString());\n\n                return FileVisitResult.CONTINUE;\n            }\n        };\n\n        try {\n            Files.walkFileTree(inputFolder, fileVisitor);\n            pathStorage.save(OUTPUT_FOLDER);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }",
  "commit" : {
    "parents_cnt" : 0,
    "message" : "Initial commit",
    "date" : "2018-12-20",
    "hash" : "cb50054904c2f63654d65bf1d1f472efdb7ed5cf"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "run|example",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 6, 7, 8, 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 11, 12, 13 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25, 26 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 32, 33, 34 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 41, 42 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "TryStatement",
    "children" : [ 143, 144 ]
  }, {
    "id" : 11,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "path|miner",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "path|miner",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "miner",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 17, 18 ]
  }, {
    "id" : 17,
    "token" : "path|miner",
    "type" : "SimpleType",
    "children" : [ 19 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 20, 21, 22 ]
  }, {
    "id" : 19,
    "token" : "path|miner",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "path|retrieval|settings",
    "type" : "SimpleType",
    "children" : [ 23 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "path|retrieval|settings",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "path|storage",
    "type" : "SimpleType",
    "children" : [ 27 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 28, 29 ]
  }, {
    "id" : 27,
    "token" : "path|storage",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "path|storage",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 30 ]
  }, {
    "id" : 30,
    "token" : "vocabulary|path|storage",
    "type" : "SimpleType",
    "children" : [ 31 ]
  }, {
    "id" : 31,
    "token" : "vocabulary|path|storage",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "path",
    "type" : "SimpleType",
    "children" : [ 35 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 35,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "input|folder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39, 40 ]
  }, {
    "id" : 38,
    "token" : "paths",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "input|folder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "file|visitorpath",
    "type" : "ParameterizedType",
    "children" : [ 43, 44 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 47, 48 ]
  }, {
    "id" : 43,
    "token" : "file|visitor",
    "type" : "SimpleType",
    "children" : [ 45 ]
  }, {
    "id" : 44,
    "token" : "path",
    "type" : "SimpleType",
    "children" : [ 46 ]
  }, {
    "id" : 45,
    "token" : "file|visitor",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "file|visitor",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 49, 50 ]
  }, {
    "id" : 49,
    "token" : "simple|file|visitorpath",
    "type" : "ParameterizedType",
    "children" : [ 51, 52 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "AnonymousClassDeclaration",
    "children" : [ 55 ]
  }, {
    "id" : 51,
    "token" : "simple|file|visitor",
    "type" : "SimpleType",
    "children" : [ 53 ]
  }, {
    "id" : 52,
    "token" : "path",
    "type" : "SimpleType",
    "children" : [ 54 ]
  }, {
    "id" : 53,
    "token" : "simple|file|visitor",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 56, 57, 58, 59, 60, 61, 62, 63 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 64 ]
  }, {
    "id" : 57,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "file|visit|result",
    "type" : "SimpleType",
    "children" : [ 65 ]
  }, {
    "id" : 59,
    "token" : "visit|file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 66, 67 ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 69, 70 ]
  }, {
    "id" : 62,
    "token" : "io|exception",
    "type" : "SimpleType",
    "children" : [ 72 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "Block",
    "children" : [ 73, 74, 75, 76, 77, 78 ]
  }, {
    "id" : 64,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "file|visit|result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "path",
    "type" : "SimpleType",
    "children" : [ 68 ]
  }, {
    "id" : 67,
    "token" : "file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "basic|file|attributes",
    "type" : "SimpleType",
    "children" : [ 71 ]
  }, {
    "id" : 70,
    "token" : "attributes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "basic|file|attributes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "io|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 79, 80 ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 94, 95 ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 100, 101, 102 ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 112, 113, 114 ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 133 ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 142 ]
  }, {
    "id" : 79,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 81 ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 82, 83 ]
  }, {
    "id" : 81,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "file|tree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 84, 85, 86 ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 87 ]
  }, {
    "id" : 85,
    "token" : "parse",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 89, 90 ]
  }, {
    "id" : 87,
    "token" : "gum|tree|java|parser",
    "type" : "SimpleType",
    "children" : [ 88 ]
  }, {
    "id" : 88,
    "token" : "gum|tree|java|parser",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "file|input|stream",
    "type" : "SimpleType",
    "children" : [ 91 ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 92, 93 ]
  }, {
    "id" : 91,
    "token" : "file|input|stream",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "to|file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 96, 97 ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "Block",
    "children" : [ 98 ]
  }, {
    "id" : 96,
    "token" : "file|tree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 99 ]
  }, {
    "id" : 99,
    "token" : "file|visit|resultcontinue",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "collectionast|path",
    "type" : "ParameterizedType",
    "children" : [ 103, 104 ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 107, 108 ]
  }, {
    "id" : 103,
    "token" : "collection",
    "type" : "SimpleType",
    "children" : [ 105 ]
  }, {
    "id" : 104,
    "token" : "ast|path",
    "type" : "SimpleType",
    "children" : [ 106 ]
  }, {
    "id" : 105,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "ast|path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "paths",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 109, 110, 111 ]
  }, {
    "id" : 109,
    "token" : "miner",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "retrieve|paths",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "file|tree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "collectionpath|context",
    "type" : "ParameterizedType",
    "children" : [ 115, 116 ]
  }, {
    "id" : 114,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 119, 120 ]
  }, {
    "id" : 115,
    "token" : "collection",
    "type" : "SimpleType",
    "children" : [ 117 ]
  }, {
    "id" : 116,
    "token" : "path|context",
    "type" : "SimpleType",
    "children" : [ 118 ]
  }, {
    "id" : 117,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "path|context",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "path|contexts",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 121, 122, 123 ]
  }, {
    "id" : 121,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 124, 125, 126 ]
  }, {
    "id" : 122,
    "token" : "collect",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 131, 132 ]
  }, {
    "id" : 124,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 127, 128 ]
  }, {
    "id" : 125,
    "token" : "map",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "",
    "type" : "ExpressionMethodReference",
    "children" : [ 129, 130 ]
  }, {
    "id" : 127,
    "token" : "paths",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "stream",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "path|util|kt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "to|path|context",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "collectors",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 132,
    "token" : "to|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 134, 135, 136, 137 ]
  }, {
    "id" : 134,
    "token" : "path|storage",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 135,
    "token" : "store",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "path|contexts",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 137,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 138, 139 ]
  }, {
    "id" : 138,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 140, 141 ]
  }, {
    "id" : 139,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 140,
    "token" : "file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 141,
    "token" : "to|absolute|path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "file|visit|resultcontinue",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 143,
    "token" : "",
    "type" : "Block",
    "children" : [ 145, 146 ]
  }, {
    "id" : 144,
    "token" : "",
    "type" : "CatchClause",
    "children" : [ 156, 157 ]
  }, {
    "id" : 145,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 147 ]
  }, {
    "id" : 146,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 152 ]
  }, {
    "id" : 147,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 148, 149, 150, 151 ]
  }, {
    "id" : 148,
    "token" : "files",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "walk|file|tree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "input|folder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 151,
    "token" : "file|visitor",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 152,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 153, 154, 155 ]
  }, {
    "id" : 153,
    "token" : "path|storage",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 154,
    "token" : "save",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 155,
    "token" : "output|folder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 158, 159 ]
  }, {
    "id" : 157,
    "token" : "",
    "type" : "Block",
    "children" : [ 161 ]
  }, {
    "id" : 158,
    "token" : "io|exception",
    "type" : "SimpleType",
    "children" : [ 160 ]
  }, {
    "id" : 159,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 160,
    "token" : "io|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 162 ]
  }, {
    "id" : 162,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 163, 164 ]
  }, {
    "id" : 163,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 164,
    "token" : "print|stack|trace",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "visitFile",
  "full_name" : "fileVisitor.runExample.AllJavaFiles.visitFile",
  "file" : "astminer/src/main/java/miningtool/examples/AllJavaFiles.java",
  "doc" : null,
  "comment" : null,
  "body" : "@Override\n            public FileVisitResult visitFile(Path file, BasicFileAttributes attributes) throws IOException {\n                Node fileTree = new GumTreeJavaParser().parse(new FileInputStream(file.toFile()));\n                if (fileTree == null) {\n                    return FileVisitResult.CONTINUE;\n                }\n                final Collection<ASTPath> paths = miner.retrievePaths(fileTree);\n                final Collection<PathContext> pathContexts = paths\n                        .stream().map(PathUtilKt::toPathContext).collect(Collectors.toList());\n\n                pathStorage.store(pathContexts, file.toAbsolutePath().toString());\n\n                return FileVisitResult.CONTINUE;\n            }",
  "commit" : {
    "parents_cnt" : 0,
    "message" : "Initial commit",
    "date" : "2018-12-20",
    "hash" : "cb50054904c2f63654d65bf1d1f472efdb7ed5cf"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 9 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "file|visit|result",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 4,
    "token" : "visit|file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15 ]
  }, {
    "id" : 7,
    "token" : "io|exception",
    "type" : "SimpleType",
    "children" : [ 17 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Block",
    "children" : [ 18, 19, 20, 21, 22, 23 ]
  }, {
    "id" : 9,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "file|visit|result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "path",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "basic|file|attributes",
    "type" : "SimpleType",
    "children" : [ 16 ]
  }, {
    "id" : 15,
    "token" : "attributes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "basic|file|attributes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "io|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 39, 40 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 45, 46, 47 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 57, 58, 59 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 78 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 87 ]
  }, {
    "id" : 24,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 26 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 27, 28 ]
  }, {
    "id" : 26,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "file|tree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 29, 30, 31 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 32 ]
  }, {
    "id" : 30,
    "token" : "parse",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 34, 35 ]
  }, {
    "id" : 32,
    "token" : "gum|tree|java|parser",
    "type" : "SimpleType",
    "children" : [ 33 ]
  }, {
    "id" : 33,
    "token" : "gum|tree|java|parser",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "file|input|stream",
    "type" : "SimpleType",
    "children" : [ 36 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 37, 38 ]
  }, {
    "id" : 36,
    "token" : "file|input|stream",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "to|file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 41, 42 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "Block",
    "children" : [ 43 ]
  }, {
    "id" : 41,
    "token" : "file|tree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 44 ]
  }, {
    "id" : 44,
    "token" : "file|visit|resultcontinue",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "collectionast|path",
    "type" : "ParameterizedType",
    "children" : [ 48, 49 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 52, 53 ]
  }, {
    "id" : 48,
    "token" : "collection",
    "type" : "SimpleType",
    "children" : [ 50 ]
  }, {
    "id" : 49,
    "token" : "ast|path",
    "type" : "SimpleType",
    "children" : [ 51 ]
  }, {
    "id" : 50,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "ast|path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "paths",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 54, 55, 56 ]
  }, {
    "id" : 54,
    "token" : "miner",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "retrieve|paths",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "file|tree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "collectionpath|context",
    "type" : "ParameterizedType",
    "children" : [ 60, 61 ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 64, 65 ]
  }, {
    "id" : 60,
    "token" : "collection",
    "type" : "SimpleType",
    "children" : [ 62 ]
  }, {
    "id" : 61,
    "token" : "path|context",
    "type" : "SimpleType",
    "children" : [ 63 ]
  }, {
    "id" : 62,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "path|context",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "path|contexts",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 66, 67, 68 ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 69, 70, 71 ]
  }, {
    "id" : 67,
    "token" : "collect",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 76, 77 ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 72, 73 ]
  }, {
    "id" : 70,
    "token" : "map",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "ExpressionMethodReference",
    "children" : [ 74, 75 ]
  }, {
    "id" : 72,
    "token" : "paths",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "stream",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "path|util|kt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "to|path|context",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "collectors",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "to|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 79, 80, 81, 82 ]
  }, {
    "id" : 79,
    "token" : "path|storage",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "store",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "path|contexts",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 83, 84 ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 85, 86 ]
  }, {
    "id" : 84,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "to|absolute|path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "file|visit|resultcontinue",
    "type" : "QualifiedName",
    "children" : [ ]
  } ]
}, {
  "name" : "IntArrayInitialization",
  "full_name" : "ComplexArrayInitialization.IntArrayInitialization",
  "file" : "astminer/testData/ComplexArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "IntArrayInitialization() {\n        array = ComplexObject[1];\n    }",
  "commit" : {
    "parents_cnt" : 1,
    "message" : "Add test for initialization of different arrays",
    "date" : "2019-1-14",
    "hash" : "e6a28f2e5a776b050d4a661c2853f123c672bb75"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "int|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ 3 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "complex|object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "IntArrayInitialization",
  "full_name" : "DoubleArrayInitialization.IntArrayInitialization",
  "file" : "astminer/testData/DoubleArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "IntArrayInitialization() {\n        array = double[1];\n    }",
  "commit" : {
    "parents_cnt" : 1,
    "message" : "Add test for initialization of different arrays",
    "date" : "2019-1-14",
    "hash" : "e6a28f2e5a776b050d4a661c2853f123c672bb75"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "int|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  } ]
}, {
  "name" : "IntArrayInitialization",
  "full_name" : "IntArrayInitialization.IntArrayInitialization",
  "file" : "astminer/testData/IntArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "IntArrayInitialization() {\n        array = int[1];\n    }",
  "commit" : {
    "parents_cnt" : 1,
    "message" : "Add test for initialization of different arrays",
    "date" : "2019-1-14",
    "hash" : "e6a28f2e5a776b050d4a661c2853f123c672bb75"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "int|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  } ]
}, {
  "name" : "StringArrayInitialization",
  "full_name" : "StringArrayInitialization.StringArrayInitialization",
  "file" : "astminer/testData/StringArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "StringArrayInitialization() {\n        array = String[1];\n    }",
  "commit" : {
    "parents_cnt" : 1,
    "message" : "Add test for initialization of different arrays",
    "date" : "2019-1-14",
    "hash" : "e6a28f2e5a776b050d4a661c2853f123c672bb75"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "string|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ 3 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "IntArrayInitialization",
  "full_name" : "ComplexArrayInitialization.IntArrayInitialization",
  "file" : "astminer/testData/arrayCalls/ComplexArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "IntArrayInitialization() {\n        array = new ComplexObject[1];\n    }",
  "commit" : {
    "parents_cnt" : 1,
    "message" : "Failing test with array access",
    "date" : "2019-1-14",
    "hash" : "ea88144324577022f7c09c20fbd878a00245393b"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "int|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ 3 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "complex|object",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "complex|object",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "complex|object",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "ComplexTest",
  "full_name" : "ComplexTest.ComplexTest",
  "file" : "astminer/testData/arrayCalls/ComplexTest.java",
  "doc" : null,
  "comment" : null,
  "body" : "public ComplexTest() {\n        array = new int[SIZE][SIZE];\n        for (int i = 0; i < SIZE; i++) {\n            for (int j = 0; j < SIZE; j++) {\n                array[i][j] = 0;\n            }\n        }\n    }",
  "commit" : {
    "parents_cnt" : 1,
    "message" : "Failing test with array access",
    "date" : "2019-1-14",
    "hash" : "ea88144324577022f7c09c20fbd878a00245393b"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "complex|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4, 5 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 6 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 15, 16, 17, 18 ]
  }, {
    "id" : 6,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 9, 10, 11 ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 10,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 19, 20 ]
  }, {
    "id" : 16,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 17,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 25 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "Block",
    "children" : [ 26 ]
  }, {
    "id" : 19,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 21, 22 ]
  }, {
    "id" : 21,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 27, 28, 29, 30 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 28,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 35, 36 ]
  }, {
    "id" : 29,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 37 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "Block",
    "children" : [ 38 ]
  }, {
    "id" : 31,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 39 ]
  }, {
    "id" : 39,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 44, 45 ]
  }, {
    "id" : 43,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "IntArrayInitialization",
  "full_name" : "DoubleArrayInitialization.IntArrayInitialization",
  "file" : "astminer/testData/arrayCalls/DoubleArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "IntArrayInitialization() {\n        array = new double[1];\n    }",
  "commit" : {
    "parents_cnt" : 1,
    "message" : "Failing test with array access",
    "date" : "2019-1-14",
    "hash" : "ea88144324577022f7c09c20fbd878a00245393b"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "int|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ 3 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  } ]
}, {
  "name" : "IntArrayInitialization",
  "full_name" : "IntArrayInitialization.IntArrayInitialization",
  "file" : "astminer/testData/arrayCalls/IntArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "IntArrayInitialization() {\n        array = new int[1];\n    }",
  "commit" : {
    "parents_cnt" : 1,
    "message" : "Failing test with array access",
    "date" : "2019-1-14",
    "hash" : "ea88144324577022f7c09c20fbd878a00245393b"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "int|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ 3 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  } ]
}, {
  "name" : "StringArrayInitialization",
  "full_name" : "StringArrayInitialization.StringArrayInitialization",
  "file" : "astminer/testData/arrayCalls/StringArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "StringArrayInitialization() {\n        array = new String[1];\n    }",
  "commit" : {
    "parents_cnt" : 1,
    "message" : "Failing test with array access",
    "date" : "2019-1-14",
    "hash" : "ea88144324577022f7c09c20fbd878a00245393b"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "string|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ 3 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "Main.main",
  "file" : "astminer/testData/examples/1.java",
  "doc" : null,
  "comment" : null,
  "body" : "public static void main(String[] args) {\n        System.out.println(\"Hello world\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #5 from vovak/performance_test",
    "date" : "2019-1-22",
    "hash" : "e89b5ee13abbee1ed4053ebf83e651fffc68a171"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 12 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 13 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 14,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "hello|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "fun",
  "full_name" : "SingleFunction.fun",
  "file" : "astminer/testData/examples/gumTreeMethodSplitter/1.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun(String[] args, int param) {\n        System.out.println(\"Hello again world!\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #5 from vovak/performance_test",
    "date" : "2019-1-22",
    "hash" : "e89b5ee13abbee1ed4053ebf83e651fffc68a171"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 13 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 14 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "InnerClass.SingleMethodInnerClass.main",
  "file" : "astminer/testData/examples/gumTreeMethodSplitter/2.java",
  "doc" : null,
  "comment" : null,
  "body" : "void main(String[] args) {\n            System.out.println(\"Hello world!\");\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #5 from vovak/performance_test",
    "date" : "2019-1-22",
    "hash" : "e89b5ee13abbee1ed4053ebf83e651fffc68a171"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 5,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 12,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "hello|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "InnerClass.SingleMethodInnerClass.main",
  "file" : "astminer/testData/examples/gumTreeMethodSplitter/3.java",
  "doc" : null,
  "comment" : null,
  "body" : "void main(String[] args) {\n            System.out.println(\"Hello world!\");\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #5 from vovak/performance_test",
    "date" : "2019-1-22",
    "hash" : "e89b5ee13abbee1ed4053ebf83e651fffc68a171"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 5,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 12,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "hello|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "fun",
  "full_name" : "SingleMethodInnerClass.fun",
  "file" : "astminer/testData/examples/gumTreeMethodSplitter/3.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun(String[] args, int param) {\n        System.out.println(\"Hello again world!\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #5 from vovak/performance_test",
    "date" : "2019-1-22",
    "hash" : "e89b5ee13abbee1ed4053ebf83e651fffc68a171"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 13 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 14 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "fun",
  "full_name" : "SingleFunction.fun",
  "file" : "astminer/testData/examples/gumTreeMethodSplitter/4.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun(int args, int param) {\n        System.out.println(\"Hello again world!\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #5 from vovak/performance_test",
    "date" : "2019-1-22",
    "hash" : "e89b5ee13abbee1ed4053ebf83e651fffc68a171"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 12,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "runExample",
  "full_name" : "AllJavaFiles.runExample",
  "file" : "astminer/src/main/java/astminer/examples/AllJavaFiles.java",
  "doc" : null,
  "comment" : null,
  "body" : "public static void runExample() {\n        final PathMiner miner = new PathMiner(new PathRetrievalSettings(5,5));\n        final PathStorage pathStorage = new VocabularyPathStorage();\n\n        final Path inputFolder = Paths.get(INPUT_FOLDER);\n\n        FileVisitor<Path> fileVisitor = new SimpleFileVisitor<Path>() {\n            @Override\n            public FileVisitResult visitFile(Path file, BasicFileAttributes attributes) throws IOException {\n                Node fileTree = new GumTreeJavaParser().parse(new FileInputStream(file.toFile()));\n                if (fileTree == null) {\n                    return FileVisitResult.CONTINUE;\n                }\n                final Collection<ASTPath> paths = miner.retrievePaths(fileTree);\n                final Collection<PathContext> pathContexts = paths\n                        .stream().map(PathUtilKt::toPathContext).collect(Collectors.toList());\n\n                pathStorage.store(pathContexts, file.toAbsolutePath().toString());\n\n                return FileVisitResult.CONTINUE;\n            }\n        };\n\n        try {\n            Files.walkFileTree(inputFolder, fileVisitor);\n            pathStorage.save(OUTPUT_FOLDER);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #9 from vovak/publishing",
    "date" : "2019-3-21",
    "hash" : "28fc7352ab9e7ede5541328198f692722713336c"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "run|example",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 6, 7, 8, 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 11, 12, 13 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25, 26 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 32, 33, 34 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 41, 42 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "TryStatement",
    "children" : [ 143, 144 ]
  }, {
    "id" : 11,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "path|miner",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "path|miner",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "miner",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 17, 18 ]
  }, {
    "id" : 17,
    "token" : "path|miner",
    "type" : "SimpleType",
    "children" : [ 19 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 20, 21, 22 ]
  }, {
    "id" : 19,
    "token" : "path|miner",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "path|retrieval|settings",
    "type" : "SimpleType",
    "children" : [ 23 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "path|retrieval|settings",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "path|storage",
    "type" : "SimpleType",
    "children" : [ 27 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 28, 29 ]
  }, {
    "id" : 27,
    "token" : "path|storage",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "path|storage",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 30 ]
  }, {
    "id" : 30,
    "token" : "vocabulary|path|storage",
    "type" : "SimpleType",
    "children" : [ 31 ]
  }, {
    "id" : 31,
    "token" : "vocabulary|path|storage",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "path",
    "type" : "SimpleType",
    "children" : [ 35 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 35,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "input|folder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39, 40 ]
  }, {
    "id" : 38,
    "token" : "paths",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "input|folder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "file|visitorpath",
    "type" : "ParameterizedType",
    "children" : [ 43, 44 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 47, 48 ]
  }, {
    "id" : 43,
    "token" : "file|visitor",
    "type" : "SimpleType",
    "children" : [ 45 ]
  }, {
    "id" : 44,
    "token" : "path",
    "type" : "SimpleType",
    "children" : [ 46 ]
  }, {
    "id" : 45,
    "token" : "file|visitor",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "file|visitor",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 49, 50 ]
  }, {
    "id" : 49,
    "token" : "simple|file|visitorpath",
    "type" : "ParameterizedType",
    "children" : [ 51, 52 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "AnonymousClassDeclaration",
    "children" : [ 55 ]
  }, {
    "id" : 51,
    "token" : "simple|file|visitor",
    "type" : "SimpleType",
    "children" : [ 53 ]
  }, {
    "id" : 52,
    "token" : "path",
    "type" : "SimpleType",
    "children" : [ 54 ]
  }, {
    "id" : 53,
    "token" : "simple|file|visitor",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 56, 57, 58, 59, 60, 61, 62, 63 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 64 ]
  }, {
    "id" : 57,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "file|visit|result",
    "type" : "SimpleType",
    "children" : [ 65 ]
  }, {
    "id" : 59,
    "token" : "visit|file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 66, 67 ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 69, 70 ]
  }, {
    "id" : 62,
    "token" : "io|exception",
    "type" : "SimpleType",
    "children" : [ 72 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "Block",
    "children" : [ 73, 74, 75, 76, 77, 78 ]
  }, {
    "id" : 64,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "file|visit|result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "path",
    "type" : "SimpleType",
    "children" : [ 68 ]
  }, {
    "id" : 67,
    "token" : "file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "basic|file|attributes",
    "type" : "SimpleType",
    "children" : [ 71 ]
  }, {
    "id" : 70,
    "token" : "attributes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "basic|file|attributes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "io|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 79, 80 ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 94, 95 ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 100, 101, 102 ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 112, 113, 114 ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 133 ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 142 ]
  }, {
    "id" : 79,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 81 ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 82, 83 ]
  }, {
    "id" : 81,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "file|tree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 84, 85, 86 ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 87 ]
  }, {
    "id" : 85,
    "token" : "parse",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 89, 90 ]
  }, {
    "id" : 87,
    "token" : "gum|tree|java|parser",
    "type" : "SimpleType",
    "children" : [ 88 ]
  }, {
    "id" : 88,
    "token" : "gum|tree|java|parser",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "file|input|stream",
    "type" : "SimpleType",
    "children" : [ 91 ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 92, 93 ]
  }, {
    "id" : 91,
    "token" : "file|input|stream",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "to|file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 96, 97 ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "Block",
    "children" : [ 98 ]
  }, {
    "id" : 96,
    "token" : "file|tree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 99 ]
  }, {
    "id" : 99,
    "token" : "file|visit|resultcontinue",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "collectionast|path",
    "type" : "ParameterizedType",
    "children" : [ 103, 104 ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 107, 108 ]
  }, {
    "id" : 103,
    "token" : "collection",
    "type" : "SimpleType",
    "children" : [ 105 ]
  }, {
    "id" : 104,
    "token" : "ast|path",
    "type" : "SimpleType",
    "children" : [ 106 ]
  }, {
    "id" : 105,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "ast|path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "paths",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 109, 110, 111 ]
  }, {
    "id" : 109,
    "token" : "miner",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "retrieve|paths",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "file|tree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "collectionpath|context",
    "type" : "ParameterizedType",
    "children" : [ 115, 116 ]
  }, {
    "id" : 114,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 119, 120 ]
  }, {
    "id" : 115,
    "token" : "collection",
    "type" : "SimpleType",
    "children" : [ 117 ]
  }, {
    "id" : 116,
    "token" : "path|context",
    "type" : "SimpleType",
    "children" : [ 118 ]
  }, {
    "id" : 117,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "path|context",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "path|contexts",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 121, 122, 123 ]
  }, {
    "id" : 121,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 124, 125, 126 ]
  }, {
    "id" : 122,
    "token" : "collect",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 131, 132 ]
  }, {
    "id" : 124,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 127, 128 ]
  }, {
    "id" : 125,
    "token" : "map",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "",
    "type" : "ExpressionMethodReference",
    "children" : [ 129, 130 ]
  }, {
    "id" : 127,
    "token" : "paths",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "stream",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "path|util|kt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "to|path|context",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "collectors",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 132,
    "token" : "to|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 134, 135, 136, 137 ]
  }, {
    "id" : 134,
    "token" : "path|storage",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 135,
    "token" : "store",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "path|contexts",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 137,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 138, 139 ]
  }, {
    "id" : 138,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 140, 141 ]
  }, {
    "id" : 139,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 140,
    "token" : "file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 141,
    "token" : "to|absolute|path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "file|visit|resultcontinue",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 143,
    "token" : "",
    "type" : "Block",
    "children" : [ 145, 146 ]
  }, {
    "id" : 144,
    "token" : "",
    "type" : "CatchClause",
    "children" : [ 156, 157 ]
  }, {
    "id" : 145,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 147 ]
  }, {
    "id" : 146,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 152 ]
  }, {
    "id" : 147,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 148, 149, 150, 151 ]
  }, {
    "id" : 148,
    "token" : "files",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "walk|file|tree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "input|folder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 151,
    "token" : "file|visitor",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 152,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 153, 154, 155 ]
  }, {
    "id" : 153,
    "token" : "path|storage",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 154,
    "token" : "save",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 155,
    "token" : "output|folder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 158, 159 ]
  }, {
    "id" : 157,
    "token" : "",
    "type" : "Block",
    "children" : [ 161 ]
  }, {
    "id" : 158,
    "token" : "io|exception",
    "type" : "SimpleType",
    "children" : [ 160 ]
  }, {
    "id" : 159,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 160,
    "token" : "io|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 162 ]
  }, {
    "id" : 162,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 163, 164 ]
  }, {
    "id" : 163,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 164,
    "token" : "print|stack|trace",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "visitFile",
  "full_name" : "fileVisitor.runExample.AllJavaFiles.visitFile",
  "file" : "astminer/src/main/java/astminer/examples/AllJavaFiles.java",
  "doc" : null,
  "comment" : null,
  "body" : "@Override\n            public FileVisitResult visitFile(Path file, BasicFileAttributes attributes) throws IOException {\n                Node fileTree = new GumTreeJavaParser().parse(new FileInputStream(file.toFile()));\n                if (fileTree == null) {\n                    return FileVisitResult.CONTINUE;\n                }\n                final Collection<ASTPath> paths = miner.retrievePaths(fileTree);\n                final Collection<PathContext> pathContexts = paths\n                        .stream().map(PathUtilKt::toPathContext).collect(Collectors.toList());\n\n                pathStorage.store(pathContexts, file.toAbsolutePath().toString());\n\n                return FileVisitResult.CONTINUE;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #9 from vovak/publishing",
    "date" : "2019-3-21",
    "hash" : "28fc7352ab9e7ede5541328198f692722713336c"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 9 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "file|visit|result",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 4,
    "token" : "visit|file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15 ]
  }, {
    "id" : 7,
    "token" : "io|exception",
    "type" : "SimpleType",
    "children" : [ 17 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Block",
    "children" : [ 18, 19, 20, 21, 22, 23 ]
  }, {
    "id" : 9,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "file|visit|result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "path",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "basic|file|attributes",
    "type" : "SimpleType",
    "children" : [ 16 ]
  }, {
    "id" : 15,
    "token" : "attributes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "basic|file|attributes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "io|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 39, 40 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 45, 46, 47 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 57, 58, 59 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 78 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 87 ]
  }, {
    "id" : 24,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 26 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 27, 28 ]
  }, {
    "id" : 26,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "file|tree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 29, 30, 31 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 32 ]
  }, {
    "id" : 30,
    "token" : "parse",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 34, 35 ]
  }, {
    "id" : 32,
    "token" : "gum|tree|java|parser",
    "type" : "SimpleType",
    "children" : [ 33 ]
  }, {
    "id" : 33,
    "token" : "gum|tree|java|parser",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "file|input|stream",
    "type" : "SimpleType",
    "children" : [ 36 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 37, 38 ]
  }, {
    "id" : 36,
    "token" : "file|input|stream",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "to|file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 41, 42 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "Block",
    "children" : [ 43 ]
  }, {
    "id" : 41,
    "token" : "file|tree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 44 ]
  }, {
    "id" : 44,
    "token" : "file|visit|resultcontinue",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "collectionast|path",
    "type" : "ParameterizedType",
    "children" : [ 48, 49 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 52, 53 ]
  }, {
    "id" : 48,
    "token" : "collection",
    "type" : "SimpleType",
    "children" : [ 50 ]
  }, {
    "id" : 49,
    "token" : "ast|path",
    "type" : "SimpleType",
    "children" : [ 51 ]
  }, {
    "id" : 50,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "ast|path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "paths",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 54, 55, 56 ]
  }, {
    "id" : 54,
    "token" : "miner",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "retrieve|paths",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "file|tree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "collectionpath|context",
    "type" : "ParameterizedType",
    "children" : [ 60, 61 ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 64, 65 ]
  }, {
    "id" : 60,
    "token" : "collection",
    "type" : "SimpleType",
    "children" : [ 62 ]
  }, {
    "id" : 61,
    "token" : "path|context",
    "type" : "SimpleType",
    "children" : [ 63 ]
  }, {
    "id" : 62,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "path|context",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "path|contexts",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 66, 67, 68 ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 69, 70, 71 ]
  }, {
    "id" : 67,
    "token" : "collect",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 76, 77 ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 72, 73 ]
  }, {
    "id" : 70,
    "token" : "map",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "ExpressionMethodReference",
    "children" : [ 74, 75 ]
  }, {
    "id" : 72,
    "token" : "paths",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "stream",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "path|util|kt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "to|path|context",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "collectors",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "to|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 79, 80, 81, 82 ]
  }, {
    "id" : 79,
    "token" : "path|storage",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "store",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "path|contexts",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 83, 84 ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 85, 86 ]
  }, {
    "id" : 84,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "file",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "to|absolute|path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "file|visit|resultcontinue",
    "type" : "QualifiedName",
    "children" : [ ]
  } ]
}, {
  "name" : "fun",
  "full_name" : "SingleFunction.fun",
  "file" : "astminer/testData/examples/test_dir_name_extension.java/1.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun(String[] args, int param) {\n        System.out.println(\"Hello again world!\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #21 from vovak/fix_dir_name_extension",
    "date" : "2019-6-8",
    "hash" : "ef996ec5229aeb7709f48f4b85869e2f19c94a4a"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 13 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 14 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "foo",
  "full_name" : "Foo.foo",
  "file" : "astminer/testData/common/NonParsableFile.java",
  "doc" : "/**\n     * Prints \"bar'.\n     */",
  "comment" : null,
  "body" : null,
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #26 from vovak/common-file-utils",
    "date" : "2019-8-5",
    "hash" : "5ab8cdffd3ba908299926051c3b351996428d108"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "foo",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "prints|bar",
    "type" : "TextElement",
    "children" : [ ]
  } ]
}, {
  "name" : "foo",
  "full_name" : "Foo.foo",
  "file" : "astminer/testData/common/ParsableFile.java",
  "doc" : "/**\n     * Prints \"bar'.\n     */",
  "comment" : null,
  "body" : "public static void foo() {\n        System.out.println(\"bar\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #26 from vovak/common-file-utils",
    "date" : "2019-8-5",
    "hash" : "5ab8cdffd3ba908299926051c3b351996428d108"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "foo",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 9 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "prints|bar",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 10 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 11, 12, 13 ]
  }, {
    "id" : 11,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "bar",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "hi",
  "full_name" : "A.hi",
  "file" : "astminer/testData/featureextraction/hello.java",
  "doc" : null,
  "comment" : null,
  "body" : "void hi() {\n        String hi = \"Hello\";\n        int a = 5;\n        if (a > 0) {\n            a = 0;\n        }\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #23 from vovak/compare",
    "date" : "2019-8-29",
    "hash" : "1aa414d29c77932b3c44d420243401ba994db19a"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "hi",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4, 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 10, 11 ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "hi",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "hello",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "Block",
    "children" : [ 20 ]
  }, {
    "id" : 18,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 21 ]
  }, {
    "id" : 21,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "IntArrayInitialization",
  "full_name" : "ComplexArrayInitialization.IntArrayInitialization",
  "file" : "astminer/astminer-cli/data/testData/arrayCalls/ComplexArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "IntArrayInitialization() {\n        array = new ComplexObject[1];\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #30 from vovak/usage-example",
    "date" : "2019-9-16",
    "hash" : "cf8d5d3eea5c3033c100c744787ad8158caf8860"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "int|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ 3 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "complex|object",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "complex|object",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "complex|object",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "ComplexTest",
  "full_name" : "ComplexTest.ComplexTest",
  "file" : "astminer/astminer-cli/data/testData/arrayCalls/ComplexTest.java",
  "doc" : null,
  "comment" : null,
  "body" : "public ComplexTest() {\n        array = new int[SIZE][SIZE];\n        for (int i = 0; i < SIZE; i++) {\n            for (int j = 0; j < SIZE; j++) {\n                array[i][j] = 0;\n            }\n        }\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #30 from vovak/usage-example",
    "date" : "2019-9-16",
    "hash" : "cf8d5d3eea5c3033c100c744787ad8158caf8860"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "complex|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4, 5 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 6 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 15, 16, 17, 18 ]
  }, {
    "id" : 6,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 9, 10, 11 ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 10,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 19, 20 ]
  }, {
    "id" : 16,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 17,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 25 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "Block",
    "children" : [ 26 ]
  }, {
    "id" : 19,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 21, 22 ]
  }, {
    "id" : 21,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 27, 28, 29, 30 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 28,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 35, 36 ]
  }, {
    "id" : 29,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 37 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "Block",
    "children" : [ 38 ]
  }, {
    "id" : 31,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 39 ]
  }, {
    "id" : 39,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 44, 45 ]
  }, {
    "id" : 43,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "IntArrayInitialization",
  "full_name" : "DoubleArrayInitialization.IntArrayInitialization",
  "file" : "astminer/astminer-cli/data/testData/arrayCalls/DoubleArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "IntArrayInitialization() {\n        array = new double[1];\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #30 from vovak/usage-example",
    "date" : "2019-9-16",
    "hash" : "cf8d5d3eea5c3033c100c744787ad8158caf8860"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "int|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ 3 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  } ]
}, {
  "name" : "IntArrayInitialization",
  "full_name" : "IntArrayInitialization.IntArrayInitialization",
  "file" : "astminer/astminer-cli/data/testData/arrayCalls/IntArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "IntArrayInitialization() {\n        array = new int[1];\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #30 from vovak/usage-example",
    "date" : "2019-9-16",
    "hash" : "cf8d5d3eea5c3033c100c744787ad8158caf8860"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "int|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ 3 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  } ]
}, {
  "name" : "StringArrayInitialization",
  "full_name" : "StringArrayInitialization.StringArrayInitialization",
  "file" : "astminer/astminer-cli/data/testData/arrayCalls/StringArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "StringArrayInitialization() {\n        array = new String[1];\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #30 from vovak/usage-example",
    "date" : "2019-9-16",
    "hash" : "cf8d5d3eea5c3033c100c744787ad8158caf8860"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "string|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ 3 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "foo",
  "full_name" : "Foo.foo",
  "file" : "astminer/astminer-cli/data/testData/common/NonParsableFile.java",
  "doc" : "/**\n     * Prints \"bar'.\n     */",
  "comment" : null,
  "body" : null,
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #30 from vovak/usage-example",
    "date" : "2019-9-16",
    "hash" : "cf8d5d3eea5c3033c100c744787ad8158caf8860"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "foo",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "prints|bar",
    "type" : "TextElement",
    "children" : [ ]
  } ]
}, {
  "name" : "foo",
  "full_name" : "Foo.foo",
  "file" : "astminer/astminer-cli/data/testData/common/ParsableFile.java",
  "doc" : "/**\n     * Prints \"bar'.\n     */",
  "comment" : null,
  "body" : "public static void foo() {\n        System.out.println(\"bar\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #30 from vovak/usage-example",
    "date" : "2019-9-16",
    "hash" : "cf8d5d3eea5c3033c100c744787ad8158caf8860"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "foo",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 9 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "prints|bar",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 10 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 11, 12, 13 ]
  }, {
    "id" : 11,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "bar",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "Main.main",
  "file" : "astminer/astminer-cli/data/testData/examples/1.java",
  "doc" : null,
  "comment" : null,
  "body" : "public static void main(String[] args) {\n        System.out.println(\"Hello world\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #30 from vovak/usage-example",
    "date" : "2019-9-16",
    "hash" : "cf8d5d3eea5c3033c100c744787ad8158caf8860"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 12 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 13 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 14,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "hello|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "fun",
  "full_name" : "SingleFunction.fun",
  "file" : "astminer/astminer-cli/data/testData/examples/test_dir_name_extension.java/1.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun(String[] args, int param) {\n        System.out.println(\"Hello again world!\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #30 from vovak/usage-example",
    "date" : "2019-9-16",
    "hash" : "cf8d5d3eea5c3033c100c744787ad8158caf8860"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 13 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 14 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "hi",
  "full_name" : "A.hi",
  "file" : "astminer/astminer-cli/data/testData/featureextraction/hello.java",
  "doc" : null,
  "comment" : null,
  "body" : "void hi() {\n        String hi = \"Hello\";\n        int a = 5;\n        if (a > 0) {\n            a = 0;\n        }\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #30 from vovak/usage-example",
    "date" : "2019-9-16",
    "hash" : "cf8d5d3eea5c3033c100c744787ad8158caf8860"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "hi",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4, 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 10, 11 ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "hi",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "hello",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "Block",
    "children" : [ 20 ]
  }, {
    "id" : 18,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 21 ]
  }, {
    "id" : 21,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "fun",
  "full_name" : "SingleFunction.fun",
  "file" : "astminer/astminer-cli/data/testData/gumTreeMethodSplitter/1.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun(String[] args, int param) {\n        System.out.println(\"Hello again world!\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #30 from vovak/usage-example",
    "date" : "2019-9-16",
    "hash" : "cf8d5d3eea5c3033c100c744787ad8158caf8860"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 13 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 14 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "InnerClass.SingleMethodInnerClass.main",
  "file" : "astminer/astminer-cli/data/testData/gumTreeMethodSplitter/2.java",
  "doc" : null,
  "comment" : null,
  "body" : "void main(String[] args) {\n            System.out.println(\"Hello world!\");\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #30 from vovak/usage-example",
    "date" : "2019-9-16",
    "hash" : "cf8d5d3eea5c3033c100c744787ad8158caf8860"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 5,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 12,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "hello|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "InnerClass.SingleMethodInnerClass.main",
  "file" : "astminer/astminer-cli/data/testData/gumTreeMethodSplitter/3.java",
  "doc" : null,
  "comment" : null,
  "body" : "void main(String[] args) {\n            System.out.println(\"Hello world!\");\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #30 from vovak/usage-example",
    "date" : "2019-9-16",
    "hash" : "cf8d5d3eea5c3033c100c744787ad8158caf8860"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 5,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 12,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "hello|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "fun",
  "full_name" : "SingleMethodInnerClass.fun",
  "file" : "astminer/astminer-cli/data/testData/gumTreeMethodSplitter/3.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun(String[] args, int param) {\n        System.out.println(\"Hello again world!\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #30 from vovak/usage-example",
    "date" : "2019-9-16",
    "hash" : "cf8d5d3eea5c3033c100c744787ad8158caf8860"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 13 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 14 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "fun",
  "full_name" : "SingleFunction.fun",
  "file" : "astminer/astminer-cli/data/testData/gumTreeMethodSplitter/4.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun(int args, int param) {\n        System.out.println(\"Hello again world!\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #30 from vovak/usage-example",
    "date" : "2019-9-16",
    "hash" : "cf8d5d3eea5c3033c100c744787ad8158caf8860"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 12,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "fun_withReallyLong_And_ComplicatedName",
  "full_name" : "SingleFunction.fun_withReallyLong_And_ComplicatedName",
  "file" : "astminer/testData/code2vecPathMining/1.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun_withReallyLong_And_ComplicatedName(String[] args, int param) {\n        System.out.println(\" Hello again world!  \");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #31 from vovak/code2vec-output",
    "date" : "2019-9-19",
    "hash" : "cf7623f5de30e953e084152f63314084c281df25"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun|with|really|long|and|complicated|name",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 13 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 14 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "Another_Fun_withReallyLong_And_ComplicatedName",
  "full_name" : "SingleFunction.Another_Fun_withReallyLong_And_ComplicatedName",
  "file" : "astminer/testData/code2vecPathMining/1.java",
  "doc" : null,
  "comment" : null,
  "body" : "int Another_Fun_withReallyLong_And_ComplicatedName(String s)) {\n        System.out.println(s);\n    }\n}",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #31 from vovak/code2vec-output",
    "date" : "2019-9-19",
    "hash" : "cf7623f5de30e953e084152f63314084c281df25"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "another|fun|with|really|long|and|complicated|name",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "functionReturningVoid",
  "full_name" : "Class1.functionReturningVoid",
  "file" : "astminer/testData/methodSplitting/testMethodSplitting.java",
  "doc" : null,
  "comment" : null,
  "body" : "void functionReturningVoid() {}",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #31 from vovak/code2vec-output",
    "date" : "2019-9-19",
    "hash" : "cf7623f5de30e953e084152f63314084c281df25"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "function|returning|void",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  } ]
}, {
  "name" : "functionReturningInt",
  "full_name" : "Class1.functionReturningInt",
  "file" : "astminer/testData/methodSplitting/testMethodSplitting.java",
  "doc" : null,
  "comment" : null,
  "body" : "int functionReturningInt() {\n        return 0;\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #31 from vovak/code2vec-output",
    "date" : "2019-9-19",
    "hash" : "cf7623f5de30e953e084152f63314084c281df25"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "function|returning|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "functionReturningStrings",
  "full_name" : "Class1.functionReturningStrings",
  "file" : "astminer/testData/methodSplitting/testMethodSplitting.java",
  "doc" : null,
  "comment" : null,
  "body" : "String[] functionReturningStrings() {\n        return \"\";\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #31 from vovak/code2vec-output",
    "date" : "2019-9-19",
    "hash" : "cf7623f5de30e953e084152f63314084c281df25"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 4, 5 ]
  }, {
    "id" : 2,
    "token" : "function|returning|strings",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 7 ]
  }, {
    "id" : 4,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "functionReturningClass",
  "full_name" : "Class1.functionReturningClass",
  "file" : "astminer/testData/methodSplitting/testMethodSplitting.java",
  "doc" : null,
  "comment" : null,
  "body" : "Class1 functionReturningClass() {\n        return Class1();\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #31 from vovak/code2vec-output",
    "date" : "2019-9-19",
    "hash" : "cf7623f5de30e953e084152f63314084c281df25"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "class",
    "type" : "SimpleType",
    "children" : [ 4 ]
  }, {
    "id" : 2,
    "token" : "function|returning|class",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 4,
    "token" : "class",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 7 ]
  }, {
    "id" : 7,
    "token" : "class",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "functionInClass1",
  "full_name" : "Class1.functionInClass1",
  "file" : "astminer/testData/methodSplitting/testMethodSplitting.java",
  "doc" : null,
  "comment" : null,
  "body" : "void functionInClass1() {}",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #31 from vovak/code2vec-output",
    "date" : "2019-9-19",
    "hash" : "cf7623f5de30e953e084152f63314084c281df25"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "function|in|class",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  } ]
}, {
  "name" : "functionInClass2",
  "full_name" : "Class2.Class1.functionInClass2",
  "file" : "astminer/testData/methodSplitting/testMethodSplitting.java",
  "doc" : null,
  "comment" : null,
  "body" : "void functionInClass2() {}",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #31 from vovak/code2vec-output",
    "date" : "2019-9-19",
    "hash" : "cf7623f5de30e953e084152f63314084c281df25"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "function|in|class",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  } ]
}, {
  "name" : "functionWithNoParameters",
  "full_name" : "Class1.functionWithNoParameters",
  "file" : "astminer/testData/methodSplitting/testMethodSplitting.java",
  "doc" : null,
  "comment" : null,
  "body" : "void functionWithNoParameters() {}",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #31 from vovak/code2vec-output",
    "date" : "2019-9-19",
    "hash" : "cf7623f5de30e953e084152f63314084c281df25"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "function|with|no|parameters",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  } ]
}, {
  "name" : "functionWithOneParameter",
  "full_name" : "Class1.functionWithOneParameter",
  "file" : "astminer/testData/methodSplitting/testMethodSplitting.java",
  "doc" : null,
  "comment" : null,
  "body" : "void functionWithOneParameter(int p1) {}",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #31 from vovak/code2vec-output",
    "date" : "2019-9-19",
    "hash" : "cf7623f5de30e953e084152f63314084c281df25"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "function|with|one|parameter",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "functionWithThreeParameters",
  "full_name" : "Class1.functionWithThreeParameters",
  "file" : "astminer/testData/methodSplitting/testMethodSplitting.java",
  "doc" : null,
  "comment" : null,
  "body" : "void functionWithThreeParameters(Class p1, String[][] p2, int[]... p3) {}",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #31 from vovak/code2vec-output",
    "date" : "2019-9-19",
    "hash" : "cf7623f5de30e953e084152f63314084c281df25"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "function|with|three|parameters",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 16, 17 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "class",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "class",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 11,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  } ]
}, {
  "name" : "JavaScriptBaseLexer",
  "full_name" : "JavaScriptBaseLexer.JavaScriptBaseLexer",
  "file" : "astminer/src/main/java/me/vovak/antlr/parser/JavaScriptBaseLexer.java",
  "doc" : null,
  "comment" : null,
  "body" : "public JavaScriptBaseLexer(CharStream input) {\n        super(input);\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #39 from vovak/js",
    "date" : "2019-10-16",
    "hash" : "ec8d7fe22f78f07e2a278c9af12b0a5253435abe"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "java|script|base|lexer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 8 ]
  }, {
    "id" : 5,
    "token" : "char|stream",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "input",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "char|stream",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "SuperConstructorInvocation",
    "children" : [ 9 ]
  }, {
    "id" : 9,
    "token" : "input",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "getStrictDefault",
  "full_name" : "JavaScriptBaseLexer.getStrictDefault",
  "file" : "astminer/src/main/java/me/vovak/antlr/parser/JavaScriptBaseLexer.java",
  "doc" : null,
  "comment" : null,
  "body" : "public boolean getStrictDefault() {\n        return useStrictDefault;\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #39 from vovak/js",
    "date" : "2019-10-16",
    "hash" : "ec8d7fe22f78f07e2a278c9af12b0a5253435abe"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "get|strict|default",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "use|strict|default",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "setUseStrictDefault",
  "full_name" : "JavaScriptBaseLexer.setUseStrictDefault",
  "file" : "astminer/src/main/java/me/vovak/antlr/parser/JavaScriptBaseLexer.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void setUseStrictDefault(boolean value) {\n        useStrictDefault = value;\n        useStrictCurrent = value;\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #39 from vovak/js",
    "date" : "2019-10-16",
    "hash" : "ec8d7fe22f78f07e2a278c9af12b0a5253435abe"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "set|use|strict|default",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 8, 9 ]
  }, {
    "id" : 6,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 13 ]
  }, {
    "id" : 10,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 11, 12 ]
  }, {
    "id" : 11,
    "token" : "use|strict|default",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "use|strict|current",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "IsSrictMode",
  "full_name" : "JavaScriptBaseLexer.IsSrictMode",
  "file" : "astminer/src/main/java/me/vovak/antlr/parser/JavaScriptBaseLexer.java",
  "doc" : null,
  "comment" : null,
  "body" : "public boolean IsSrictMode() {\n        return useStrictCurrent;\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #39 from vovak/js",
    "date" : "2019-10-16",
    "hash" : "ec8d7fe22f78f07e2a278c9af12b0a5253435abe"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "is|srict|mode",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "use|strict|current",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "nextToken",
  "full_name" : "JavaScriptBaseLexer.nextToken",
  "file" : "astminer/src/main/java/me/vovak/antlr/parser/JavaScriptBaseLexer.java",
  "doc" : "/**\n     * Return the next token from the character stream and records this last\n     * token in case it resides on the default channel. This recorded token\n     * is used to determine when the lexer could possibly match a regex\n     * literal. Also changes scopeStrictModes stack if tokenize special\n     * string 'use strict';\n     *\n     * @return the next token from the character stream.\n     */",
  "comment" : null,
  "body" : "@Override\n    public Token nextToken() {\n        Token next = super.nextToken();\n\n        if (next.getChannel() == Token.DEFAULT_CHANNEL) {\n            // Keep track of the last token on the default channel.\n            this.lastToken = next;\n        }\n\n        return next;\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #39 from vovak/js",
    "date" : "2019-10-16",
    "hash" : "ec8d7fe22f78f07e2a278c9af12b0a5253435abe"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7, 8 ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 15 ]
  }, {
    "id" : 3,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "token",
    "type" : "SimpleType",
    "children" : [ 16 ]
  }, {
    "id" : 5,
    "token" : "next|token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 9, 10, 11, 12, 13 ]
  }, {
    "id" : 8,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 14 ]
  }, {
    "id" : 9,
    "token" : "return|the|next|token|from|the|character|stream|and|records|this|last",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "token|in|case|it|resides|on|the|default|channel|this|recorded|token",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "is|used|to|determine|when|the|lexer|could|possibly|match|a|regex",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "literal|also|changes|scope|strict|modes|stack|if|tokenize|special",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "string|use|strict",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "the|next|token|from|the|character|stream",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 26, 27 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 38 ]
  }, {
    "id" : 20,
    "token" : "token",
    "type" : "SimpleType",
    "children" : [ 22 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 23, 24 ]
  }, {
    "id" : 22,
    "token" : "token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "next",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "SuperMethodInvocation",
    "children" : [ 25 ]
  }, {
    "id" : 25,
    "token" : "next|token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 28, 29 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "Block",
    "children" : [ 32 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 30, 31 ]
  }, {
    "id" : 29,
    "token" : "tokendefault|channel",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "next",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "get|channel",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 33 ]
  }, {
    "id" : 33,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 36, 37 ]
  }, {
    "id" : 35,
    "token" : "next",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "last|token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "next",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "ProcessOpenBrace",
  "full_name" : "JavaScriptBaseLexer.ProcessOpenBrace",
  "file" : "astminer/src/main/java/me/vovak/antlr/parser/JavaScriptBaseLexer.java",
  "doc" : null,
  "comment" : null,
  "body" : "protected void ProcessOpenBrace()\n    {\n        useStrictCurrent = scopeStrictModes.size() > 0 && scopeStrictModes.peek() ? true : useStrictDefault;\n        scopeStrictModes.push(useStrictCurrent);\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #39 from vovak/js",
    "date" : "2019-10-16",
    "hash" : "ec8d7fe22f78f07e2a278c9af12b0a5253435abe"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "protected",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "process|open|brace",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 21 ]
  }, {
    "id" : 7,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 8, 9 ]
  }, {
    "id" : 8,
    "token" : "use|strict|current",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ConditionalExpression",
    "children" : [ 10, 11, 12 ]
  }, {
    "id" : 10,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 13, 14 ]
  }, {
    "id" : 11,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "use|strict|default",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 19, 20 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 17, 18 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "scope|strict|modes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "scope|strict|modes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "peek",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 22, 23, 24 ]
  }, {
    "id" : 22,
    "token" : "scope|strict|modes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "push",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "use|strict|current",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "ProcessCloseBrace",
  "full_name" : "JavaScriptBaseLexer.ProcessCloseBrace",
  "file" : "astminer/src/main/java/me/vovak/antlr/parser/JavaScriptBaseLexer.java",
  "doc" : null,
  "comment" : null,
  "body" : "protected void ProcessCloseBrace()\n    {\n        useStrictCurrent = scopeStrictModes.size() > 0 ? scopeStrictModes.pop() : useStrictDefault;\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #39 from vovak/js",
    "date" : "2019-10-16",
    "hash" : "ec8d7fe22f78f07e2a278c9af12b0a5253435abe"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "protected",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "process|close|brace",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "use|strict|current",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ConditionalExpression",
    "children" : [ 9, 10, 11 ]
  }, {
    "id" : 9,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 12, 13 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 16, 17 ]
  }, {
    "id" : 11,
    "token" : "use|strict|default",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 14, 15 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "scope|strict|modes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "scope|strict|modes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "pop",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "ProcessStringLiteral",
  "full_name" : "JavaScriptBaseLexer.ProcessStringLiteral",
  "file" : "astminer/src/main/java/me/vovak/antlr/parser/JavaScriptBaseLexer.java",
  "doc" : null,
  "comment" : null,
  "body" : "protected void ProcessStringLiteral()\n    {\n        if (lastToken == null || lastToken.getType() == JavaScriptLexer.OpenBrace)\n        {\n            String text = getText();\n            if (text.equals(\"\\\"use strict\\\"\") || text.equals(\"'use strict'\"))\n            {\n                if (scopeStrictModes.size() > 0)\n                    scopeStrictModes.pop();\n                useStrictCurrent = true;\n                scopeStrictModes.push(useStrictCurrent);\n            }\n        }\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #39 from vovak/js",
    "date" : "2019-10-16",
    "hash" : "ec8d7fe22f78f07e2a278c9af12b0a5253435abe"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "protected",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "process|string|literal",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 6, 7 ]
  }, {
    "id" : 6,
    "token" : "||",
    "type" : "InfixExpression",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 16, 17 ]
  }, {
    "id" : 8,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 10, 11 ]
  }, {
    "id" : 9,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 12, 13 ]
  }, {
    "id" : 10,
    "token" : "last|token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 14, 15 ]
  }, {
    "id" : 13,
    "token" : "java|script|lexeropen|brace",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "last|token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "get|type",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 18,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 23 ]
  }, {
    "id" : 23,
    "token" : "get|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "||",
    "type" : "InfixExpression",
    "children" : [ 26, 27 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "Block",
    "children" : [ 34, 35, 36 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28, 29, 30 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 31, 32, 33 ]
  }, {
    "id" : 28,
    "token" : "text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "use|strict",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "use|strict",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 37, 38 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 46 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 49 ]
  }, {
    "id" : 37,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 39, 40 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 43 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 41, 42 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "scope|strict|modes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 44, 45 ]
  }, {
    "id" : 44,
    "token" : "scope|strict|modes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "pop",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 47, 48 ]
  }, {
    "id" : 47,
    "token" : "use|strict|current",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 50, 51, 52 ]
  }, {
    "id" : 50,
    "token" : "scope|strict|modes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "push",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "use|strict|current",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "IsRegexPossible",
  "full_name" : "JavaScriptBaseLexer.IsRegexPossible",
  "file" : "astminer/src/main/java/me/vovak/antlr/parser/JavaScriptBaseLexer.java",
  "doc" : "/**\n     * Returns {@code true} if the lexer can match a regex literal.\n     */",
  "comment" : null,
  "body" : "protected boolean IsRegexPossible() {\n\n        if (this.lastToken == null) {\n            // No token has been produced yet: at the start of the input,\n            // no division is possible, so a regex literal _is_ possible.\n            return true;\n        }\n\n        switch (this.lastToken.getType()) {\n            case JavaScriptLexer.Identifier:\n            case JavaScriptLexer.NullLiteral:\n            case JavaScriptLexer.BooleanLiteral:\n            case JavaScriptLexer.This:\n            case JavaScriptLexer.CloseBracket:\n            case JavaScriptLexer.CloseParen:\n            case JavaScriptLexer.OctalIntegerLiteral:\n            case JavaScriptLexer.DecimalLiteral:\n            case JavaScriptLexer.HexIntegerLiteral:\n            case JavaScriptLexer.StringLiteral:\n            case JavaScriptLexer.PlusPlus:\n            case JavaScriptLexer.MinusMinus:\n                // After any of the tokens above, no regex literal can follow.\n                return false;\n            default:\n                // In all other cases, a regex literal _is_ possible.\n                return true;\n        }\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #39 from vovak/js",
    "date" : "2019-10-16",
    "hash" : "ec8d7fe22f78f07e2a278c9af12b0a5253435abe"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 6 ]
  }, {
    "id" : 2,
    "token" : "protected",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "is|regex|possible",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 7, 8, 9 ]
  }, {
    "id" : 7,
    "token" : "returns",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "if|the|lexer|can|match|a|regex|literal",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "true",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 13, 14 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "SwitchStatement",
    "children" : [ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 ]
  }, {
    "id" : 13,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Block",
    "children" : [ 19 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 17, 18 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "last|token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 20 ]
  }, {
    "id" : 20,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 37, 38 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "SwitchCase",
    "children" : [ 41 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "SwitchCase",
    "children" : [ 42 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "SwitchCase",
    "children" : [ 43 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "SwitchCase",
    "children" : [ 44 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "SwitchCase",
    "children" : [ 45 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "SwitchCase",
    "children" : [ 46 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "SwitchCase",
    "children" : [ 47 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "SwitchCase",
    "children" : [ 48 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "SwitchCase",
    "children" : [ 49 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "SwitchCase",
    "children" : [ 50 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "SwitchCase",
    "children" : [ 51 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "SwitchCase",
    "children" : [ 52 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 53 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "SwitchCase",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 54 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 39, 40 ]
  }, {
    "id" : 38,
    "token" : "get|type",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "last|token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "java|script|lexeridentifier",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "java|script|lexernull|literal",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "java|script|lexerboolean|literal",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "java|script|lexerthis",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "java|script|lexerclose|bracket",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "java|script|lexerclose|paren",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "java|script|lexeroctal|integer|literal",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "java|script|lexerdecimal|literal",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "java|script|lexerhex|integer|literal",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "java|script|lexerstring|literal",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "java|script|lexerplus|plus",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "java|script|lexerminus|minus",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "JavaScriptBaseParser",
  "full_name" : "JavaScriptBaseParser.JavaScriptBaseParser",
  "file" : "astminer/src/main/java/me/vovak/antlr/parser/JavaScriptBaseParser.java",
  "doc" : null,
  "comment" : null,
  "body" : "public JavaScriptBaseParser(TokenStream input) {\n        super(input);\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #39 from vovak/js",
    "date" : "2019-10-16",
    "hash" : "ec8d7fe22f78f07e2a278c9af12b0a5253435abe"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "java|script|base|parser",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 8 ]
  }, {
    "id" : 5,
    "token" : "token|stream",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "input",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "token|stream",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "SuperConstructorInvocation",
    "children" : [ 9 ]
  }, {
    "id" : 9,
    "token" : "input",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "p",
  "full_name" : "JavaScriptBaseParser.p",
  "file" : "astminer/src/main/java/me/vovak/antlr/parser/JavaScriptBaseParser.java",
  "doc" : "/**\n     * Short form for prev(String str)\n     */",
  "comment" : null,
  "body" : "protected boolean p(String str) {\n        return prev(str);\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #39 from vovak/js",
    "date" : "2019-10-16",
    "hash" : "ec8d7fe22f78f07e2a278c9af12b0a5253435abe"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "protected",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 12 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "short|form|for|prevstring|str",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 13 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "prev",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "prev",
  "full_name" : "JavaScriptBaseParser.prev",
  "file" : "astminer/src/main/java/me/vovak/antlr/parser/JavaScriptBaseParser.java",
  "doc" : "/**\n     * Whether the previous token value equals to @param str\n     */",
  "comment" : null,
  "body" : "protected boolean prev(String str) {\n        return _input.LT(-1).getText().equals(str);\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #39 from vovak/js",
    "date" : "2019-10-16",
    "hash" : "ec8d7fe22f78f07e2a278c9af12b0a5253435abe"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "protected",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "prev",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 12 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "whether|the|previous|token|value|equals|to|param|str",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 13 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 17, 18 ]
  }, {
    "id" : 15,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 19, 20, 21 ]
  }, {
    "id" : 18,
    "token" : "get|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "input",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "lt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 22 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "n",
  "full_name" : "JavaScriptBaseParser.n",
  "file" : "astminer/src/main/java/me/vovak/antlr/parser/JavaScriptBaseParser.java",
  "doc" : "/**\n     * Short form for next(String str)\n     */",
  "comment" : null,
  "body" : "protected boolean n(String str) {\n        return next(str);\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #39 from vovak/js",
    "date" : "2019-10-16",
    "hash" : "ec8d7fe22f78f07e2a278c9af12b0a5253435abe"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "protected",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 12 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "short|form|for|nextstring|str",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 13 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "next",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "next",
  "full_name" : "JavaScriptBaseParser.next",
  "file" : "astminer/src/main/java/me/vovak/antlr/parser/JavaScriptBaseParser.java",
  "doc" : "/**\n     * Whether the next token value equals to @param str\n     */",
  "comment" : null,
  "body" : "protected boolean next(String str) {\n        return _input.LT(1).getText().equals(str);\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #39 from vovak/js",
    "date" : "2019-10-16",
    "hash" : "ec8d7fe22f78f07e2a278c9af12b0a5253435abe"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "protected",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "next",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 12 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "whether|the|next|token|value|equals|to|param|str",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 13 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 17, 18 ]
  }, {
    "id" : 15,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 19, 20, 21 ]
  }, {
    "id" : 18,
    "token" : "get|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "input",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "lt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "notLineTerminator",
  "full_name" : "JavaScriptBaseParser.notLineTerminator",
  "file" : "astminer/src/main/java/me/vovak/antlr/parser/JavaScriptBaseParser.java",
  "doc" : null,
  "comment" : null,
  "body" : "protected boolean notLineTerminator() {\n        return !here(JavaScriptParser.LineTerminator);\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #39 from vovak/js",
    "date" : "2019-10-16",
    "hash" : "ec8d7fe22f78f07e2a278c9af12b0a5253435abe"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "protected",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "not|line|terminator",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 7 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 8, 9 ]
  }, {
    "id" : 8,
    "token" : "here",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "java|script|parserline|terminator",
    "type" : "QualifiedName",
    "children" : [ ]
  } ]
}, {
  "name" : "notOpenBraceAndNotFunction",
  "full_name" : "JavaScriptBaseParser.notOpenBraceAndNotFunction",
  "file" : "astminer/src/main/java/me/vovak/antlr/parser/JavaScriptBaseParser.java",
  "doc" : null,
  "comment" : null,
  "body" : "protected boolean notOpenBraceAndNotFunction() {\n        int nextTokenType = _input.LT(1).getType();\n        return nextTokenType != JavaScriptParser.OpenBrace && nextTokenType != JavaScriptParser.Function;\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #39 from vovak/js",
    "date" : "2019-10-16",
    "hash" : "ec8d7fe22f78f07e2a278c9af12b0a5253435abe"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "protected",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "not|open|brace|and|not|function",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 16 ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 9, 10 ]
  }, {
    "id" : 9,
    "token" : "next|token|type",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 11, 12 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 13, 14, 15 ]
  }, {
    "id" : 12,
    "token" : "get|type",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "input",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "lt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 17, 18 ]
  }, {
    "id" : 17,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 19, 20 ]
  }, {
    "id" : 18,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 21, 22 ]
  }, {
    "id" : 19,
    "token" : "next|token|type",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "java|script|parseropen|brace",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "next|token|type",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "java|script|parserfunction",
    "type" : "QualifiedName",
    "children" : [ ]
  } ]
}, {
  "name" : "closeBrace",
  "full_name" : "JavaScriptBaseParser.closeBrace",
  "file" : "astminer/src/main/java/me/vovak/antlr/parser/JavaScriptBaseParser.java",
  "doc" : null,
  "comment" : null,
  "body" : "protected boolean closeBrace() {\n        return _input.LT(1).getType() == JavaScriptParser.CloseBrace;\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #39 from vovak/js",
    "date" : "2019-10-16",
    "hash" : "ec8d7fe22f78f07e2a278c9af12b0a5253435abe"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "protected",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "close|brace",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "java|script|parserclose|brace",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 11, 12, 13 ]
  }, {
    "id" : 10,
    "token" : "get|type",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "input",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "lt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "here",
  "full_name" : "JavaScriptBaseParser.here",
  "file" : "astminer/src/main/java/me/vovak/antlr/parser/JavaScriptBaseParser.java",
  "doc" : "/**\n     * Returns {@code true} iff on the current index of the parser's\n     * token stream a token of the given {@code type} exists on the\n     * {@code HIDDEN} channel.\n     *\n     * @param type\n     *         the type of the token on the {@code HIDDEN} channel\n     *         to check.\n     *\n     * @return {@code true} iff on the current index of the parser's\n     * token stream a token of the given {@code type} exists on the\n     * {@code HIDDEN} channel.\n     */",
  "comment" : null,
  "body" : "private boolean here(final int type) {\n\n        // Get the token ahead of the current index.\n        int possibleIndexEosToken = this.getCurrentToken().getTokenIndex() - 1;\n        Token ahead = _input.get(possibleIndexEosToken);\n\n        // Check if the token resides on the HIDDEN channel and if it's of the\n        // provided type.\n        return (ahead.getChannel() == Lexer.HIDDEN) && (ahead.getType() == type);\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #39 from vovak/js",
    "date" : "2019-10-16",
    "hash" : "ec8d7fe22f78f07e2a278c9af12b0a5253435abe"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7, 8, 9 ]
  }, {
    "id" : 2,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "here",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 38, 39, 40 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 41, 42, 43 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 10, 11, 12, 13, 14, 15, 16, 17 ]
  }, {
    "id" : 8,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 21, 22, 23, 24, 25 ]
  }, {
    "id" : 9,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 27, 28, 29, 30, 31, 32, 33, 34 ]
  }, {
    "id" : 10,
    "token" : "returns",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 18 ]
  }, {
    "id" : 12,
    "token" : "iff|on|the|current|index|of|the|parsers",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "token|stream|a|token|of|the|given",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 19 ]
  }, {
    "id" : 15,
    "token" : "exists|on|the",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 20 ]
  }, {
    "id" : 17,
    "token" : "channel",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "true",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "type",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "hidden",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "type",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "the|type|of|the|token|on|the",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 26 ]
  }, {
    "id" : 24,
    "token" : "channel",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "to|check",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "hidden",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 35 ]
  }, {
    "id" : 29,
    "token" : "iff|on|the|current|index|of|the|parsers",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "token|stream|a|token|of|the|given",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 36 ]
  }, {
    "id" : 32,
    "token" : "exists|on|the",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 37 ]
  }, {
    "id" : 34,
    "token" : "channel",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "true",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "type",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "hidden",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "type",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 44, 45 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 54, 55 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 62 ]
  }, {
    "id" : 44,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 46, 47 ]
  }, {
    "id" : 46,
    "token" : "possible|index|eos|token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 48, 49 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 50, 51 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 52, 53 ]
  }, {
    "id" : 51,
    "token" : "get|token|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "get|current|token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "token",
    "type" : "SimpleType",
    "children" : [ 56 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 57, 58 ]
  }, {
    "id" : 56,
    "token" : "token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "ahead",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 59, 60, 61 ]
  }, {
    "id" : 59,
    "token" : "input",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "possible|index|eos|token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 63, 64 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 65 ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 70 ]
  }, {
    "id" : 65,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 66, 67 ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 68, 69 ]
  }, {
    "id" : 67,
    "token" : "lexerhidden",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "ahead",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "get|channel",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 71, 72 ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 73, 74 ]
  }, {
    "id" : 72,
    "token" : "type",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "ahead",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "get|type",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "lineTerminatorAhead",
  "full_name" : "JavaScriptBaseParser.lineTerminatorAhead",
  "file" : "astminer/src/main/java/me/vovak/antlr/parser/JavaScriptBaseParser.java",
  "doc" : "/**\n     * Returns {@code true} iff on the current index of the parser's\n     * token stream a token exists on the {@code HIDDEN} channel which\n     * either is a line terminator, or is a multi line comment that\n     * contains a line terminator.\n     *\n     * @return {@code true} iff on the current index of the parser's\n     * token stream a token exists on the {@code HIDDEN} channel which\n     * either is a line terminator, or is a multi line comment that\n     * contains a line terminator.\n     */",
  "comment" : null,
  "body" : "protected boolean lineTerminatorAhead() {\n\n        // Get the token ahead of the current index.\n        int possibleIndexEosToken = this.getCurrentToken().getTokenIndex() - 1;\n        Token ahead = _input.get(possibleIndexEosToken);\n\n        if (ahead.getChannel() != Lexer.HIDDEN) {\n            // We're only interested in tokens on the HIDDEN channel.\n            return false;\n        }\n\n        if (ahead.getType() == JavaScriptParser.LineTerminator) {\n            // There is definitely a line terminator ahead.\n            return true;\n        }\n\n        if (ahead.getType() == JavaScriptParser.WhiteSpaces) {\n            // Get the token ahead of the current whitespaces.\n            possibleIndexEosToken = this.getCurrentToken().getTokenIndex() - 2;\n            ahead = _input.get(possibleIndexEosToken);\n        }\n\n        // Get the token's text and type.\n        String text = ahead.getText();\n        int type = ahead.getType();\n\n        // Check if the token is, or contains a line terminator.\n        return (type == JavaScriptParser.MultiLineComment && (text.contains(\"\\r\") || text.contains(\"\\n\"))) ||\n                (type == JavaScriptParser.LineTerminator);\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #39 from vovak/js",
    "date" : "2019-10-16",
    "hash" : "ec8d7fe22f78f07e2a278c9af12b0a5253435abe"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 6, 7 ]
  }, {
    "id" : 2,
    "token" : "protected",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "line|terminator|ahead",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 28, 29, 30, 31, 32, 33, 34, 35 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8, 9, 10, 11, 12, 13, 14, 15 ]
  }, {
    "id" : 7,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 18, 19, 20, 21, 22, 23, 24, 25 ]
  }, {
    "id" : 8,
    "token" : "returns",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 16 ]
  }, {
    "id" : 10,
    "token" : "iff|on|the|current|index|of|the|parsers",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "token|stream|a|token|exists|on|the",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 17 ]
  }, {
    "id" : 13,
    "token" : "channel|which",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "either|is|a|line|terminator|or|is|a|multi|line|comment|that",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "contains|a|line|terminator",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "true",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "hidden",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 26 ]
  }, {
    "id" : 20,
    "token" : "iff|on|the|current|index|of|the|parsers",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "token|stream|a|token|exists|on|the",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 27 ]
  }, {
    "id" : 23,
    "token" : "channel|which",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "either|is|a|line|terminator|or|is|a|multi|line|comment|that",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "contains|a|line|terminator",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "true",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "hidden",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 36, 37 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 46, 47 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 54, 55 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 62, 63 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 70, 71 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 93, 94 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 100, 101 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 106 ]
  }, {
    "id" : 36,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 38, 39 ]
  }, {
    "id" : 38,
    "token" : "possible|index|eos|token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 44, 45 ]
  }, {
    "id" : 43,
    "token" : "get|token|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "get|current|token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "token",
    "type" : "SimpleType",
    "children" : [ 48 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 49, 50 ]
  }, {
    "id" : 48,
    "token" : "token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "ahead",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 51, 52, 53 ]
  }, {
    "id" : 51,
    "token" : "input",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "possible|index|eos|token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 56, 57 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "Block",
    "children" : [ 60 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 58, 59 ]
  }, {
    "id" : 57,
    "token" : "lexerhidden",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "ahead",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "get|channel",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 61 ]
  }, {
    "id" : 61,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 64, 65 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "Block",
    "children" : [ 68 ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 66, 67 ]
  }, {
    "id" : 65,
    "token" : "java|script|parserline|terminator",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "ahead",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "get|type",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 69 ]
  }, {
    "id" : 69,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 72, 73 ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "Block",
    "children" : [ 76, 77 ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 74, 75 ]
  }, {
    "id" : 73,
    "token" : "java|script|parserwhite|spaces",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "ahead",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "get|type",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 78 ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 87 ]
  }, {
    "id" : 78,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 79, 80 ]
  }, {
    "id" : 79,
    "token" : "possible|index|eos|token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 81, 82 ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 83, 84 ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 85, 86 ]
  }, {
    "id" : 84,
    "token" : "get|token|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "get|current|token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 88, 89 ]
  }, {
    "id" : 88,
    "token" : "ahead",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 90, 91, 92 ]
  }, {
    "id" : 90,
    "token" : "input",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "possible|index|eos|token",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 95 ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 96, 97 ]
  }, {
    "id" : 95,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 98, 99 ]
  }, {
    "id" : 98,
    "token" : "ahead",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "get|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 102, 103 ]
  }, {
    "id" : 102,
    "token" : "type",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 104, 105 ]
  }, {
    "id" : 104,
    "token" : "ahead",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "get|type",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "||",
    "type" : "InfixExpression",
    "children" : [ 107, 108 ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 109 ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 123 ]
  }, {
    "id" : 109,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 110, 111 ]
  }, {
    "id" : 110,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 112, 113 ]
  }, {
    "id" : 111,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 114 ]
  }, {
    "id" : 112,
    "token" : "type",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "java|script|parsermulti|line|comment",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "||",
    "type" : "InfixExpression",
    "children" : [ 115, 116 ]
  }, {
    "id" : 115,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 117, 118, 119 ]
  }, {
    "id" : 116,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 120, 121, 122 ]
  }, {
    "id" : 117,
    "token" : "text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "r",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 124, 125 ]
  }, {
    "id" : 124,
    "token" : "type",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "java|script|parserline|terminator",
    "type" : "QualifiedName",
    "children" : [ ]
  } ]
}, {
  "name" : "IntArrayInitialization",
  "full_name" : "ComplexArrayInitialization.IntArrayInitialization",
  "file" : "astminer/astminer-cli/src/test/resources/testData/arrayCalls/ComplexArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "IntArrayInitialization() {\n        array = new ComplexObject[1];\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #54 from JetBrains-Research/integration_tests",
    "date" : "2019-11-26",
    "hash" : "6cd7fd97b8dec37b5ee73ed9b3980444a2360fa5"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "int|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ 3 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "complex|object",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "complex|object",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "complex|object",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "ComplexTest",
  "full_name" : "ComplexTest.ComplexTest",
  "file" : "astminer/astminer-cli/src/test/resources/testData/arrayCalls/ComplexTest.java",
  "doc" : null,
  "comment" : null,
  "body" : "public ComplexTest() {\n        array = new int[SIZE][SIZE];\n        for (int i = 0; i < SIZE; i++) {\n            for (int j = 0; j < SIZE; j++) {\n                array[i][j] = 0;\n            }\n        }\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #54 from JetBrains-Research/integration_tests",
    "date" : "2019-11-26",
    "hash" : "6cd7fd97b8dec37b5ee73ed9b3980444a2360fa5"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "complex|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4, 5 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 6 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 15, 16, 17, 18 ]
  }, {
    "id" : 6,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 9, 10, 11 ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 10,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 19, 20 ]
  }, {
    "id" : 16,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 17,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 25 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "Block",
    "children" : [ 26 ]
  }, {
    "id" : 19,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 21, 22 ]
  }, {
    "id" : 21,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 27, 28, 29, 30 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 28,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 35, 36 ]
  }, {
    "id" : 29,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 37 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "Block",
    "children" : [ 38 ]
  }, {
    "id" : 31,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 39 ]
  }, {
    "id" : 39,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 44, 45 ]
  }, {
    "id" : 43,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "IntArrayInitialization",
  "full_name" : "DoubleArrayInitialization.IntArrayInitialization",
  "file" : "astminer/astminer-cli/src/test/resources/testData/arrayCalls/DoubleArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "IntArrayInitialization() {\n        array = new double[1];\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #54 from JetBrains-Research/integration_tests",
    "date" : "2019-11-26",
    "hash" : "6cd7fd97b8dec37b5ee73ed9b3980444a2360fa5"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "int|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ 3 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  } ]
}, {
  "name" : "IntArrayInitialization",
  "full_name" : "IntArrayInitialization.IntArrayInitialization",
  "file" : "astminer/astminer-cli/src/test/resources/testData/arrayCalls/IntArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "IntArrayInitialization() {\n        array = new int[1];\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #54 from JetBrains-Research/integration_tests",
    "date" : "2019-11-26",
    "hash" : "6cd7fd97b8dec37b5ee73ed9b3980444a2360fa5"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "int|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ 3 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  } ]
}, {
  "name" : "StringArrayInitialization",
  "full_name" : "StringArrayInitialization.StringArrayInitialization",
  "file" : "astminer/astminer-cli/src/test/resources/testData/arrayCalls/StringArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "StringArrayInitialization() {\n        array = new String[1];\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #54 from JetBrains-Research/integration_tests",
    "date" : "2019-11-26",
    "hash" : "6cd7fd97b8dec37b5ee73ed9b3980444a2360fa5"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "string|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ 3 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "foo",
  "full_name" : "Foo.foo",
  "file" : "astminer/astminer-cli/src/test/resources/testData/common/NonParsableFile.java",
  "doc" : "/**\n     * Prints \"bar'.\n     */",
  "comment" : null,
  "body" : null,
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #54 from JetBrains-Research/integration_tests",
    "date" : "2019-11-26",
    "hash" : "6cd7fd97b8dec37b5ee73ed9b3980444a2360fa5"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "foo",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "prints|bar",
    "type" : "TextElement",
    "children" : [ ]
  } ]
}, {
  "name" : "foo",
  "full_name" : "Foo.foo",
  "file" : "astminer/astminer-cli/src/test/resources/testData/common/ParsableFile.java",
  "doc" : "/**\n     * Prints \"bar'.\n     */",
  "comment" : null,
  "body" : "public static void foo() {\n        System.out.println(\"bar\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #54 from JetBrains-Research/integration_tests",
    "date" : "2019-11-26",
    "hash" : "6cd7fd97b8dec37b5ee73ed9b3980444a2360fa5"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "foo",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 9 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "prints|bar",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 10 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 11, 12, 13 ]
  }, {
    "id" : 11,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "bar",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "Main.main",
  "file" : "astminer/astminer-cli/src/test/resources/testData/examples/1.java",
  "doc" : null,
  "comment" : null,
  "body" : "public static void main(String[] args) {\n        System.out.println(\"Hello world\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #54 from JetBrains-Research/integration_tests",
    "date" : "2019-11-26",
    "hash" : "6cd7fd97b8dec37b5ee73ed9b3980444a2360fa5"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 12 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 13 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 14,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "hello|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "fun",
  "full_name" : "SingleFunction.fun",
  "file" : "astminer/astminer-cli/src/test/resources/testData/examples/test_dir_name_extension.java/1.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun(String[] args, int param) {\n        System.out.println(\"Hello again world!\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #54 from JetBrains-Research/integration_tests",
    "date" : "2019-11-26",
    "hash" : "6cd7fd97b8dec37b5ee73ed9b3980444a2360fa5"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 13 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 14 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "hi",
  "full_name" : "A.hi",
  "file" : "astminer/astminer-cli/src/test/resources/testData/featureextraction/hello.java",
  "doc" : null,
  "comment" : null,
  "body" : "void hi() {\n        String hi = \"Hello\";\n        int a = 5;\n        if (a > 0) {\n            a = 0;\n        }\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #54 from JetBrains-Research/integration_tests",
    "date" : "2019-11-26",
    "hash" : "6cd7fd97b8dec37b5ee73ed9b3980444a2360fa5"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "hi",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4, 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 10, 11 ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "hi",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "hello",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "Block",
    "children" : [ 20 ]
  }, {
    "id" : 18,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 21 ]
  }, {
    "id" : 21,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "fun",
  "full_name" : "SingleFunction.fun",
  "file" : "astminer/astminer-cli/src/test/resources/testData/gumTreeMethodSplitter/1.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun(String[] args, int param) {\n        System.out.println(\"Hello again world!\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #54 from JetBrains-Research/integration_tests",
    "date" : "2019-11-26",
    "hash" : "6cd7fd97b8dec37b5ee73ed9b3980444a2360fa5"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 13 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 14 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "InnerClass.SingleMethodInnerClass.main",
  "file" : "astminer/astminer-cli/src/test/resources/testData/gumTreeMethodSplitter/2.java",
  "doc" : null,
  "comment" : null,
  "body" : "void main(String[] args) {\n            System.out.println(\"Hello world!\");\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #54 from JetBrains-Research/integration_tests",
    "date" : "2019-11-26",
    "hash" : "6cd7fd97b8dec37b5ee73ed9b3980444a2360fa5"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 5,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 12,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "hello|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "InnerClass.SingleMethodInnerClass.main",
  "file" : "astminer/astminer-cli/src/test/resources/testData/gumTreeMethodSplitter/3.java",
  "doc" : null,
  "comment" : null,
  "body" : "void main(String[] args) {\n            System.out.println(\"Hello world!\");\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #54 from JetBrains-Research/integration_tests",
    "date" : "2019-11-26",
    "hash" : "6cd7fd97b8dec37b5ee73ed9b3980444a2360fa5"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 5,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 12,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "hello|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "fun",
  "full_name" : "SingleMethodInnerClass.fun",
  "file" : "astminer/astminer-cli/src/test/resources/testData/gumTreeMethodSplitter/3.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun(String[] args, int param) {\n        System.out.println(\"Hello again world!\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #54 from JetBrains-Research/integration_tests",
    "date" : "2019-11-26",
    "hash" : "6cd7fd97b8dec37b5ee73ed9b3980444a2360fa5"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 13 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 14 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "fun",
  "full_name" : "SingleFunction.fun",
  "file" : "astminer/astminer-cli/src/test/resources/testData/gumTreeMethodSplitter/4.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun(int args, int param) {\n        System.out.println(\"Hello again world!\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #54 from JetBrains-Research/integration_tests",
    "date" : "2019-11-26",
    "hash" : "6cd7fd97b8dec37b5ee73ed9b3980444a2360fa5"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 12,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "swap",
  "full_name" : "LongJavaFileProject.swap",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "static <T> boolean swap(T[] array, int idx, int idy) {\n        T swap = array[idx];\n        array[idx] = array[idy];\n        array[idy] = swap;\n        return true;\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8 ]
  }, {
    "id" : 1,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 9 ]
  }, {
    "id" : 3,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "swap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 15, 16 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 17, 18 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Block",
    "children" : [ 19, 20, 21, 22 ]
  }, {
    "id" : 9,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 12, 13 ]
  }, {
    "id" : 11,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "idx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "idy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 23, 24 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 30 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 37 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 42 ]
  }, {
    "id" : 23,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 25 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 25,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "swap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "idx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 33, 34 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 35, 36 ]
  }, {
    "id" : 33,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "idx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "idy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 38, 39 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 40, 41 ]
  }, {
    "id" : 39,
    "token" : "swap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "idy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "less",
  "full_name" : "LongJavaFileProject.less",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "static <T extends Comparable<T>> boolean less(T v, T w) {\n        return v.compareTo(w) < 0;\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 8, 9 ]
  }, {
    "id" : 3,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "less",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 17, 18 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 20 ]
  }, {
    "id" : 8,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 10, 11 ]
  }, {
    "id" : 10,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 16 ]
  }, {
    "id" : 15,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 19 ]
  }, {
    "id" : 18,
    "token" : "w",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 21 ]
  }, {
    "id" : 21,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 24, 25, 26 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "compare|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "w",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "print",
  "full_name" : "LongJavaFileProject.print",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "static void print(List<?> toPrint) {\n        toPrint.stream()\n                .map(Object::toString)\n                .map(str -> str + \" \")\n                .forEach(System.out::print);\n\n        System.out.println();\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "list",
    "type" : "ParameterizedType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "to|print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "list",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "?",
    "type" : "WildcardType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 34 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 15,
    "token" : "for|each",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionMethodReference",
    "children" : [ 32, 33 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 20, 21, 22 ]
  }, {
    "id" : 18,
    "token" : "map",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "LambdaExpression",
    "children" : [ 27, 28 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 23, 24 ]
  }, {
    "id" : 21,
    "token" : "map",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ExpressionMethodReference",
    "children" : [ 25, 26 ]
  }, {
    "id" : 23,
    "token" : "to|print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "stream",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 29 ]
  }, {
    "id" : 28,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 30, 31 ]
  }, {
    "id" : 29,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "flip",
  "full_name" : "LongJavaFileProject.flip",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "static <T extends Comparable<T>> void flip(T[] array, int left, int right) {\n        while (left <= right) {\n            swap(array, left++, right--);\n        }\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8 ]
  }, {
    "id" : 1,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 9, 10 ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "flip",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 15, 16 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 20, 21 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 22, 23 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Block",
    "children" : [ 24 ]
  }, {
    "id" : 9,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 11, 12 ]
  }, {
    "id" : 11,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 17, 18 ]
  }, {
    "id" : 16,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 19 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 25, 26 ]
  }, {
    "id" : 25,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 27, 28 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "Block",
    "children" : [ 29 ]
  }, {
    "id" : 27,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 30 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 31, 32, 33, 34 ]
  }, {
    "id" : 31,
    "token" : "swap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 35 ]
  }, {
    "id" : 34,
    "token" : "--",
    "type" : "PostfixExpression",
    "children" : [ 36 ]
  }, {
    "id" : 35,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "isSorted",
  "full_name" : "BogoSort.LongJavaFileProject.isSorted",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private static <T extends Comparable<T>> boolean isSorted(T[] array) {\n            for (int i = 0; i < array.length - 1; i++) {\n                if (less(array[i + 1], array[i])) return false;\n            }\n            return true;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 8, 9 ]
  }, {
    "id" : 4,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "is|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 19, 20 ]
  }, {
    "id" : 8,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 10, 11 ]
  }, {
    "id" : 10,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 21, 22, 23, 24 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 47 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 25, 26 ]
  }, {
    "id" : 22,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 29, 30 ]
  }, {
    "id" : 23,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 33 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "Block",
    "children" : [ 34 ]
  }, {
    "id" : 25,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "arraylength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 37, 38, 39 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 46 ]
  }, {
    "id" : 37,
    "token" : "less",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 40, 41 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 44, 45 ]
  }, {
    "id" : 40,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "nextPermutation",
  "full_name" : "BogoSort.LongJavaFileProject.nextPermutation",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private static <T> void nextPermutation(T[] array) {\n            int length = array.length;\n\n            for (int i = 0; i < array.length; i++) {\n                int randomIndex = i + random.nextInt(length - i);\n                swap(array, randomIndex, i);\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 8 ]
  }, {
    "id" : 4,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "next|permutation",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 14, 15 ]
  }, {
    "id" : 8,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 11, 12 ]
  }, {
    "id" : 10,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 20, 21, 22, 23 ]
  }, {
    "id" : 16,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 18, 19 ]
  }, {
    "id" : 18,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "arraylength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 24, 25 ]
  }, {
    "id" : 21,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 28, 29 ]
  }, {
    "id" : 22,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 30 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "Block",
    "children" : [ 31, 32 ]
  }, {
    "id" : 24,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "arraylength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 33, 34 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 44 ]
  }, {
    "id" : 33,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "random|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 37, 38 ]
  }, {
    "id" : 37,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 39, 40, 41 ]
  }, {
    "id" : 39,
    "token" : "random",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "next|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 45, 46, 47, 48 ]
  }, {
    "id" : 45,
    "token" : "swap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "random|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "sort",
  "full_name" : "BogoSort.LongJavaFileProject.sort",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public <T extends Comparable<T>> T[] sort(T[] array) {\n            while (!isSorted(array)) {\n                nextPermutation(array);\n            }\n            return array;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 7, 8 ]
  }, {
    "id" : 3,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 13, 14 ]
  }, {
    "id" : 4,
    "token" : "sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 16, 17 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 21, 22 ]
  }, {
    "id" : 7,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 9,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 23, 24 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 32 ]
  }, {
    "id" : 23,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 25 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "Block",
    "children" : [ 28 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "is|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 29 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "next|permutation",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "BogoSort.LongJavaFileProject.main",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public static void main(String[] args) {\n            // Integer Input\n            Integer[] integers = {4, 23, 6, 78, 1, 54, 231, 9, 12};\n\n            BogoSort bogoSort = new BogoSort();\n\n            // print a sorted array\n            print(bogoSort.sort(integers));\n\n            // String Input\n            String[] strings = {\"c\", \"a\", \"e\", \"b\", \"d\"};\n\n            print(bogoSort.sort(strings));\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 12, 13, 14, 15, 16 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 17, 18 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 33, 34 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 40 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 46, 47 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 58 ]
  }, {
    "id" : 17,
    "token" : "integer",
    "type" : "ArrayType",
    "children" : [ 19, 20 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 19,
    "token" : "integer",
    "type" : "SimpleType",
    "children" : [ 21 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "integers",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 24, 25, 26, 27, 28, 29, 30, 31, 32 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "bogo|sort",
    "type" : "SimpleType",
    "children" : [ 35 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 35,
    "token" : "bogo|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "bogo|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 38 ]
  }, {
    "id" : 38,
    "token" : "bogo|sort",
    "type" : "SimpleType",
    "children" : [ 39 ]
  }, {
    "id" : 39,
    "token" : "bogo|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 41, 42 ]
  }, {
    "id" : 41,
    "token" : "print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 43, 44, 45 ]
  }, {
    "id" : 43,
    "token" : "bogo|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "integers",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 48, 49 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 51, 52 ]
  }, {
    "id" : 48,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 50 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "strings",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 53, 54, 55, 56, 57 ]
  }, {
    "id" : 53,
    "token" : "c",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "a",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "e",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "b",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "d",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 59, 60 ]
  }, {
    "id" : 59,
    "token" : "print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 61, 62, 63 ]
  }, {
    "id" : 61,
    "token" : "bogo|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "strings",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "sort",
  "full_name" : "BubbleSort.LongJavaFileProject.sort",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public <T extends Comparable<T>> T[] sort(T[] array) {\n            for (int i = 0, size = array.length; i < size - 1; ++i) {\n                boolean swapped = false;\n                for (int j = 0; j < size - 1 - i; ++j) {\n                    if (less(array[j], array[j + 1])) {\n                        swap(array, j, j + 1);\n                        swapped = true;\n                    }\n                }\n                if (!swapped) {\n                    break;\n                }\n            }\n            return array;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 7, 8 ]
  }, {
    "id" : 3,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 13, 14 ]
  }, {
    "id" : 4,
    "token" : "sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 16, 17 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 21, 22 ]
  }, {
    "id" : 7,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 9,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 23, 24, 25, 26 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 88 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 27, 28, 29 ]
  }, {
    "id" : 24,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 34, 35 ]
  }, {
    "id" : 25,
    "token" : "++",
    "type" : "PrefixExpression",
    "children" : [ 38 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "Block",
    "children" : [ 39, 40, 41 ]
  }, {
    "id" : 27,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 30, 31 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 32, 33 ]
  }, {
    "id" : 30,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "arraylength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 42, 43 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 46, 47, 48, 49 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 84, 85 ]
  }, {
    "id" : 42,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 44, 45 ]
  }, {
    "id" : 44,
    "token" : "swapped",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 50, 51 ]
  }, {
    "id" : 47,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 54, 55 ]
  }, {
    "id" : 48,
    "token" : "++",
    "type" : "PrefixExpression",
    "children" : [ 59 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "Block",
    "children" : [ 60 ]
  }, {
    "id" : 50,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 52, 53 ]
  }, {
    "id" : 52,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 56, 57, 58 ]
  }, {
    "id" : 56,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 61, 62 ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 63, 64, 65 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "Block",
    "children" : [ 72, 73 ]
  }, {
    "id" : 63,
    "token" : "less",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 66, 67 ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 68, 69 ]
  }, {
    "id" : 66,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 70, 71 ]
  }, {
    "id" : 70,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 74 ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 81 ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 75, 76, 77, 78 ]
  }, {
    "id" : 75,
    "token" : "swap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 79, 80 ]
  }, {
    "id" : 79,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 82, 83 ]
  }, {
    "id" : 82,
    "token" : "swapped",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 86 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "Block",
    "children" : [ 87 ]
  }, {
    "id" : 86,
    "token" : "swapped",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "BreakStatement",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "sort",
  "full_name" : "CocktailShakerSort.LongJavaFileProject.sort",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public <T extends Comparable<T>> T[] sort(T[] array) {\n\n            int length = array.length;\n            int left = 0;\n            int right = length - 1;\n            int swappedLeft, swappedRight;\n            while (left < right) {\n                // front\n                swappedRight = 0;\n                for (int i = left; i < right; i++) {\n                    if (less(array[i + 1], array[i])) {\n                        swap(array, i, i + 1);\n                        swappedRight = i;\n                    }\n                }\n                // back\n                right = swappedRight;\n                swappedLeft = length - 1;\n                for (int j = right; j > left; j--) {\n                    if (less(array[j], array[j - 1])) {\n                        swap(array, j - 1, j);\n                        swappedLeft = j;\n                    }\n                }\n                left = swappedLeft;\n            }\n            return array;\n\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 7, 8 ]
  }, {
    "id" : 3,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 13, 14 ]
  }, {
    "id" : 4,
    "token" : "sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 16, 17 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 21, 22, 23, 24, 25, 26 ]
  }, {
    "id" : 7,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 9,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 27, 28 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 31, 32 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 35, 36 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 41, 42, 43 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 46, 47 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 140 ]
  }, {
    "id" : 27,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 29, 30 ]
  }, {
    "id" : 29,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "arraylength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 37, 38 ]
  }, {
    "id" : 37,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 39, 40 ]
  }, {
    "id" : 39,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 44 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 45 ]
  }, {
    "id" : 44,
    "token" : "swapped|left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "swapped|right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 48, 49 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "Block",
    "children" : [ 50, 51, 52, 53, 54, 55 ]
  }, {
    "id" : 48,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 56 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 59, 60, 61, 62 ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 94 ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 97 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 102, 103, 104, 105 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 137 ]
  }, {
    "id" : 56,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 57, 58 ]
  }, {
    "id" : 57,
    "token" : "swapped|right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 63, 64 ]
  }, {
    "id" : 60,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 67, 68 ]
  }, {
    "id" : 61,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 69 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "Block",
    "children" : [ 70 ]
  }, {
    "id" : 63,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 65, 66 ]
  }, {
    "id" : 65,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 71, 72 ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 73, 74, 75 ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "Block",
    "children" : [ 82, 83 ]
  }, {
    "id" : 73,
    "token" : "less",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 76, 77 ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 80, 81 ]
  }, {
    "id" : 76,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 78, 79 ]
  }, {
    "id" : 78,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 84 ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 91 ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 85, 86, 87, 88 ]
  }, {
    "id" : 85,
    "token" : "swap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 89, 90 ]
  }, {
    "id" : 89,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 92, 93 ]
  }, {
    "id" : 92,
    "token" : "swapped|right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 95, 96 ]
  }, {
    "id" : 95,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "swapped|right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 98, 99 ]
  }, {
    "id" : 98,
    "token" : "swapped|left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 100, 101 ]
  }, {
    "id" : 100,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 106, 107 ]
  }, {
    "id" : 103,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 110, 111 ]
  }, {
    "id" : 104,
    "token" : "--",
    "type" : "PostfixExpression",
    "children" : [ 112 ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "Block",
    "children" : [ 113 ]
  }, {
    "id" : 106,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 108, 109 ]
  }, {
    "id" : 108,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 114, 115 ]
  }, {
    "id" : 114,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 116, 117, 118 ]
  }, {
    "id" : 115,
    "token" : "",
    "type" : "Block",
    "children" : [ 125, 126 ]
  }, {
    "id" : 116,
    "token" : "less",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 119, 120 ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 121, 122 ]
  }, {
    "id" : 119,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 123, 124 ]
  }, {
    "id" : 123,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 127 ]
  }, {
    "id" : 126,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 134 ]
  }, {
    "id" : 127,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 128, 129, 130, 131 ]
  }, {
    "id" : 128,
    "token" : "swap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 132, 133 ]
  }, {
    "id" : 131,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 132,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 134,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 135, 136 ]
  }, {
    "id" : 135,
    "token" : "swapped|left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 137,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 138, 139 ]
  }, {
    "id" : 138,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 139,
    "token" : "swapped|left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 140,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "nextGap",
  "full_name" : "CombSort.LongJavaFileProject.nextGap",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private int nextGap(int gap) {\n            // Shrink gap by Shrink factor\n            gap = (gap * 10) / 13;\n            return (gap < 1) ? 1 : gap;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "next|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 8, 9 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 18 ]
  }, {
    "id" : 10,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 11, 12 ]
  }, {
    "id" : 11,
    "token" : "gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 13, 14 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 15 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ConditionalExpression",
    "children" : [ 19, 20, 21 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 22 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 23,
    "token" : "gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "sort",
  "full_name" : "CombSort.LongJavaFileProject.sort",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public <T extends Comparable<T>> T[] sort(T[] arr) {\n            int size = arr.length;\n\n            // initialize gap\n            int gap = size;\n\n            // Initialize swapped as true to make sure that loop runs\n            boolean swapped = true;\n\n            // Keep running while gap is more than 1 and last iteration caused a swap\n            while (gap != 1 || swapped) {\n                // Find next gap\n                gap = nextGap(gap);\n\n                // Initialize swapped as false so that we can check if swap happened or not\n                swapped = false;\n\n                // Compare all elements with current gap\n                for (int i = 0; i < size - gap; i++) {\n                    if (less(arr[i + gap], arr[i])) {\n                        // Swap arr[i] and arr[i+gap]\n                        swapped = swap(arr, i, i + gap);\n                    }\n                }\n            }\n            return arr;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 7, 8 ]
  }, {
    "id" : 3,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 13, 14 ]
  }, {
    "id" : 4,
    "token" : "sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 16, 17 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 21, 22, 23, 24, 25 ]
  }, {
    "id" : 7,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 9,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 26, 27 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 30, 31 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 34, 35 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 38, 39 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 90 ]
  }, {
    "id" : 26,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "arrlength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 32, 33 ]
  }, {
    "id" : 32,
    "token" : "gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "swapped",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "||",
    "type" : "InfixExpression",
    "children" : [ 40, 41 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "Block",
    "children" : [ 44, 45, 46 ]
  }, {
    "id" : 40,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "swapped",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 47 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 52 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 55, 56, 57, 58 ]
  }, {
    "id" : 47,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 48, 49 ]
  }, {
    "id" : 48,
    "token" : "gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 50, 51 ]
  }, {
    "id" : 50,
    "token" : "next|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 53, 54 ]
  }, {
    "id" : 53,
    "token" : "swapped",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 59, 60 ]
  }, {
    "id" : 56,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 63, 64 ]
  }, {
    "id" : 57,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 67 ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "Block",
    "children" : [ 68 ]
  }, {
    "id" : 59,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 61, 62 ]
  }, {
    "id" : 61,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 65, 66 ]
  }, {
    "id" : 65,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 69, 70 ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 71, 72, 73 ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "Block",
    "children" : [ 80 ]
  }, {
    "id" : 71,
    "token" : "less",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 74, 75 ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 78, 79 ]
  }, {
    "id" : 74,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 76, 77 ]
  }, {
    "id" : 76,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 81 ]
  }, {
    "id" : 81,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 82, 83 ]
  }, {
    "id" : 82,
    "token" : "swapped",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 84, 85, 86, 87 ]
  }, {
    "id" : 84,
    "token" : "swap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 88, 89 ]
  }, {
    "id" : 88,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "sort",
  "full_name" : "LongJavaFileProject.sort",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public <T extends Comparable<T>> T[] sort(T[] unsorted) {\n        return sort(Arrays.asList(unsorted)).toArray(unsorted);\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 7, 8 ]
  }, {
    "id" : 3,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 13, 14 ]
  }, {
    "id" : 4,
    "token" : "sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 16, 17 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 21 ]
  }, {
    "id" : 7,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 9,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "unsorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 22 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 23, 24, 25 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 26, 27 ]
  }, {
    "id" : 24,
    "token" : "to|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "unsorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28, 29, 30 ]
  }, {
    "id" : 28,
    "token" : "arrays",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "as|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "unsorted",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "streamSort",
  "full_name" : "LongJavaFileProject.streamSort",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private static <T extends Comparable<T>> List<T> streamSort(List<T> list) {\n        return list.stream()\n                .collect(toMap(k -> k, v -> 1, (v1, v2) -> v1 + v2, TreeMap::new))\n                .entrySet()\n                .stream()\n                .flatMap(entry -> IntStream.rangeClosed(1, entry.getValue()).mapToObj(t -> entry.getKey()))\n                .collect(toList());\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 8, 9 ]
  }, {
    "id" : 4,
    "token" : "listt",
    "type" : "ParameterizedType",
    "children" : [ 14, 15 ]
  }, {
    "id" : 5,
    "token" : "stream|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 18, 19 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 24 ]
  }, {
    "id" : 8,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 10, 11 ]
  }, {
    "id" : 10,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "list",
    "type" : "SimpleType",
    "children" : [ 16 ]
  }, {
    "id" : 15,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 17 ]
  }, {
    "id" : 16,
    "token" : "list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "listt",
    "type" : "ParameterizedType",
    "children" : [ 20, 21 ]
  }, {
    "id" : 19,
    "token" : "list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "list",
    "type" : "SimpleType",
    "children" : [ 22 ]
  }, {
    "id" : 21,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 23 ]
  }, {
    "id" : 22,
    "token" : "list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 25 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 26, 27, 28 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 29, 30, 31 ]
  }, {
    "id" : 27,
    "token" : "collect",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 78 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 32, 33 ]
  }, {
    "id" : 30,
    "token" : "flat|map",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "LambdaExpression",
    "children" : [ 61, 62 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 34, 35 ]
  }, {
    "id" : 33,
    "token" : "stream",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 36, 37, 38 ]
  }, {
    "id" : 35,
    "token" : "entry|set",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 39, 40 ]
  }, {
    "id" : 37,
    "token" : "collect",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 41, 42, 43, 44, 45 ]
  }, {
    "id" : 39,
    "token" : "list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "stream",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "to|map",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "LambdaExpression",
    "children" : [ 46, 47 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "LambdaExpression",
    "children" : [ 49, 50 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "LambdaExpression",
    "children" : [ 52, 53, 54 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "CreationReference",
    "children" : [ 59 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 48 ]
  }, {
    "id" : 47,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 51 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 55 ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 56 ]
  }, {
    "id" : 54,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 57, 58 ]
  }, {
    "id" : 55,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "tree|map",
    "type" : "SimpleType",
    "children" : [ 60 ]
  }, {
    "id" : 60,
    "token" : "tree|map",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 63 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 64, 65, 66 ]
  }, {
    "id" : 63,
    "token" : "entry",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 67, 68, 69, 70 ]
  }, {
    "id" : 65,
    "token" : "map|to|obj",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "LambdaExpression",
    "children" : [ 73, 74 ]
  }, {
    "id" : 67,
    "token" : "int|stream",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "range|closed",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 71, 72 ]
  }, {
    "id" : 71,
    "token" : "entry",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "get|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 75 ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 76, 77 ]
  }, {
    "id" : 75,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "entry",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "get|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "to|list",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "sort",
  "full_name" : "CycleSort.LongJavaFileProject.sort",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public <T extends Comparable<T>> T[] sort(T[] arr) {\n            int n = arr.length;\n\n            // traverse array elements\n            for (int j = 0; j <= n - 2; j++) {\n                // initialize item as starting point\n                T item = arr[j];\n\n                // Find position where we put the item.\n                int pos = j;\n                for (int i = j + 1; i < n; i++)\n                    if (less(arr[i], item)) pos++;\n\n                // If item is already in correct position\n                if (pos == j) continue;\n\n                // ignore all duplicate elements\n                while (item.compareTo(arr[pos]) == 0)\n                    pos += 1;\n\n                // put the item to it's right position\n                if (pos != j) {\n                    item = replace(arr, pos, item);\n                }\n\n                // Rotate rest of the cycle\n                while (pos != j) {\n                    pos = j;\n\n                    // Find position where we put the element\n                    for (int i = j + 1; i < n; i++)\n                        if (less(arr[i], item)) {\n                            pos += 1;\n                        }\n\n\n                    // ignore all duplicate elements\n                    while (item.compareTo(arr[pos]) == 0)\n                        pos += 1;\n\n                    // put the item to it's right position\n                    if (item != arr[pos]) {\n                        item = replace(arr, pos, item);\n                    }\n                }\n            }\n\n            return arr;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 7, 8 ]
  }, {
    "id" : 3,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 13, 14 ]
  }, {
    "id" : 4,
    "token" : "sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 16, 17 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 21, 22, 23 ]
  }, {
    "id" : 7,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 9,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 28, 29, 30, 31 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 170 ]
  }, {
    "id" : 24,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "arrlength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 32, 33 ]
  }, {
    "id" : 29,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 36, 37 ]
  }, {
    "id" : 30,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 40 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "Block",
    "children" : [ 41, 42, 43, 44, 45, 46, 47 ]
  }, {
    "id" : 32,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 38, 39 ]
  }, {
    "id" : 38,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 48, 49 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 55, 56 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 59, 60, 61, 62 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 81, 82 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 85, 86 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 97, 98 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 109, 110 ]
  }, {
    "id" : 48,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 50 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 51, 52 ]
  }, {
    "id" : 50,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 53, 54 ]
  }, {
    "id" : 53,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 57, 58 ]
  }, {
    "id" : 57,
    "token" : "pos",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 63, 64 ]
  }, {
    "id" : 60,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 69, 70 ]
  }, {
    "id" : 61,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 71 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 72, 73 ]
  }, {
    "id" : 63,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 65, 66 ]
  }, {
    "id" : 65,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 67, 68 ]
  }, {
    "id" : 67,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 74, 75, 76 ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 79 ]
  }, {
    "id" : 74,
    "token" : "less",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 77, 78 ]
  }, {
    "id" : 76,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 80 ]
  }, {
    "id" : 80,
    "token" : "pos",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 83, 84 ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "ContinueStatement",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "pos",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 87, 88 ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 94 ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 89, 90, 91 ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "compare|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 92, 93 ]
  }, {
    "id" : 92,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "pos",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 95, 96 ]
  }, {
    "id" : 95,
    "token" : "pos",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 99, 100 ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "Block",
    "children" : [ 101 ]
  }, {
    "id" : 99,
    "token" : "pos",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 102 ]
  }, {
    "id" : 102,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 103, 104 ]
  }, {
    "id" : 103,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 105, 106, 107, 108 ]
  }, {
    "id" : 105,
    "token" : "replace",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "pos",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 111, 112 ]
  }, {
    "id" : 110,
    "token" : "",
    "type" : "Block",
    "children" : [ 113, 114, 115, 116 ]
  }, {
    "id" : 111,
    "token" : "pos",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 117 ]
  }, {
    "id" : 114,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 120, 121, 122, 123 ]
  }, {
    "id" : 115,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 144, 145 ]
  }, {
    "id" : 116,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 156, 157 ]
  }, {
    "id" : 117,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 118, 119 ]
  }, {
    "id" : 118,
    "token" : "pos",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 124, 125 ]
  }, {
    "id" : 121,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 130, 131 ]
  }, {
    "id" : 122,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 132 ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 133, 134 ]
  }, {
    "id" : 124,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 126, 127 ]
  }, {
    "id" : 126,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 128, 129 ]
  }, {
    "id" : 128,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 132,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 135, 136, 137 ]
  }, {
    "id" : 134,
    "token" : "",
    "type" : "Block",
    "children" : [ 140 ]
  }, {
    "id" : 135,
    "token" : "less",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 138, 139 ]
  }, {
    "id" : 137,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 138,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 139,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 140,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 141 ]
  }, {
    "id" : 141,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 142, 143 ]
  }, {
    "id" : 142,
    "token" : "pos",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 143,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 144,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 146, 147 ]
  }, {
    "id" : 145,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 153 ]
  }, {
    "id" : 146,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 148, 149, 150 ]
  }, {
    "id" : 147,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "compare|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 151, 152 ]
  }, {
    "id" : 151,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 152,
    "token" : "pos",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 153,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 154, 155 ]
  }, {
    "id" : 154,
    "token" : "pos",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 155,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 158, 159 ]
  }, {
    "id" : 157,
    "token" : "",
    "type" : "Block",
    "children" : [ 162 ]
  }, {
    "id" : 158,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 159,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 160, 161 ]
  }, {
    "id" : 160,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "pos",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 162,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 163 ]
  }, {
    "id" : 163,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 164, 165 ]
  }, {
    "id" : 164,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 165,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 166, 167, 168, 169 ]
  }, {
    "id" : 166,
    "token" : "replace",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 167,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 168,
    "token" : "pos",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 169,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 170,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "replace",
  "full_name" : "CycleSort.LongJavaFileProject.replace",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private <T extends Comparable<T>> T replace(T[] arr, int pos, T item) {\n            T temp = item;\n            item = arr[pos];\n            arr[pos] = temp;\n            return item;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 9, 10 ]
  }, {
    "id" : 3,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 4,
    "token" : "replace",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 16, 17 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 21, 22 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 23, 24 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Block",
    "children" : [ 26, 27, 28, 29 ]
  }, {
    "id" : 9,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 11, 12 ]
  }, {
    "id" : 11,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "pos",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 25 ]
  }, {
    "id" : 24,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 30, 31 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 35 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 40 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 45 ]
  }, {
    "id" : 30,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 32 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 32,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 38, 39 ]
  }, {
    "id" : 38,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "pos",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 41, 42 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 43, 44 ]
  }, {
    "id" : 42,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "pos",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "sort",
  "full_name" : "GnomeSort.LongJavaFileProject.sort",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public <T extends Comparable<T>> T[] sort(T[] arr) {\n            int i = 1;\n            int j = 2;\n            while (i < arr.length) {\n                if (less(arr[i - 1], arr[i])) i = j++;\n                else {\n                    swap(arr, i - 1, i);\n                    if (--i == 0) {\n                        i = j++;\n                    }\n                }\n            }\n\n            return null;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 7, 8 ]
  }, {
    "id" : 3,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 13, 14 ]
  }, {
    "id" : 4,
    "token" : "sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 16, 17 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 21, 22, 23, 24 ]
  }, {
    "id" : 7,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 9,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 25, 26 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 29, 30 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 33, 34 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 73 ]
  }, {
    "id" : 25,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 35, 36 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "Block",
    "children" : [ 37 ]
  }, {
    "id" : 35,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "arrlength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 38, 39, 40 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 41, 42, 43 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 50 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "Block",
    "children" : [ 54, 55 ]
  }, {
    "id" : 41,
    "token" : "less",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 44, 45 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 48, 49 ]
  }, {
    "id" : 44,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 46, 47 ]
  }, {
    "id" : 46,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 51, 52 ]
  }, {
    "id" : 51,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 53 ]
  }, {
    "id" : 53,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 56 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 63, 64 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 57, 58, 59, 60 ]
  }, {
    "id" : 57,
    "token" : "swap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 61, 62 ]
  }, {
    "id" : 60,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 65, 66 ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "Block",
    "children" : [ 68 ]
  }, {
    "id" : 65,
    "token" : "--",
    "type" : "PrefixExpression",
    "children" : [ 67 ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 69 ]
  }, {
    "id" : 69,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 70, 71 ]
  }, {
    "id" : 70,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 72 ]
  }, {
    "id" : 72,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "Heap",
  "full_name" : "Heap.HeapSort.LongJavaFileProject.Heap",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Heap(T[] heap) {\n                this.heap = heap;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 5,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 12, 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 14, 15 ]
  }, {
    "id" : 13,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "heapSubtree",
  "full_name" : "Heap.HeapSort.LongJavaFileProject.heapSubtree",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void heapSubtree(int rootIndex, int lastChild) {\n                int leftIndex = rootIndex * 2 + 1;\n                int rightIndex = rootIndex * 2 + 2;\n                T root = heap[rootIndex];\n                if (rightIndex <= lastChild) { // if has right and left children\n                    T left = heap[leftIndex];\n                    T right = heap[rightIndex];\n                    if (less(left, right) && less(left, root)) {\n                        swap(heap, leftIndex, rootIndex);\n                        heapSubtree(leftIndex, lastChild);\n                    } else if (less(right, root)) {\n                        swap(heap, rightIndex, rootIndex);\n                        heapSubtree(rightIndex, lastChild);\n                    }\n                } else if (leftIndex <= lastChild) { // if no right child, but has left child\n                    T left = heap[leftIndex];\n                    if (less(left, root)) {\n                        swap(heap, leftIndex, rootIndex);\n                        heapSubtree(leftIndex, lastChild);\n                    }\n                }\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "heap|subtree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13, 14 ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "root|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "last|child",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 15, 16 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 23, 24 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 31, 32 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 38, 39, 40 ]
  }, {
    "id" : 15,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 17, 18 ]
  }, {
    "id" : 17,
    "token" : "left|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "root|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 25, 26 ]
  }, {
    "id" : 25,
    "token" : "right|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 29, 30 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "root|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 33 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 34, 35 ]
  }, {
    "id" : 33,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "root|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 41, 42 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "Block",
    "children" : [ 43, 44, 45 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 98, 99 ]
  }, {
    "id" : 41,
    "token" : "right|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "last|child",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 46, 47 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 53, 54 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 60, 61, 62 ]
  }, {
    "id" : 46,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 48 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 49, 50 ]
  }, {
    "id" : 48,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 51, 52 ]
  }, {
    "id" : 51,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "left|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 55 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 56, 57 ]
  }, {
    "id" : 55,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 58, 59 ]
  }, {
    "id" : 58,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "right|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 63, 64 ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "Block",
    "children" : [ 71, 72 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 82, 83 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 65, 66, 67 ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 68, 69, 70 ]
  }, {
    "id" : 65,
    "token" : "less",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "less",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 73 ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 78 ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 74, 75, 76, 77 ]
  }, {
    "id" : 74,
    "token" : "swap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "left|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "root|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 79, 80, 81 ]
  }, {
    "id" : 79,
    "token" : "heap|subtree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "left|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "last|child",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 84, 85, 86 ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "Block",
    "children" : [ 87, 88 ]
  }, {
    "id" : 84,
    "token" : "less",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 89 ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 94 ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 90, 91, 92, 93 ]
  }, {
    "id" : 90,
    "token" : "swap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "right|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "root|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 95, 96, 97 ]
  }, {
    "id" : 95,
    "token" : "heap|subtree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "right|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "last|child",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 100, 101 ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "Block",
    "children" : [ 102, 103 ]
  }, {
    "id" : 100,
    "token" : "left|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "last|child",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 104, 105 ]
  }, {
    "id" : 103,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 111, 112 ]
  }, {
    "id" : 104,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 106 ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 107, 108 ]
  }, {
    "id" : 106,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 109, 110 ]
  }, {
    "id" : 109,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "left|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 113, 114, 115 ]
  }, {
    "id" : 112,
    "token" : "",
    "type" : "Block",
    "children" : [ 116, 117 ]
  }, {
    "id" : 113,
    "token" : "less",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 118 ]
  }, {
    "id" : 117,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 123 ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 119, 120, 121, 122 ]
  }, {
    "id" : 119,
    "token" : "swap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "left|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "root|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 124, 125, 126 ]
  }, {
    "id" : 124,
    "token" : "heap|subtree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "left|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "last|child",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "makeMinHeap",
  "full_name" : "Heap.HeapSort.LongJavaFileProject.makeMinHeap",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void makeMinHeap(int root) {\n                int leftIndex = root * 2 + 1;\n                int rightIndex = root * 2 + 2;\n                boolean hasLeftChild = leftIndex < heap.length;\n                boolean hasRightChild = rightIndex < heap.length;\n                if (hasRightChild) { //if has left and right\n                    makeMinHeap(leftIndex);\n                    makeMinHeap(rightIndex);\n                    heapSubtree(root, heap.length - 1);\n                } else if (hasLeftChild) {\n                    heapSubtree(root, heap.length - 1);\n                }\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "make|min|heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 8, 9, 10, 11, 12 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 13, 14 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 21, 22 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 29, 30 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 35, 36 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 41, 42, 43 ]
  }, {
    "id" : 13,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 15, 16 ]
  }, {
    "id" : 15,
    "token" : "left|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 17, 18 ]
  }, {
    "id" : 17,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 19, 20 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 23, 24 ]
  }, {
    "id" : 23,
    "token" : "right|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 25, 26 ]
  }, {
    "id" : 25,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 27, 28 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "has|left|child",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "left|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "heaplength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 37, 38 ]
  }, {
    "id" : 37,
    "token" : "has|right|child",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 39, 40 ]
  }, {
    "id" : 39,
    "token" : "right|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "heaplength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "has|right|child",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "Block",
    "children" : [ 44, 45, 46 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 59, 60 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 47 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 50 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 53 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 48, 49 ]
  }, {
    "id" : 48,
    "token" : "make|min|heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "left|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 51, 52 ]
  }, {
    "id" : 51,
    "token" : "make|min|heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "right|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 54, 55, 56 ]
  }, {
    "id" : 54,
    "token" : "heap|subtree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 57, 58 ]
  }, {
    "id" : 57,
    "token" : "heaplength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "has|left|child",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "Block",
    "children" : [ 61 ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 62 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 63, 64, 65 ]
  }, {
    "id" : 63,
    "token" : "heap|subtree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 66, 67 ]
  }, {
    "id" : 66,
    "token" : "heaplength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "getRoot",
  "full_name" : "Heap.HeapSort.LongJavaFileProject.getRoot",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private T getRoot(int size) {\n                swap(heap, 0, size);\n                heapSubtree(0, size - 1);\n                return heap[size]; // return old root\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 3,
    "token" : "get|root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10, 11 ]
  }, {
    "id" : 6,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 12 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 17 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 23 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 13, 14, 15, 16 ]
  }, {
    "id" : 13,
    "token" : "swap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 18, 19, 20 ]
  }, {
    "id" : 18,
    "token" : "heap|subtree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 21, 22 ]
  }, {
    "id" : 21,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "sort",
  "full_name" : "HeapSort.LongJavaFileProject.sort",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public <T extends Comparable<T>> T[] sort(T[] unsorted) {\n            return sort(Arrays.asList(unsorted)).toArray(unsorted);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 7, 8 ]
  }, {
    "id" : 3,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 13, 14 ]
  }, {
    "id" : 4,
    "token" : "sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 16, 17 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 21 ]
  }, {
    "id" : 7,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 9,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "unsorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 22 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 23, 24, 25 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 26, 27 ]
  }, {
    "id" : 24,
    "token" : "to|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "unsorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28, 29, 30 ]
  }, {
    "id" : 28,
    "token" : "arrays",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "as|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "unsorted",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "sort",
  "full_name" : "MergeSort.LongJavaFileProject.sort",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public <T extends Comparable<T>> T[] sort(T[] unsorted) {\n            doSort(unsorted, 0, unsorted.length - 1);\n            return unsorted;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 7, 8 ]
  }, {
    "id" : 3,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 13, 14 ]
  }, {
    "id" : 4,
    "token" : "sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 16, 17 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 21, 22 ]
  }, {
    "id" : 7,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 9,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "unsorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 23 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 30 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 24, 25, 26, 27 ]
  }, {
    "id" : 24,
    "token" : "do|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "unsorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "unsortedlength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "unsorted",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "doSort",
  "full_name" : "MergeSort.LongJavaFileProject.doSort",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private <T extends Comparable<T>> void doSort(T[] arr, int left, int right) {\n            if (left < right) {\n                int mid = left + (right - left) / 2;\n                doSort(arr, left, mid);\n                doSort(arr, mid + 1, right);\n                merge(arr, left, mid, right);\n            }\n\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 9, 10 ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "do|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 15, 16 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 20, 21 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 22, 23 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Block",
    "children" : [ 24 ]
  }, {
    "id" : 9,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 11, 12 ]
  }, {
    "id" : 11,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 17, 18 ]
  }, {
    "id" : 16,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 19 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 25, 26 ]
  }, {
    "id" : 25,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 27, 28 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "Block",
    "children" : [ 29, 30, 31, 32 ]
  }, {
    "id" : 27,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 33, 34 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 44 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 49 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 56 ]
  }, {
    "id" : 33,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "mid",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 37, 38 ]
  }, {
    "id" : 37,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 39, 40 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 41 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 45, 46, 47, 48 ]
  }, {
    "id" : 45,
    "token" : "do|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "mid",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 50, 51, 52, 53 ]
  }, {
    "id" : 50,
    "token" : "do|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 54, 55 ]
  }, {
    "id" : 53,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "mid",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 57, 58, 59, 60, 61 ]
  }, {
    "id" : 57,
    "token" : "merge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "mid",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "merge",
  "full_name" : "MergeSort.LongJavaFileProject.merge",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private <T extends Comparable<T>> void merge(T[] arr, int left, int mid, int right) {\n            int length = right - left + 1;\n            T[] temp = (T[]) new Comparable[length];\n            int i = left;\n            int j = mid + 1;\n            int k = 0;\n\n            while (i <= mid && j <= right) {\n                if (arr[i].compareTo(arr[j]) <= 0) {\n                    temp[k++] = arr[i++];\n                } else {\n                    temp[k++] = arr[j++];\n                }\n            }\n\n            while (i <= mid) {\n                temp[k++] = arr[i++];\n            }\n\n            while (j <= right) {\n                temp[k++] = arr[j++];\n            }\n\n            System.arraycopy(temp, 0, arr, left, length);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 10, 11 ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "merge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 16, 17 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 21, 22 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 23, 24 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 25, 26 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Block",
    "children" : [ 27, 28, 29, 30, 31, 32, 33, 34, 35 ]
  }, {
    "id" : 10,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 12, 13 ]
  }, {
    "id" : 12,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 14,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "mid",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 36, 37 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 44, 45 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 61, 62 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 65, 66 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 71, 72 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 75, 76 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 116, 117 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 130, 131 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 144 ]
  }, {
    "id" : 36,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 38, 39 ]
  }, {
    "id" : 38,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 46, 47 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 49, 50 ]
  }, {
    "id" : 46,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 48 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 51, 52 ]
  }, {
    "id" : 51,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 53, 54 ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 56, 57 ]
  }, {
    "id" : 53,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 55 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "comparable",
    "type" : "ArrayType",
    "children" : [ 58, 59 ]
  }, {
    "id" : 57,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 60 ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 63, 64 ]
  }, {
    "id" : 63,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 67, 68 ]
  }, {
    "id" : 67,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 69, 70 ]
  }, {
    "id" : 69,
    "token" : "mid",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 73, 74 ]
  }, {
    "id" : 73,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 77, 78 ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "Block",
    "children" : [ 83 ]
  }, {
    "id" : 77,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 79, 80 ]
  }, {
    "id" : 78,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 81, 82 ]
  }, {
    "id" : 79,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "mid",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 84, 85, 86 ]
  }, {
    "id" : 84,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 87, 88 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "Block",
    "children" : [ 96 ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "Block",
    "children" : [ 106 ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 89, 90, 91 ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 92, 93 ]
  }, {
    "id" : 90,
    "token" : "compare|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 94, 95 ]
  }, {
    "id" : 92,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 97 ]
  }, {
    "id" : 97,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 98, 99 ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 100, 101 ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 103, 104 ]
  }, {
    "id" : 100,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 102 ]
  }, {
    "id" : 102,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 105 ]
  }, {
    "id" : 105,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 107 ]
  }, {
    "id" : 107,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 108, 109 ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 110, 111 ]
  }, {
    "id" : 109,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 113, 114 ]
  }, {
    "id" : 110,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 112 ]
  }, {
    "id" : 112,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 115 ]
  }, {
    "id" : 115,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 118, 119 ]
  }, {
    "id" : 117,
    "token" : "",
    "type" : "Block",
    "children" : [ 120 ]
  }, {
    "id" : 118,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "mid",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 121 ]
  }, {
    "id" : 121,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 122, 123 ]
  }, {
    "id" : 122,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 124, 125 ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 127, 128 ]
  }, {
    "id" : 124,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 126 ]
  }, {
    "id" : 126,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 129 ]
  }, {
    "id" : 129,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 132, 133 ]
  }, {
    "id" : 131,
    "token" : "",
    "type" : "Block",
    "children" : [ 134 ]
  }, {
    "id" : 132,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 134,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 135 ]
  }, {
    "id" : 135,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 136, 137 ]
  }, {
    "id" : 136,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 138, 139 ]
  }, {
    "id" : 137,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 141, 142 ]
  }, {
    "id" : 138,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 139,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 140 ]
  }, {
    "id" : 140,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 141,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 143 ]
  }, {
    "id" : 143,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 144,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 145, 146, 147, 148, 149, 150, 151 ]
  }, {
    "id" : 145,
    "token" : "system",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 146,
    "token" : "arraycopy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 151,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "sort",
  "full_name" : "QuickSort.LongJavaFileProject.sort",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public <T extends Comparable<T>> T[] sort(T[] array) {\n            doSort(array, 0, array.length - 1);\n            return array;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 7, 8 ]
  }, {
    "id" : 3,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 13, 14 ]
  }, {
    "id" : 4,
    "token" : "sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 16, 17 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 21, 22 ]
  }, {
    "id" : 7,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 9,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 23 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 30 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 24, 25, 26, 27 ]
  }, {
    "id" : 24,
    "token" : "do|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "arraylength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "doSort",
  "full_name" : "QuickSort.LongJavaFileProject.doSort",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private <T extends Comparable<T>> void doSort(T[] array, int left, int right) {\n            if (left < right) {\n                int pivot = randomPartition(array, left, right);\n                doSort(array, left, pivot - 1);\n                doSort(array, pivot, right);\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 9, 10 ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "do|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 15, 16 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 20, 21 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 22, 23 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Block",
    "children" : [ 24 ]
  }, {
    "id" : 9,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 11, 12 ]
  }, {
    "id" : 11,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 17, 18 ]
  }, {
    "id" : 16,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 19 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 25, 26 ]
  }, {
    "id" : 25,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 27, 28 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "Block",
    "children" : [ 29, 30, 31 ]
  }, {
    "id" : 27,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 32, 33 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 40 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 47 ]
  }, {
    "id" : 32,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "pivot",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 36, 37, 38, 39 ]
  }, {
    "id" : 36,
    "token" : "random|partition",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 41, 42, 43, 44 ]
  }, {
    "id" : 41,
    "token" : "do|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 45, 46 ]
  }, {
    "id" : 45,
    "token" : "pivot",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 48, 49, 50, 51 ]
  }, {
    "id" : 48,
    "token" : "do|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "pivot",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "randomPartition",
  "full_name" : "QuickSort.LongJavaFileProject.randomPartition",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private <T extends Comparable<T>> int randomPartition(T[] array, int left, int right) {\n            int randomIndex = left + (int) (Math.random() * (right - left + 1));\n            swap(array, randomIndex, right);\n            return partition(array, left, right);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 9, 10 ]
  }, {
    "id" : 3,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "random|partition",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 15, 16 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 20, 21 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 22, 23 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Block",
    "children" : [ 24, 25, 26 ]
  }, {
    "id" : 9,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 11, 12 ]
  }, {
    "id" : 11,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 17, 18 ]
  }, {
    "id" : 16,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 19 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 27, 28 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 45 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 50 ]
  }, {
    "id" : 27,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 29, 30 ]
  }, {
    "id" : 29,
    "token" : "random|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 35 ]
  }, {
    "id" : 35,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 40 ]
  }, {
    "id" : 38,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "random",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 41, 42 ]
  }, {
    "id" : 41,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 43, 44 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 46, 47, 48, 49 ]
  }, {
    "id" : 46,
    "token" : "swap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "random|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 51, 52, 53, 54 ]
  }, {
    "id" : 51,
    "token" : "partition",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "partition",
  "full_name" : "QuickSort.LongJavaFileProject.partition",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private <T extends Comparable<T>> int partition(T[] array, int left, int right) {\n            int mid = (left + right) / 2;\n            T pivot = array[mid];\n\n            while (left <= right) {\n                while (less(array[left], pivot)) {\n                    ++left;\n                }\n                while (less(pivot, array[right])) {\n                    --right;\n                }\n                if (left <= right) {\n                    swap(array, left, right);\n                    ++left;\n                    --right;\n                }\n            }\n            return left;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 9, 10 ]
  }, {
    "id" : 3,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "partition",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 15, 16 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 20, 21 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 22, 23 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Block",
    "children" : [ 24, 25, 26, 27 ]
  }, {
    "id" : 9,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "comparablet",
    "type" : "ParameterizedType",
    "children" : [ 11, 12 ]
  }, {
    "id" : 11,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "t",
    "type" : "ArrayType",
    "children" : [ 17, 18 ]
  }, {
    "id" : 16,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 19 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 28, 29 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 37, 38 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 44, 45 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 87 ]
  }, {
    "id" : 28,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "mid",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 32, 33 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 34 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 39 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 40, 41 ]
  }, {
    "id" : 39,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "pivot",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "mid",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 46, 47 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "Block",
    "children" : [ 48, 49, 50 ]
  }, {
    "id" : 46,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 51, 52 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 61, 62 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 71, 72 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 53, 54, 55 ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "Block",
    "children" : [ 58 ]
  }, {
    "id" : 53,
    "token" : "less",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 56, 57 ]
  }, {
    "id" : 55,
    "token" : "pivot",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 59 ]
  }, {
    "id" : 59,
    "token" : "++",
    "type" : "PrefixExpression",
    "children" : [ 60 ]
  }, {
    "id" : 60,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 63, 64, 65 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "Block",
    "children" : [ 68 ]
  }, {
    "id" : 63,
    "token" : "less",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "pivot",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 66, 67 ]
  }, {
    "id" : 66,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 69 ]
  }, {
    "id" : 69,
    "token" : "--",
    "type" : "PrefixExpression",
    "children" : [ 70 ]
  }, {
    "id" : 70,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 73, 74 ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "Block",
    "children" : [ 75, 76, 77 ]
  }, {
    "id" : 73,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 78 ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 83 ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 85 ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 79, 80, 81, 82 ]
  }, {
    "id" : 79,
    "token" : "swap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "++",
    "type" : "PrefixExpression",
    "children" : [ 84 ]
  }, {
    "id" : 84,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "--",
    "type" : "PrefixExpression",
    "children" : [ 86 ]
  }, {
    "id" : 86,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "getMax",
  "full_name" : "RadixSort.LongJavaFileProject.getMax",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private int getMax(int[] arr, int n) {\n            int mx = arr[0];\n            for (int i = 1; i < n; i++)\n                if (arr[i] > mx)\n                    mx = arr[i];\n            return mx;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "get|max",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 13, 14, 15 ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 22, 23, 24, 25 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 44 ]
  }, {
    "id" : 16,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 18, 19 ]
  }, {
    "id" : 18,
    "token" : "mx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 26, 27 ]
  }, {
    "id" : 23,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 30, 31 ]
  }, {
    "id" : 24,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 32 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 33, 34 ]
  }, {
    "id" : 26,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 35, 36 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 39 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 37, 38 ]
  }, {
    "id" : 36,
    "token" : "mx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "mx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "mx",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "countSort",
  "full_name" : "RadixSort.LongJavaFileProject.countSort",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void countSort(int[] arr, int n, int exp) {\n            int[] output = new int[n];\n            int i;\n            int[] count = new int[10];\n            Arrays.fill(count, 0);\n\n            for (i = 0; i < n; i++)\n                count[(arr[i] / exp) % 10]++;\n\n            for (i = 1; i < 10; i++)\n                count[i] += count[i - 1];\n\n            for (i = n - 1; i >= 0; i--) {\n                output[count[(arr[i] / exp) % 10] - 1] = arr[i];\n                count[(arr[i] / exp) % 10]--;\n            }\n\n            for (i = 0; i < n; i++)\n                arr[i] = output[i];\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "count|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 12, 13 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 16, 17, 18, 19, 20, 21, 22, 23 ]
  }, {
    "id" : 8,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 10, 11 ]
  }, {
    "id" : 9,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "exp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 34, 35 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 37, 38 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 47 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 52, 53, 54, 55 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 72, 73, 74, 75 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 90, 91, 92, 93 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 132, 133, 134, 135 ]
  }, {
    "id" : 24,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 26, 27 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 28, 29 ]
  }, {
    "id" : 26,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 32, 33 ]
  }, {
    "id" : 31,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 36 ]
  }, {
    "id" : 36,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 39, 40 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 41, 42 ]
  }, {
    "id" : 39,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 45, 46 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 48, 49, 50, 51 ]
  }, {
    "id" : 48,
    "token" : "arrays",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "fill",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 56, 57 ]
  }, {
    "id" : 53,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 58, 59 ]
  }, {
    "id" : 54,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 60 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 61 ]
  }, {
    "id" : 56,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 62 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 63, 64 ]
  }, {
    "id" : 63,
    "token" : "count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "%",
    "type" : "InfixExpression",
    "children" : [ 65, 66 ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 67 ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 68, 69 ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 70, 71 ]
  }, {
    "id" : 69,
    "token" : "exp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 76, 77 ]
  }, {
    "id" : 73,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 78, 79 ]
  }, {
    "id" : 74,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 80 ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 81 ]
  }, {
    "id" : 76,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 82, 83 ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 84, 85 ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 86, 87 ]
  }, {
    "id" : 84,
    "token" : "count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 88, 89 ]
  }, {
    "id" : 88,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 94, 95 ]
  }, {
    "id" : 91,
    "token" : ">=",
    "type" : "InfixExpression",
    "children" : [ 98, 99 ]
  }, {
    "id" : 92,
    "token" : "--",
    "type" : "PostfixExpression",
    "children" : [ 100 ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "Block",
    "children" : [ 101, 102 ]
  }, {
    "id" : 94,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 96, 97 ]
  }, {
    "id" : 96,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 103 ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 121 ]
  }, {
    "id" : 103,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 104, 105 ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 106, 107 ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 119, 120 ]
  }, {
    "id" : 106,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 108, 109 ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 110, 111 ]
  }, {
    "id" : 109,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "%",
    "type" : "InfixExpression",
    "children" : [ 112, 113 ]
  }, {
    "id" : 112,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 114 ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 115, 116 ]
  }, {
    "id" : 115,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 117, 118 ]
  }, {
    "id" : 116,
    "token" : "exp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "--",
    "type" : "PostfixExpression",
    "children" : [ 122 ]
  }, {
    "id" : 122,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 123, 124 ]
  }, {
    "id" : 123,
    "token" : "count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "%",
    "type" : "InfixExpression",
    "children" : [ 125, 126 ]
  }, {
    "id" : 125,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 127 ]
  }, {
    "id" : 126,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 128, 129 ]
  }, {
    "id" : 128,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 130, 131 ]
  }, {
    "id" : 129,
    "token" : "exp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 132,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 136, 137 ]
  }, {
    "id" : 133,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 138, 139 ]
  }, {
    "id" : 134,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 140 ]
  }, {
    "id" : 135,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 141 ]
  }, {
    "id" : 136,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 137,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 138,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 139,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 140,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 141,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 142, 143 ]
  }, {
    "id" : 142,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 144, 145 ]
  }, {
    "id" : 143,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 146, 147 ]
  }, {
    "id" : 144,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 146,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "radixsort",
  "full_name" : "RadixSort.LongJavaFileProject.radixsort",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void radixsort(int[] arr, int n) {\n\n            int m = getMax(arr, n);\n\n\n            for (int exp = 1; m / exp > 0; exp *= 10)\n                countSort(arr, n, exp);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "radixsort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 13, 14 ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 22, 23, 24, 25 ]
  }, {
    "id" : 15,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 17, 18 ]
  }, {
    "id" : 17,
    "token" : "m",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 19, 20, 21 ]
  }, {
    "id" : 19,
    "token" : "get|max",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 26, 27 ]
  }, {
    "id" : 23,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 30, 31 ]
  }, {
    "id" : 24,
    "token" : "*=",
    "type" : "Assignment",
    "children" : [ 34, 35 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 36 ]
  }, {
    "id" : 26,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "exp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 32, 33 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "m",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "exp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "exp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 37, 38, 39, 40 ]
  }, {
    "id" : 37,
    "token" : "count|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "exp",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "print",
  "full_name" : "RadixSort.LongJavaFileProject.print",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "void print(int[] arr, int n) {\n            for (int i = 0; i < n; i++)\n                System.out.print(arr[i] + \" \");\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 12 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 13, 14, 15, 16 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 17, 18 ]
  }, {
    "id" : 14,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 21, 22 ]
  }, {
    "id" : 15,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 23 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 24 ]
  }, {
    "id" : 17,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 25, 26, 27 ]
  }, {
    "id" : 25,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 30, 31 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "AnyBaseToAnyBase.LongJavaFileProject.main",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void main(String[] args) {\n            Scanner in = new Scanner(System.in);\n            String n;\n            int b1, b2;\n            while (true) {\n                try {\n                    System.out.print(\"Enter number: \");\n                    n = in.next();\n                    System.out.print(\"Enter beginning base (between \" + MINIMUM_BASE + \" and \" + MAXIMUM_BASE + \"): \");\n                    b1 = in.nextInt();\n                    if (b1 > MAXIMUM_BASE || b1 < MINIMUM_BASE) {\n                        System.out.println(\"Invalid base!\");\n                        continue;\n                    }\n                    if (!validForBase(n, b1)) {\n                        System.out.println(\"The number is invalid for this base!\");\n                        continue;\n                    }\n                    System.out.print(\"Enter end base (between \" + MINIMUM_BASE + \" and \" + MAXIMUM_BASE + \"): \");\n                    b2 = in.nextInt();\n                    if (b2 > MAXIMUM_BASE || b2 < MINIMUM_BASE) {\n                        System.out.println(\"Invalid base!\");\n                        continue;\n                    }\n                    break;\n                } catch (InputMismatchException e) {\n                    System.out.println(\"Invalid input.\");\n                    in.next();\n                }\n            }\n            System.out.println(base2base(n, b1, b2));\n            in.close();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13, 14, 15, 16 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 17, 18 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 25, 26 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 29, 30, 31 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 34, 35 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 140 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 148 ]
  }, {
    "id" : 17,
    "token" : "scanner",
    "type" : "SimpleType",
    "children" : [ 19 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 20, 21 ]
  }, {
    "id" : 19,
    "token" : "scanner",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "scanner",
    "type" : "SimpleType",
    "children" : [ 24 ]
  }, {
    "id" : 23,
    "token" : "systemin",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "scanner",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 27 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 28 ]
  }, {
    "id" : 27,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 32 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 33 ]
  }, {
    "id" : 32,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "Block",
    "children" : [ 36 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "TryStatement",
    "children" : [ 37, 38 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "Block",
    "children" : [ 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "CatchClause",
    "children" : [ 126, 127 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 49 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 53 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 58 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 67 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 72, 73 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 86, 87 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 98 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 107 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 112, 113 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "BreakStatement",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 50, 51, 52 ]
  }, {
    "id" : 50,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "enter|number",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 54, 55 ]
  }, {
    "id" : 54,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 56, 57 ]
  }, {
    "id" : 56,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "next",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 59, 60, 61 ]
  }, {
    "id" : 59,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 62, 63, 64, 65, 66 ]
  }, {
    "id" : 62,
    "token" : "enter|beginning|base|between",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "minimum|base",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "and",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "maximum|base",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "):",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 68, 69 ]
  }, {
    "id" : 68,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 70, 71 ]
  }, {
    "id" : 70,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "next|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "||",
    "type" : "InfixExpression",
    "children" : [ 74, 75 ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "Block",
    "children" : [ 80, 81 ]
  }, {
    "id" : 74,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 76, 77 ]
  }, {
    "id" : 75,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 78, 79 ]
  }, {
    "id" : 76,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "maximum|base",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "minimum|base",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 82 ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "ContinueStatement",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 83, 84, 85 ]
  }, {
    "id" : 83,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "invalid|base",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 88 ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "Block",
    "children" : [ 92, 93 ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 89, 90, 91 ]
  }, {
    "id" : 89,
    "token" : "valid|for|base",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 94 ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "ContinueStatement",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 95, 96, 97 ]
  }, {
    "id" : 95,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "the|number|is|invalid|for|this|base",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 99, 100, 101 ]
  }, {
    "id" : 99,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 102, 103, 104, 105, 106 ]
  }, {
    "id" : 102,
    "token" : "enter|end|base|between",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "minimum|base",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "and",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "maximum|base",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "):",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 108, 109 ]
  }, {
    "id" : 108,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 110, 111 ]
  }, {
    "id" : 110,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "next|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "||",
    "type" : "InfixExpression",
    "children" : [ 114, 115 ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "Block",
    "children" : [ 120, 121 ]
  }, {
    "id" : 114,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 116, 117 ]
  }, {
    "id" : 115,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 118, 119 ]
  }, {
    "id" : 116,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "maximum|base",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "minimum|base",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 122 ]
  }, {
    "id" : 121,
    "token" : "",
    "type" : "ContinueStatement",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 123, 124, 125 ]
  }, {
    "id" : 123,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "invalid|base",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 128, 129 ]
  }, {
    "id" : 127,
    "token" : "",
    "type" : "Block",
    "children" : [ 131, 132 ]
  }, {
    "id" : 128,
    "token" : "input|mismatch|exception",
    "type" : "SimpleType",
    "children" : [ 130 ]
  }, {
    "id" : 129,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "input|mismatch|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 133 ]
  }, {
    "id" : 132,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 137 ]
  }, {
    "id" : 133,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 134, 135, 136 ]
  }, {
    "id" : 134,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 135,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "invalid|input",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 137,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 138, 139 ]
  }, {
    "id" : 138,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 139,
    "token" : "next",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 140,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 141, 142, 143 ]
  }, {
    "id" : 141,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 143,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 144, 145, 146, 147 ]
  }, {
    "id" : 144,
    "token" : "base|base",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 146,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 149, 150 ]
  }, {
    "id" : 149,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "close",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "validForBase",
  "full_name" : "AnyBaseToAnyBase.LongJavaFileProject.validForBase",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public boolean validForBase(String n, int base) {\n            char[] validDigits = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',\n                    'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',\n                    'W', 'X', 'Y', 'Z'};\n            // digitsForBase contains all the valid digits for the base given\n            char[] digitsForBase = Arrays.copyOfRange(validDigits, 0, base);\n\n            // Convert character array into set for convenience of contains() method\n            HashSet<Character> digitsList = new HashSet<>();\n            for (int i = 0; i < digitsForBase.length; i++)\n                digitsList.add(digitsForBase[i]);\n\n            // Check that every digit in n is within the list of valid digits for that base.\n            for (char c : n.toCharArray())\n                if (!digitsList.contains(c))\n                    return false;\n\n            return true;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "valid|for|base",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 12, 13, 14, 15, 16, 17 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "base",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 18, 19 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 60, 61 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 71, 72 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 82, 83, 84, 85 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 99, 100, 101 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 113 ]
  }, {
    "id" : 18,
    "token" : "char",
    "type" : "ArrayType",
    "children" : [ 20, 21 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 20,
    "token" : "char",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "valid|digits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "a",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "b",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "c",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "d",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "e",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "f",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "g",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "h",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "i",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "j",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "k",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "l",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "m",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "n",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "o",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "p",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "q",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "r",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "s",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "t",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "u",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "v",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "w",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "x",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "y",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "z",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "char",
    "type" : "ArrayType",
    "children" : [ 62, 63 ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 64, 65 ]
  }, {
    "id" : 62,
    "token" : "char",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "digits|for|base",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 66, 67, 68, 69, 70 ]
  }, {
    "id" : 66,
    "token" : "arrays",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "copy|of|range",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "valid|digits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "base",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "hash|setcharacter",
    "type" : "ParameterizedType",
    "children" : [ 73, 74 ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 77, 78 ]
  }, {
    "id" : 73,
    "token" : "hash|set",
    "type" : "SimpleType",
    "children" : [ 75 ]
  }, {
    "id" : 74,
    "token" : "character",
    "type" : "SimpleType",
    "children" : [ 76 ]
  }, {
    "id" : 75,
    "token" : "hash|set",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "character",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "digits|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 79 ]
  }, {
    "id" : 79,
    "token" : "hash|set",
    "type" : "ParameterizedType",
    "children" : [ 80 ]
  }, {
    "id" : 80,
    "token" : "hash|set",
    "type" : "SimpleType",
    "children" : [ 81 ]
  }, {
    "id" : 81,
    "token" : "hash|set",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 86, 87 ]
  }, {
    "id" : 83,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 90, 91 ]
  }, {
    "id" : 84,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 92 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 93 ]
  }, {
    "id" : 86,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 88, 89 ]
  }, {
    "id" : 88,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "digits|for|baselength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 94, 95, 96 ]
  }, {
    "id" : 94,
    "token" : "digits|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 97, 98 ]
  }, {
    "id" : 97,
    "token" : "digits|for|base",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 102, 103 ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 104, 105 ]
  }, {
    "id" : 101,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 106, 107 ]
  }, {
    "id" : 102,
    "token" : "char",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "to|char|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 108 ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 112 ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 109, 110, 111 ]
  }, {
    "id" : 109,
    "token" : "digits|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "base2base",
  "full_name" : "AnyBaseToAnyBase.LongJavaFileProject.base2base",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public String base2base(String n, int b1, int b2) {\n            int decimalValue = 0, charB2;\n            char charB1;\n            String output = \"\";\n            // Go through every character of n\n            for (int i = 0; i < n.length(); i++) {\n                // store the character in charB1\n                charB1 = n.charAt(i);\n                // if it is a non-number, convert it to a decimal value >9 and store it in charB2\n                if (charB1 >= 'A' && charB1 <= 'Z')\n                    charB2 = 10 + (charB1 - 'A');\n                    // Else, store the integer value in charB2\n                else\n                    charB2 = charB1 - '0';\n                // Convert the digit to decimal and add it to the\n                // decimalValue of n\n                decimalValue = decimalValue * b1 + charB2;\n            }\n            while (decimalValue != 0) {\n                // If the remainder is a digit < 10, simply add it to\n                // the left side of the new number.\n                if (decimalValue % b2 < 10)\n                    output = Integer.toString(decimalValue % b2) + output;\n                else\n                    output = (char) ((decimalValue % b2) + 55) + output;\n                // Divide by the new base again\n                decimalValue /= b2;\n            }\n            return output;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 3,
    "token" : "base|base",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 12, 13 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 16, 17, 18, 19, 20, 21 ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 22, 23, 24 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 28, 29 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 31, 32 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 36, 37, 38, 39 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 87, 88 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 126 ]
  }, {
    "id" : 22,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 25, 26 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 27 ]
  }, {
    "id" : 25,
    "token" : "decimal|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "char|b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "char",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 30 ]
  }, {
    "id" : 30,
    "token" : "char|b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 33 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 34, 35 ]
  }, {
    "id" : 33,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 40, 41 ]
  }, {
    "id" : 37,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 44, 45 ]
  }, {
    "id" : 38,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 48 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "Block",
    "children" : [ 49, 50, 51 ]
  }, {
    "id" : 40,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 46, 47 ]
  }, {
    "id" : 46,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 52 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 58, 59, 60 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 80 ]
  }, {
    "id" : 52,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 53, 54 ]
  }, {
    "id" : 53,
    "token" : "char|b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 55, 56, 57 ]
  }, {
    "id" : 55,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "char|at",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 61, 62 ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 67 ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 75 ]
  }, {
    "id" : 61,
    "token" : ">=",
    "type" : "InfixExpression",
    "children" : [ 63, 64 ]
  }, {
    "id" : 62,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 65, 66 ]
  }, {
    "id" : 63,
    "token" : "char|b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "a",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "char|b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "z",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 68, 69 ]
  }, {
    "id" : 68,
    "token" : "char|b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 70, 71 ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 72 ]
  }, {
    "id" : 72,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 73, 74 ]
  }, {
    "id" : 73,
    "token" : "char|b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "a",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 76, 77 ]
  }, {
    "id" : 76,
    "token" : "char|b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 78, 79 ]
  }, {
    "id" : 78,
    "token" : "char|b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 81, 82 ]
  }, {
    "id" : 81,
    "token" : "decimal|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 83, 84 ]
  }, {
    "id" : 83,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 85, 86 ]
  }, {
    "id" : 84,
    "token" : "char|b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "decimal|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 89, 90 ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "Block",
    "children" : [ 91, 92 ]
  }, {
    "id" : 89,
    "token" : "decimal|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 93, 94, 95 ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 123 ]
  }, {
    "id" : 93,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 96, 97 ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 100 ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 110 ]
  }, {
    "id" : 96,
    "token" : "%",
    "type" : "InfixExpression",
    "children" : [ 98, 99 ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "decimal|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 101, 102 ]
  }, {
    "id" : 101,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 103, 104 ]
  }, {
    "id" : 103,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 105, 106, 107 ]
  }, {
    "id" : 104,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "%",
    "type" : "InfixExpression",
    "children" : [ 108, 109 ]
  }, {
    "id" : 108,
    "token" : "decimal|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 111, 112 ]
  }, {
    "id" : 111,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 113, 114 ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 115, 116 ]
  }, {
    "id" : 114,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "char",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 117 ]
  }, {
    "id" : 117,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 118, 119 ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 120 ]
  }, {
    "id" : 119,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "%",
    "type" : "InfixExpression",
    "children" : [ 121, 122 ]
  }, {
    "id" : 121,
    "token" : "decimal|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "/=",
    "type" : "Assignment",
    "children" : [ 124, 125 ]
  }, {
    "id" : 124,
    "token" : "decimal|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "romanToInt",
  "full_name" : "RomanToInteger.LongJavaFileProject.romanToInt",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int romanToInt(String A) {\n\n            char prev = ' ';\n\n            int sum = 0;\n\n            int newPrev = 0;\n            for (int i = A.length() - 1; i >= 0; i--) {\n                char c = A.charAt(i);\n\n                if (prev != ' ') {\n                    // checking current Number greater then previous or not\n                    newPrev = map.get(prev) > newPrev ? map.get(prev) : newPrev;\n                }\n\n                int currentNum = map.get(c);\n\n                // if current number greater then prev max previous then add\n                if (currentNum >= newPrev) {\n                    sum += currentNum;\n                } else {\n                    // subtract upcoming number until upcoming number not greater then prev max\n                    sum -= currentNum;\n                }\n\n                prev = c;\n            }\n\n            return sum;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "roman|to|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10, 11, 12, 13 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 18, 19 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 26, 27, 28, 29 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 95 ]
  }, {
    "id" : 14,
    "token" : "char",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "prev",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "sum",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "new|prev",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 30, 31 ]
  }, {
    "id" : 27,
    "token" : ">=",
    "type" : "InfixExpression",
    "children" : [ 38, 39 ]
  }, {
    "id" : 28,
    "token" : "--",
    "type" : "PostfixExpression",
    "children" : [ 40 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "Block",
    "children" : [ 41, 42, 43, 44, 45 ]
  }, {
    "id" : 30,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 32, 33 ]
  }, {
    "id" : 32,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 36, 37 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 46, 47 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 53, 54 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 72, 73 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 79, 80, 81 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 92 ]
  }, {
    "id" : 46,
    "token" : "char",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 48, 49 ]
  }, {
    "id" : 48,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 50, 51, 52 ]
  }, {
    "id" : 50,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "char|at",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 55, 56 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "Block",
    "children" : [ 57 ]
  }, {
    "id" : 55,
    "token" : "prev",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 58 ]
  }, {
    "id" : 58,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 59, 60 ]
  }, {
    "id" : 59,
    "token" : "new|prev",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "ConditionalExpression",
    "children" : [ 61, 62, 63 ]
  }, {
    "id" : 61,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 64, 65 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 69, 70, 71 ]
  }, {
    "id" : 63,
    "token" : "new|prev",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 66, 67, 68 ]
  }, {
    "id" : 65,
    "token" : "new|prev",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "map",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "prev",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "map",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "prev",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 74, 75 ]
  }, {
    "id" : 74,
    "token" : "current|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 76, 77, 78 ]
  }, {
    "id" : 76,
    "token" : "map",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : ">=",
    "type" : "InfixExpression",
    "children" : [ 82, 83 ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "Block",
    "children" : [ 84 ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "Block",
    "children" : [ 88 ]
  }, {
    "id" : 82,
    "token" : "current|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "new|prev",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 85 ]
  }, {
    "id" : 85,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 86, 87 ]
  }, {
    "id" : 86,
    "token" : "sum",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "current|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 89 ]
  }, {
    "id" : 89,
    "token" : "-=",
    "type" : "Assignment",
    "children" : [ 90, 91 ]
  }, {
    "id" : 90,
    "token" : "sum",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "current|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 93, 94 ]
  }, {
    "id" : 93,
    "token" : "prev",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "sum",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "Bag",
  "full_name" : "Bag.LongJavaFileProject.Bag",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Create an empty bag\n         */",
  "comment" : null,
  "body" : "public Bag() {\n            firstElement = null;\n            size = 0;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 5 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "bag",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "create|an|empty|bag",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 12 ]
  }, {
    "id" : 9,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 10, 11 ]
  }, {
    "id" : 10,
    "token" : "first|element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 13, 14 ]
  }, {
    "id" : 13,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "isEmpty",
  "full_name" : "Bag.LongJavaFileProject.isEmpty",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * @return true if this bag is empty, false otherwise\n         */",
  "comment" : null,
  "body" : "public boolean isEmpty() {\n            return firstElement == null;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 6 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 8 ]
  }, {
    "id" : 6,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 7 ]
  }, {
    "id" : 7,
    "token" : "true|if|this|bag|is|empty|false|otherwise",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 9 ]
  }, {
    "id" : 9,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 10, 11 ]
  }, {
    "id" : 10,
    "token" : "first|element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "size",
  "full_name" : "Bag.LongJavaFileProject.size",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * @return the number of elements\n         */",
  "comment" : null,
  "body" : "public int size() {\n            return size;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 6 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 8 ]
  }, {
    "id" : 6,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 7 ]
  }, {
    "id" : 7,
    "token" : "the|number|of|elements",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 9 ]
  }, {
    "id" : 9,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "add",
  "full_name" : "Bag.LongJavaFileProject.add",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * @param element - the element to add\n         */",
  "comment" : null,
  "body" : "public void add(Element element) {\n            Node<Element> oldfirst = firstElement;\n            firstElement = new Node<>();\n            firstElement.content = element;\n            firstElement.nextElement = oldfirst;\n            size++;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 13, 14, 15, 16, 17 ]
  }, {
    "id" : 7,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 8, 9 ]
  }, {
    "id" : 8,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "-|the|element|to|add",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "element",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 18, 19 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 26 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 32 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 35 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 38 ]
  }, {
    "id" : 18,
    "token" : "nodeelement",
    "type" : "ParameterizedType",
    "children" : [ 20, 21 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 24, 25 ]
  }, {
    "id" : 20,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 22 ]
  }, {
    "id" : 21,
    "token" : "element",
    "type" : "SimpleType",
    "children" : [ 23 ]
  }, {
    "id" : 22,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "oldfirst",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "first|element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "first|element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 29 ]
  }, {
    "id" : 29,
    "token" : "node",
    "type" : "ParameterizedType",
    "children" : [ 30 ]
  }, {
    "id" : 30,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 31 ]
  }, {
    "id" : 31,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "first|elementcontent",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "first|elementnext|element",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "oldfirst",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 39 ]
  }, {
    "id" : 39,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "contains",
  "full_name" : "Bag.LongJavaFileProject.contains",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Checks if the bag contains a specific element\n         *\n         * @param element which you want to look for\n         * @return true if bag contains element, otherwise false\n         */",
  "comment" : null,
  "body" : "public boolean contains(Element element) {\n            Iterator<Element> iterator = this.iterator();\n            while (iterator.hasNext()) {\n                if (iterator.next().equals(element)) {\n                    return true;\n                }\n            }\n            return false;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7, 8, 9 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 10 ]
  }, {
    "id" : 8,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 11, 12 ]
  }, {
    "id" : 9,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 13 ]
  }, {
    "id" : 10,
    "token" : "checks|if|the|bag|contains|a|specific|element",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "which|you|want|to|look|for",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "true|if|bag|contains|element|otherwise|false",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "element",
    "type" : "SimpleType",
    "children" : [ 16 ]
  }, {
    "id" : 15,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 30, 31 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 44 ]
  }, {
    "id" : 20,
    "token" : "iteratorelement",
    "type" : "ParameterizedType",
    "children" : [ 22, 23 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 22,
    "token" : "iterator",
    "type" : "SimpleType",
    "children" : [ 24 ]
  }, {
    "id" : 23,
    "token" : "element",
    "type" : "SimpleType",
    "children" : [ 25 ]
  }, {
    "id" : 24,
    "token" : "iterator",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "iterator",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "iterator",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 32, 33 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "Block",
    "children" : [ 34 ]
  }, {
    "id" : 32,
    "token" : "iterator",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "has|next",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 37, 38, 39 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "Block",
    "children" : [ 42 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 40, 41 ]
  }, {
    "id" : 38,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "iterator",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "next",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 43 ]
  }, {
    "id" : 43,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "iterator",
  "full_name" : "Bag.LongJavaFileProject.iterator",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * @return an iterator that iterates over the elements in this bag in arbitrary order\n         */",
  "comment" : null,
  "body" : "public Iterator<Element> iterator() {\n            return new ListIterator<>(firstElement);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 6 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "iteratorelement",
    "type" : "ParameterizedType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 4,
    "token" : "iterator",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 12 ]
  }, {
    "id" : 6,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 7 ]
  }, {
    "id" : 7,
    "token" : "an|iterator|that|iterates|over|the|elements|in|this|bag|in|arbitrary|order",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "iterator",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "element",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "iterator",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 13 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "list|iterator",
    "type" : "ParameterizedType",
    "children" : [ 16 ]
  }, {
    "id" : 15,
    "token" : "first|element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "list|iterator",
    "type" : "SimpleType",
    "children" : [ 17 ]
  }, {
    "id" : 17,
    "token" : "list|iterator",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "ListIterator",
  "full_name" : "ListIterator.Bag.LongJavaFileProject.ListIterator",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public ListIterator(Node<Element> firstElement) {\n                currentElement = firstElement;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "list|iterator",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 11 ]
  }, {
    "id" : 5,
    "token" : "nodeelement",
    "type" : "ParameterizedType",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "first|element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "element",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 12 ]
  }, {
    "id" : 12,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 13, 14 ]
  }, {
    "id" : 13,
    "token" : "current|element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "first|element",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "hasNext",
  "full_name" : "ListIterator.Bag.LongJavaFileProject.hasNext",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public boolean hasNext() {\n                return currentElement != null;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "has|next",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "current|element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "remove",
  "full_name" : "ListIterator.Bag.LongJavaFileProject.remove",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n             * remove is not allowed in a bag\n             */",
  "comment" : null,
  "body" : "@Override\n            public void remove() {\n                throw new UnsupportedOperationException();\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 9 ]
  }, {
    "id" : 3,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "remove",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "remove|is|not|allowed|in|a|bag",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 12 ]
  }, {
    "id" : 12,
    "token" : "unsupported|operation|exception",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 13,
    "token" : "unsupported|operation|exception",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "next",
  "full_name" : "ListIterator.Bag.LongJavaFileProject.next",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Element next() {\n                if (!hasNext())\n                    throw new NoSuchElementException();\n                Element element = currentElement.content;\n                currentElement = currentElement.nextElement;\n                return element;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "element",
    "type" : "SimpleType",
    "children" : [ 5 ]
  }, {
    "id" : 3,
    "token" : "next",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 6, 7, 8, 9 ]
  }, {
    "id" : 5,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 10, 11 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 17, 18 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 22 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 25 ]
  }, {
    "id" : 10,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 14 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 13 ]
  }, {
    "id" : 13,
    "token" : "has|next",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 15 ]
  }, {
    "id" : 15,
    "token" : "no|such|element|exception",
    "type" : "SimpleType",
    "children" : [ 16 ]
  }, {
    "id" : 16,
    "token" : "no|such|element|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "element",
    "type" : "SimpleType",
    "children" : [ 19 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 20, 21 ]
  }, {
    "id" : 19,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "current|elementcontent",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 23, 24 ]
  }, {
    "id" : 23,
    "token" : "current|element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "current|elementnext|element",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "CircularBuffer",
  "full_name" : "CircularBuffer.LongJavaFileProject.CircularBuffer",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public CircularBuffer(int buffer_size) {\n            if (!IsPowerOfTwo(buffer_size)) {\n                throw new IllegalArgumentException();\n            }\n            this._buffer_size = buffer_size;\n            _buffer = new char[buffer_size];\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "circular|buffer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 7, 8, 9 ]
  }, {
    "id" : 5,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "buffer|size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 10, 11 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 19 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 24 ]
  }, {
    "id" : 10,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "Block",
    "children" : [ 15 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 13, 14 ]
  }, {
    "id" : 13,
    "token" : "is|power|of|two",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "buffer|size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 16 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 17 ]
  }, {
    "id" : 17,
    "token" : "illegal|argument|exception",
    "type" : "SimpleType",
    "children" : [ 18 ]
  }, {
    "id" : 18,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 22, 23 ]
  }, {
    "id" : 21,
    "token" : "buffer|size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "buffer|size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 25, 26 ]
  }, {
    "id" : 25,
    "token" : "buffer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "char",
    "type" : "ArrayType",
    "children" : [ 29, 30 ]
  }, {
    "id" : 28,
    "token" : "buffer|size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "char",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  } ]
}, {
  "name" : "IsPowerOfTwo",
  "full_name" : "CircularBuffer.LongJavaFileProject.IsPowerOfTwo",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private boolean IsPowerOfTwo(int i) {\n            return (i & (i - 1)) == 0;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "is|power|of|two",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 8 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 9 ]
  }, {
    "id" : 9,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 10, 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "&",
    "type" : "InfixExpression",
    "children" : [ 13, 14 ]
  }, {
    "id" : 13,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 15 ]
  }, {
    "id" : 15,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "getTrueIndex",
  "full_name" : "CircularBuffer.LongJavaFileProject.getTrueIndex",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private int getTrueIndex(int i) {\n            return i % _buffer_size;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "get|true|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 8 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 9 ]
  }, {
    "id" : 9,
    "token" : "%",
    "type" : "InfixExpression",
    "children" : [ 10, 11 ]
  }, {
    "id" : 10,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "buffer|size",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "readOutChar",
  "full_name" : "CircularBuffer.LongJavaFileProject.readOutChar",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Character readOutChar() {\n            Character result = null;\n\n\n            //if we have data to read\n            if (_readable_data.get() > 0) {\n\n                result = Character.valueOf(_buffer[getTrueIndex(_read_index)]);\n                _readable_data.decrementAndGet();\n                _read_index++;\n            }\n\n            return result;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "character",
    "type" : "SimpleType",
    "children" : [ 5 ]
  }, {
    "id" : 3,
    "token" : "read|out|char",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 6, 7, 8 ]
  }, {
    "id" : 5,
    "token" : "character",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 9, 10 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 38 ]
  }, {
    "id" : 9,
    "token" : "character",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 12, 13 ]
  }, {
    "id" : 11,
    "token" : "character",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "Block",
    "children" : [ 20, 21, 22 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "readable|data",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 23 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 33 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 36 ]
  }, {
    "id" : 23,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 26, 27, 28 ]
  }, {
    "id" : 26,
    "token" : "character",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "value|of",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 29, 30 ]
  }, {
    "id" : 29,
    "token" : "buffer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "get|true|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "read|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "readable|data",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "decrement|and|get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 37 ]
  }, {
    "id" : 37,
    "token" : "read|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "writeToCharBuffer",
  "full_name" : "CircularBuffer.LongJavaFileProject.writeToCharBuffer",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public boolean writeToCharBuffer(char c) {\n            boolean result = false;\n\n            //if we can write to the buffer\n            if (_readable_data.get() < _buffer_size) {\n                //write to buffer\n                _buffer[getTrueIndex(_write_index)] = c;\n                _readable_data.incrementAndGet();\n                _write_index++;\n                result = true;\n            }\n\n            return result;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "write|to|char|buffer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 8, 9, 10 ]
  }, {
    "id" : 6,
    "token" : "char",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 11, 12 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 15, 16 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 40 ]
  }, {
    "id" : 11,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 13, 14 ]
  }, {
    "id" : 13,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 17, 18 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "Block",
    "children" : [ 21, 22, 23, 24 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 19, 20 ]
  }, {
    "id" : 18,
    "token" : "buffer|size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "readable|data",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 25 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 32 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 35 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 37 ]
  }, {
    "id" : 25,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 28, 29 ]
  }, {
    "id" : 27,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "buffer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "get|true|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "write|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "readable|data",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "increment|and|get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 36 ]
  }, {
    "id" : 36,
    "token" : "write|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 38, 39 ]
  }, {
    "id" : 38,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "TestWriteWorker",
  "full_name" : "TestWriteWorker.CircularBuffer.LongJavaFileProject.TestWriteWorker",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public TestWriteWorker(CircularBuffer cb) {\n                this._buffer = cb;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "test|write|worker",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 8 ]
  }, {
    "id" : 5,
    "token" : "circular|buffer",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "cb",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "circular|buffer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 9 ]
  }, {
    "id" : 9,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 10, 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 12, 13 ]
  }, {
    "id" : 11,
    "token" : "cb",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "buffer",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "getRandomChar",
  "full_name" : "TestWriteWorker.CircularBuffer.LongJavaFileProject.getRandomChar",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private char getRandomChar() {\n                return _alphabet.charAt(_random.nextInt(_alphabet.length()));\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "char",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "get|random|char",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 7, 8, 9 ]
  }, {
    "id" : 7,
    "token" : "alphabet",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "char|at",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 10, 11, 12 ]
  }, {
    "id" : 10,
    "token" : "random",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "next|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 13, 14 ]
  }, {
    "id" : 13,
    "token" : "alphabet",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "run",
  "full_name" : "TestWriteWorker.CircularBuffer.LongJavaFileProject.run",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void run() {\n                while (!Thread.interrupted()) {\n                    if (!_buffer.writeToCharBuffer(getRandomChar())) {\n                        Thread.yield();\n                        try {\n                            Thread.sleep(10);\n                        } catch (InterruptedException e) {\n                            return;\n                        }\n                    }\n                }\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "run",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 6, 7 ]
  }, {
    "id" : 6,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 11 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 9, 10 ]
  }, {
    "id" : 9,
    "token" : "thread",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "interrupted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 12,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "Block",
    "children" : [ 19, 20 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "buffer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "write|to|char|buffer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 18 ]
  }, {
    "id" : 18,
    "token" : "get|random|char",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 21 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "TryStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "thread",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "yield",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "Block",
    "children" : [ 26 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "CatchClause",
    "children" : [ 31, 32 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 27 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28, 29, 30 ]
  }, {
    "id" : 28,
    "token" : "thread",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "sleep",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 33, 34 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "Block",
    "children" : [ 36 ]
  }, {
    "id" : 33,
    "token" : "interrupted|exception",
    "type" : "SimpleType",
    "children" : [ 35 ]
  }, {
    "id" : 34,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "interrupted|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ ]
  } ]
}, {
  "name" : "TestReadWorker",
  "full_name" : "TestReadWorker.CircularBuffer.LongJavaFileProject.TestReadWorker",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public TestReadWorker(CircularBuffer cb) {\n                this._buffer = cb;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "test|read|worker",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 8 ]
  }, {
    "id" : 5,
    "token" : "circular|buffer",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "cb",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "circular|buffer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 9 ]
  }, {
    "id" : 9,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 10, 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 12, 13 ]
  }, {
    "id" : 11,
    "token" : "cb",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "buffer",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "run",
  "full_name" : "TestReadWorker.CircularBuffer.LongJavaFileProject.run",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void run() {\n                System.out.println(\"Printing Buffer:\");\n                while (!Thread.interrupted()) {\n                    Character c = _buffer.readOutChar();\n                    if (c != null) {\n                        System.out.print(c.charValue());\n                    } else {\n                        Thread.yield();\n                        try {\n                            Thread.sleep(10);\n                        } catch (InterruptedException e) {\n                            System.out.println();\n                            return;\n                        }\n                    }\n                }\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "run",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 11, 12 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 8, 9, 10 ]
  }, {
    "id" : 8,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "printing|buffer",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Block",
    "children" : [ 16, 17 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "thread",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "interrupted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 25, 26, 27 ]
  }, {
    "id" : 18,
    "token" : "character",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "character",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 23, 24 ]
  }, {
    "id" : 23,
    "token" : "buffer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "read|out|char",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 28, 29 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "Block",
    "children" : [ 30 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "Block",
    "children" : [ 37, 38 ]
  }, {
    "id" : 28,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 31 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 32, 33, 34 ]
  }, {
    "id" : 32,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "char|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 39 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "TryStatement",
    "children" : [ 42, 43 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "thread",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "yield",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "Block",
    "children" : [ 44 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "CatchClause",
    "children" : [ 49, 50 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 45 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 46, 47, 48 ]
  }, {
    "id" : 46,
    "token" : "thread",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "sleep",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 51, 52 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "Block",
    "children" : [ 54, 55 ]
  }, {
    "id" : 51,
    "token" : "interrupted|exception",
    "type" : "SimpleType",
    "children" : [ 53 ]
  }, {
    "id" : 52,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "interrupted|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 56 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 57, 58 ]
  }, {
    "id" : 57,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "BellmanFord",
  "full_name" : "BellmanFord.LongJavaFileProject.BellmanFord",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "BellmanFord(int v,int e)\n        {\n            vertex=v;\n            edge=e;\n            edges=new Edge[e];\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "bellman|ford",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10, 11 ]
  }, {
    "id" : 5,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 12 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 15 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 18 ]
  }, {
    "id" : 12,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 13, 14 ]
  }, {
    "id" : 13,
    "token" : "vertex",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "edges",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 21, 22 ]
  }, {
    "id" : 21,
    "token" : "edge",
    "type" : "ArrayType",
    "children" : [ 23, 24 ]
  }, {
    "id" : 22,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "edge",
    "type" : "SimpleType",
    "children" : [ 25 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "edge",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "Edge",
  "full_name" : "Edge.BellmanFord.LongJavaFileProject.Edge",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "Edge(int a,int b,int c)\n            {\n                u=a;\n                v=b;\n                w=c;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 15 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 18 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 21 ]
  }, {
    "id" : 15,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "u",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "w",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "printPath",
  "full_name" : "BellmanFord.LongJavaFileProject.printPath",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "void printPath(int p[],int i)\n        {\n            if(p[i]==-1)//Found the path back to parent\n                return;\n            printPath(p,p[i]);\n            System.out.print(i+\" \");\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "print|path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7, 8 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 21 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 27 ]
  }, {
    "id" : 14,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 20 ]
  }, {
    "id" : 18,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 22, 23, 24 ]
  }, {
    "id" : 22,
    "token" : "print|path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 25, 26 ]
  }, {
    "id" : 25,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28, 29, 30 ]
  }, {
    "id" : 28,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "BellmanFord.LongJavaFileProject.main",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void main(String args[])\n        {\n            BellmanFord obj=new BellmanFord(0,0);//Dummy object to call nonstatic variables\n            obj.go();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 21 ]
  }, {
    "id" : 12,
    "token" : "bellman|ford",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "bellman|ford",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "obj",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 17,
    "token" : "bellman|ford",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "bellman|ford",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "obj",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "go",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "go",
  "full_name" : "BellmanFord.LongJavaFileProject.go",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void go()//Interactive run for understanding the class first time. Assumes source vertex is 0 and shows distaance to all vertices\n        {\n            Scanner sc=new Scanner(System.in);//Grab scanner object for user input\n            int i,v,e,u,ve,w,j,neg=0;\n            System.out.println(\"Enter no. of vertices and edges please\");\n            v=sc.nextInt();\n            e=sc.nextInt();\n            Edge arr[]=new Edge[e];//Array of edges\n            System.out.println(\"Input edges\");\n            for(i=0;i<e;i++)\n            {\n                u=sc.nextInt();\n                ve=sc.nextInt();\n                w=sc.nextInt();\n                arr[i]=new Edge(u,ve,w);\n            }\n            int dist[]=new int[v];//Distance array for holding the finalized shortest path distance between source and all vertices\n            int p[]=new int[v];//Parent array for holding the paths\n            for(i=0;i<v;i++)\n                dist[i]=Integer.MAX_VALUE;//Initializing distance values\n            dist[0]=0;\n            p[0]=-1;\n            for(i=0;i<v-1;i++)\n            {\n                for(j=0;j<e;j++)\n                {\n                    if((int)dist[arr[j].u]!=Integer.MAX_VALUE&&dist[arr[j].v]>dist[arr[j].u]+arr[j].w)\n                    {\n                        dist[arr[j].v]=dist[arr[j].u]+arr[j].w;//Update\n                        p[arr[j].v]=arr[j].u;\n                    }\n                }\n            }\n            //Final cycle for negative checking\n            for(j=0;j<e;j++)\n                if((int)dist[arr[j].u]!=Integer.MAX_VALUE&&dist[arr[j].v]>dist[arr[j].u]+arr[j].w)\n                {\n                    neg=1;\n                    System.out.println(\"Negative cycle\");\n                    break;\n                }\n            if(neg==0)//Go ahead and show results of computaion\n            {\n                System.out.println(\"Distances are: \");\n                for(i=0;i<v;i++)\n                    System.out.println(i+\" \"+dist[i]);\n                System.out.println(\"Path followed:\");\n                for(i=0;i<v;i++)\n                {\n                    System.out.print(\"0 \");\n                    printPath(p,i);\n                    System.out.println();\n                }\n            }\n            sc.close();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "go",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 30, 31, 32, 33, 34, 35, 36, 37, 38 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 48 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 52 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 57 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 62, 63 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 73 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 77, 78, 79, 80 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 115, 116 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 124, 125 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 133, 134, 135, 136 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 147 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 152 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 158, 159, 160, 161 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 250, 251, 252, 253 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 303, 304 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 360 ]
  }, {
    "id" : 22,
    "token" : "scanner",
    "type" : "SimpleType",
    "children" : [ 24 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 25, 26 ]
  }, {
    "id" : 24,
    "token" : "scanner",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "sc",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "scanner",
    "type" : "SimpleType",
    "children" : [ 29 ]
  }, {
    "id" : 28,
    "token" : "systemin",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "scanner",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 39 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 40 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 41 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 42 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 43 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 44 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 45 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 46, 47 ]
  }, {
    "id" : 39,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "u",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "ve",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "w",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "neg",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 49, 50, 51 ]
  }, {
    "id" : 49,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "enter|no|of|vertices|and|edges|please",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 53, 54 ]
  }, {
    "id" : 53,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 55, 56 ]
  }, {
    "id" : 55,
    "token" : "sc",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "next|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 58, 59 ]
  }, {
    "id" : 58,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 60, 61 ]
  }, {
    "id" : 60,
    "token" : "sc",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "next|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "edge",
    "type" : "SimpleType",
    "children" : [ 64 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 65, 66, 67 ]
  }, {
    "id" : 64,
    "token" : "edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 68, 69 ]
  }, {
    "id" : 68,
    "token" : "edge",
    "type" : "ArrayType",
    "children" : [ 70, 71 ]
  }, {
    "id" : 69,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "edge",
    "type" : "SimpleType",
    "children" : [ 72 ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 74, 75, 76 ]
  }, {
    "id" : 74,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "input|edges",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 81, 82 ]
  }, {
    "id" : 78,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 83, 84 ]
  }, {
    "id" : 79,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 85 ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "Block",
    "children" : [ 86, 87, 88, 89 ]
  }, {
    "id" : 81,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 90 ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 95 ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 100 ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 105 ]
  }, {
    "id" : 90,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 91, 92 ]
  }, {
    "id" : 91,
    "token" : "u",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 93, 94 ]
  }, {
    "id" : 93,
    "token" : "sc",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "next|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 96, 97 ]
  }, {
    "id" : 96,
    "token" : "ve",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 98, 99 ]
  }, {
    "id" : 98,
    "token" : "sc",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "next|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 101, 102 ]
  }, {
    "id" : 101,
    "token" : "w",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 103, 104 ]
  }, {
    "id" : 103,
    "token" : "sc",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "next|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 106, 107 ]
  }, {
    "id" : 106,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 108, 109 ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 110, 111, 112, 113 ]
  }, {
    "id" : 108,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "edge",
    "type" : "SimpleType",
    "children" : [ 114 ]
  }, {
    "id" : 111,
    "token" : "u",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "ve",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "w",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 117, 118, 119 ]
  }, {
    "id" : 117,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 120, 121 ]
  }, {
    "id" : 120,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 122, 123 ]
  }, {
    "id" : 121,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 126, 127, 128 ]
  }, {
    "id" : 126,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 129, 130 ]
  }, {
    "id" : 129,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 131, 132 ]
  }, {
    "id" : 130,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 132,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 137, 138 ]
  }, {
    "id" : 134,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 139, 140 ]
  }, {
    "id" : 135,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 141 ]
  }, {
    "id" : 136,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 142 ]
  }, {
    "id" : 137,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 138,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 139,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 140,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 141,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 143, 144 ]
  }, {
    "id" : 143,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 145, 146 ]
  }, {
    "id" : 144,
    "token" : "integermax|value",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 146,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 148, 149 ]
  }, {
    "id" : 148,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 150, 151 ]
  }, {
    "id" : 149,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 151,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 152,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 153, 154 ]
  }, {
    "id" : 153,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 155, 156 ]
  }, {
    "id" : 154,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 157 ]
  }, {
    "id" : 155,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 157,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 158,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 162, 163 ]
  }, {
    "id" : 159,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 164, 165 ]
  }, {
    "id" : 160,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 168 ]
  }, {
    "id" : 161,
    "token" : "",
    "type" : "Block",
    "children" : [ 169 ]
  }, {
    "id" : 162,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 163,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 164,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 165,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 166, 167 ]
  }, {
    "id" : 166,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 167,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 168,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 169,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 170, 171, 172, 173 ]
  }, {
    "id" : 170,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 174, 175 ]
  }, {
    "id" : 171,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 176, 177 ]
  }, {
    "id" : 172,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 178 ]
  }, {
    "id" : 173,
    "token" : "",
    "type" : "Block",
    "children" : [ 179 ]
  }, {
    "id" : 174,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 175,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 176,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 177,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 178,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 179,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 180, 181 ]
  }, {
    "id" : 180,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 182, 183 ]
  }, {
    "id" : 181,
    "token" : "",
    "type" : "Block",
    "children" : [ 214, 215 ]
  }, {
    "id" : 182,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 184, 185 ]
  }, {
    "id" : 183,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 194, 195 ]
  }, {
    "id" : 184,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 186, 187 ]
  }, {
    "id" : 185,
    "token" : "integermax|value",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 186,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 187,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 188, 189 ]
  }, {
    "id" : 188,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 189,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 190, 191 ]
  }, {
    "id" : 190,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 192, 193 ]
  }, {
    "id" : 191,
    "token" : "u",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 192,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 193,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 194,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 196, 197 ]
  }, {
    "id" : 195,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 202, 203 ]
  }, {
    "id" : 196,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 197,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 198, 199 ]
  }, {
    "id" : 198,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 200, 201 ]
  }, {
    "id" : 199,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 200,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 201,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 202,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 204, 205 ]
  }, {
    "id" : 203,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 210, 211 ]
  }, {
    "id" : 204,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 205,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 206, 207 ]
  }, {
    "id" : 206,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 208, 209 ]
  }, {
    "id" : 207,
    "token" : "u",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 208,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 209,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 210,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 212, 213 ]
  }, {
    "id" : 211,
    "token" : "w",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 212,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 213,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 214,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 216 ]
  }, {
    "id" : 215,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 237 ]
  }, {
    "id" : 216,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 217, 218 ]
  }, {
    "id" : 217,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 219, 220 ]
  }, {
    "id" : 218,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 225, 226 ]
  }, {
    "id" : 219,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 220,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 221, 222 ]
  }, {
    "id" : 221,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 223, 224 ]
  }, {
    "id" : 222,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 223,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 224,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 225,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 227, 228 ]
  }, {
    "id" : 226,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 233, 234 ]
  }, {
    "id" : 227,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 228,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 229, 230 ]
  }, {
    "id" : 229,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 231, 232 ]
  }, {
    "id" : 230,
    "token" : "u",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 231,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 232,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 233,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 235, 236 ]
  }, {
    "id" : 234,
    "token" : "w",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 235,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 236,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 237,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 238, 239 ]
  }, {
    "id" : 238,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 240, 241 ]
  }, {
    "id" : 239,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 246, 247 ]
  }, {
    "id" : 240,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 241,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 242, 243 ]
  }, {
    "id" : 242,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 244, 245 ]
  }, {
    "id" : 243,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 244,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 245,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 246,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 248, 249 ]
  }, {
    "id" : 247,
    "token" : "u",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 248,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 249,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 250,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 254, 255 ]
  }, {
    "id" : 251,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 256, 257 ]
  }, {
    "id" : 252,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 258 ]
  }, {
    "id" : 253,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 259, 260 ]
  }, {
    "id" : 254,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 255,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 256,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 257,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 258,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 259,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 261, 262 ]
  }, {
    "id" : 260,
    "token" : "",
    "type" : "Block",
    "children" : [ 293, 294, 295 ]
  }, {
    "id" : 261,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 263, 264 ]
  }, {
    "id" : 262,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 273, 274 ]
  }, {
    "id" : 263,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 265, 266 ]
  }, {
    "id" : 264,
    "token" : "integermax|value",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 265,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 266,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 267, 268 ]
  }, {
    "id" : 267,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 268,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 269, 270 ]
  }, {
    "id" : 269,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 271, 272 ]
  }, {
    "id" : 270,
    "token" : "u",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 271,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 272,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 273,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 275, 276 ]
  }, {
    "id" : 274,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 281, 282 ]
  }, {
    "id" : 275,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 276,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 277, 278 ]
  }, {
    "id" : 277,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 279, 280 ]
  }, {
    "id" : 278,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 279,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 280,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 281,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 283, 284 ]
  }, {
    "id" : 282,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 289, 290 ]
  }, {
    "id" : 283,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 284,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 285, 286 ]
  }, {
    "id" : 285,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 287, 288 ]
  }, {
    "id" : 286,
    "token" : "u",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 287,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 288,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 289,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 291, 292 ]
  }, {
    "id" : 290,
    "token" : "w",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 291,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 292,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 293,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 296 ]
  }, {
    "id" : 294,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 299 ]
  }, {
    "id" : 295,
    "token" : "",
    "type" : "BreakStatement",
    "children" : [ ]
  }, {
    "id" : 296,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 297, 298 ]
  }, {
    "id" : 297,
    "token" : "neg",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 298,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 299,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 300, 301, 302 ]
  }, {
    "id" : 300,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 301,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 302,
    "token" : "negative|cycle",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 303,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 305, 306 ]
  }, {
    "id" : 304,
    "token" : "",
    "type" : "Block",
    "children" : [ 307, 308, 309, 310 ]
  }, {
    "id" : 305,
    "token" : "neg",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 306,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 307,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 311 ]
  }, {
    "id" : 308,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 315, 316, 317, 318 ]
  }, {
    "id" : 309,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 333 ]
  }, {
    "id" : 310,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 337, 338, 339, 340 ]
  }, {
    "id" : 311,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 312, 313, 314 ]
  }, {
    "id" : 312,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 313,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 314,
    "token" : "distances|are",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 315,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 319, 320 ]
  }, {
    "id" : 316,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 321, 322 ]
  }, {
    "id" : 317,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 323 ]
  }, {
    "id" : 318,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 324 ]
  }, {
    "id" : 319,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 320,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 321,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 322,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 323,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 324,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 325, 326, 327 ]
  }, {
    "id" : 325,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 326,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 327,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 328, 329, 330 ]
  }, {
    "id" : 328,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 329,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 330,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 331, 332 ]
  }, {
    "id" : 331,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 332,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 333,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 334, 335, 336 ]
  }, {
    "id" : 334,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 335,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 336,
    "token" : "path|followed",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 337,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 341, 342 ]
  }, {
    "id" : 338,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 343, 344 ]
  }, {
    "id" : 339,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 345 ]
  }, {
    "id" : 340,
    "token" : "",
    "type" : "Block",
    "children" : [ 346, 347, 348 ]
  }, {
    "id" : 341,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 342,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 343,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 344,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 345,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 346,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 349 ]
  }, {
    "id" : 347,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 353 ]
  }, {
    "id" : 348,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 357 ]
  }, {
    "id" : 349,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 350, 351, 352 ]
  }, {
    "id" : 350,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 351,
    "token" : "print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 352,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 353,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 354, 355, 356 ]
  }, {
    "id" : 354,
    "token" : "print|path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 355,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 356,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 357,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 358, 359 ]
  }, {
    "id" : 358,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 359,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 360,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 361, 362 ]
  }, {
    "id" : 361,
    "token" : "sc",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 362,
    "token" : "close",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "show",
  "full_name" : "BellmanFord.LongJavaFileProject.show",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void show(int source,int end, Edge arr[]) {\n            int i,j,v=vertex,e=edge,neg=0;\n            double dist[]=new double[v];//Distance array for holding the finalized shortest path distance between source and all vertices\n            int p[]=new int[v];//Parent array for holding the paths\n            for(i=0;i<v;i++)\n                dist[i]=Integer.MAX_VALUE;//Initializing distance values\n            dist[source]=0;\n            p[source]=-1;\n            for(i=0;i<v-1;i++)\n            {\n                for(j=0;j<e;j++)\n                {\n                    if((int)dist[arr[j].u]!=Integer.MAX_VALUE&&dist[arr[j].v]>dist[arr[j].u]+arr[j].w)\n                    {\n                        dist[arr[j].v]=dist[arr[j].u]+arr[j].w;//Update\n                        p[arr[j].v]=arr[j].u;\n                    }\n                }\n            }\n            //Final cycle for negative checking\n            for(j=0;j<e;j++)\n                if((int)dist[arr[j].u]!=Integer.MAX_VALUE&&dist[arr[j].v]>dist[arr[j].u]+arr[j].w)\n                {\n                    neg=1;\n                    System.out.println(\"Negative cycle\");\n                    break;\n                }\n            if(neg==0)//Go ahead and show results of computaion\n            {\n                System.out.println(\"Distance is: \"+dist[end]);\n                System.out.println(\"Path followed:\");\n                System.out.print(source+\" \");\n                printPath(p,end);\n                System.out.println();\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "show",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 16, 17, 18, 19, 20, 21, 22, 23, 24 ]
  }, {
    "id" : 8,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "source",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "end",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "edge",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 13,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 25, 26, 27, 28, 29, 30 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 39, 40 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 48, 49 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 57, 58, 59, 60 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 71 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 76 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 82, 83, 84, 85 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 174, 175, 176, 177 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 227, 228 ]
  }, {
    "id" : 25,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 31 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 32 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 35, 36 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 37, 38 ]
  }, {
    "id" : 31,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "vertex",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "neg",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 41, 42, 43 ]
  }, {
    "id" : 41,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 44, 45 ]
  }, {
    "id" : 44,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 46, 47 ]
  }, {
    "id" : 45,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 50, 51, 52 ]
  }, {
    "id" : 50,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 53, 54 ]
  }, {
    "id" : 53,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 55, 56 ]
  }, {
    "id" : 54,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 61, 62 ]
  }, {
    "id" : 58,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 63, 64 ]
  }, {
    "id" : 59,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 65 ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 66 ]
  }, {
    "id" : 61,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 67, 68 ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 69, 70 ]
  }, {
    "id" : 68,
    "token" : "integermax|value",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 72, 73 ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 74, 75 ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "source",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 77, 78 ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 79, 80 ]
  }, {
    "id" : 78,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 81 ]
  }, {
    "id" : 79,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "source",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 86, 87 ]
  }, {
    "id" : 83,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 88, 89 ]
  }, {
    "id" : 84,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 92 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "Block",
    "children" : [ 93 ]
  }, {
    "id" : 86,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 90, 91 ]
  }, {
    "id" : 90,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 94, 95, 96, 97 ]
  }, {
    "id" : 94,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 98, 99 ]
  }, {
    "id" : 95,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 100, 101 ]
  }, {
    "id" : 96,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 102 ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "Block",
    "children" : [ 103 ]
  }, {
    "id" : 98,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 104, 105 ]
  }, {
    "id" : 104,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 106, 107 ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "Block",
    "children" : [ 138, 139 ]
  }, {
    "id" : 106,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 108, 109 ]
  }, {
    "id" : 107,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 118, 119 ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 110, 111 ]
  }, {
    "id" : 109,
    "token" : "integermax|value",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 112, 113 ]
  }, {
    "id" : 112,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 114, 115 ]
  }, {
    "id" : 114,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 116, 117 ]
  }, {
    "id" : 115,
    "token" : "u",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 120, 121 ]
  }, {
    "id" : 119,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 126, 127 ]
  }, {
    "id" : 120,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 122, 123 ]
  }, {
    "id" : 122,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 124, 125 ]
  }, {
    "id" : 123,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 128, 129 ]
  }, {
    "id" : 127,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 134, 135 ]
  }, {
    "id" : 128,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 130, 131 ]
  }, {
    "id" : 130,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 132, 133 ]
  }, {
    "id" : 131,
    "token" : "u",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 132,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 134,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 136, 137 ]
  }, {
    "id" : 135,
    "token" : "w",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 137,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 138,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 140 ]
  }, {
    "id" : 139,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 161 ]
  }, {
    "id" : 140,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 141, 142 ]
  }, {
    "id" : 141,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 143, 144 ]
  }, {
    "id" : 142,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 149, 150 ]
  }, {
    "id" : 143,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 144,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 145, 146 ]
  }, {
    "id" : 145,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 147, 148 ]
  }, {
    "id" : 146,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 151, 152 ]
  }, {
    "id" : 150,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 157, 158 ]
  }, {
    "id" : 151,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 152,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 153, 154 ]
  }, {
    "id" : 153,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 155, 156 ]
  }, {
    "id" : 154,
    "token" : "u",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 155,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 157,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 159, 160 ]
  }, {
    "id" : 158,
    "token" : "w",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 159,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 160,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 162, 163 ]
  }, {
    "id" : 162,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 164, 165 ]
  }, {
    "id" : 163,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 170, 171 ]
  }, {
    "id" : 164,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 165,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 166, 167 ]
  }, {
    "id" : 166,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 168, 169 ]
  }, {
    "id" : 167,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 168,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 169,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 170,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 172, 173 ]
  }, {
    "id" : 171,
    "token" : "u",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 172,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 173,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 174,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 178, 179 ]
  }, {
    "id" : 175,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 180, 181 ]
  }, {
    "id" : 176,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 182 ]
  }, {
    "id" : 177,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 183, 184 ]
  }, {
    "id" : 178,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 179,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 180,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 181,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 182,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 183,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 185, 186 ]
  }, {
    "id" : 184,
    "token" : "",
    "type" : "Block",
    "children" : [ 217, 218, 219 ]
  }, {
    "id" : 185,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 187, 188 ]
  }, {
    "id" : 186,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 197, 198 ]
  }, {
    "id" : 187,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 189, 190 ]
  }, {
    "id" : 188,
    "token" : "integermax|value",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 189,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 190,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 191, 192 ]
  }, {
    "id" : 191,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 192,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 193, 194 ]
  }, {
    "id" : 193,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 195, 196 ]
  }, {
    "id" : 194,
    "token" : "u",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 195,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 196,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 197,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 199, 200 ]
  }, {
    "id" : 198,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 205, 206 ]
  }, {
    "id" : 199,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 200,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 201, 202 ]
  }, {
    "id" : 201,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 203, 204 ]
  }, {
    "id" : 202,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 203,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 204,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 205,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 207, 208 ]
  }, {
    "id" : 206,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 213, 214 ]
  }, {
    "id" : 207,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 208,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 209, 210 ]
  }, {
    "id" : 209,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 211, 212 ]
  }, {
    "id" : 210,
    "token" : "u",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 211,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 212,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 213,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 215, 216 ]
  }, {
    "id" : 214,
    "token" : "w",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 215,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 216,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 217,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 220 ]
  }, {
    "id" : 218,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 223 ]
  }, {
    "id" : 219,
    "token" : "",
    "type" : "BreakStatement",
    "children" : [ ]
  }, {
    "id" : 220,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 221, 222 ]
  }, {
    "id" : 221,
    "token" : "neg",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 222,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 223,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 224, 225, 226 ]
  }, {
    "id" : 224,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 225,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 226,
    "token" : "negative|cycle",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 227,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 229, 230 ]
  }, {
    "id" : 228,
    "token" : "",
    "type" : "Block",
    "children" : [ 231, 232, 233, 234, 235 ]
  }, {
    "id" : 229,
    "token" : "neg",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 230,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 231,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 236 ]
  }, {
    "id" : 232,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 244 ]
  }, {
    "id" : 233,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 248 ]
  }, {
    "id" : 234,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 254 ]
  }, {
    "id" : 235,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 258 ]
  }, {
    "id" : 236,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 237, 238, 239 ]
  }, {
    "id" : 237,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 238,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 239,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 240, 241 ]
  }, {
    "id" : 240,
    "token" : "distance|is",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 241,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 242, 243 ]
  }, {
    "id" : 242,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 243,
    "token" : "end",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 244,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 245, 246, 247 ]
  }, {
    "id" : 245,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 246,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 247,
    "token" : "path|followed",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 248,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 249, 250, 251 ]
  }, {
    "id" : 249,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 250,
    "token" : "print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 251,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 252, 253 ]
  }, {
    "id" : 252,
    "token" : "source",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 253,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 254,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 255, 256, 257 ]
  }, {
    "id" : 255,
    "token" : "print|path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 256,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 257,
    "token" : "end",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 258,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 259, 260 ]
  }, {
    "id" : 259,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 260,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "addEdge",
  "full_name" : "BellmanFord.LongJavaFileProject.addEdge",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         *@param x Source Vertex\n         * @param y End vertex\n         * @param z Weight\n         */",
  "comment" : null,
  "body" : "public void addEdge(int x,int y,int z)//Adds unidirectionl Edge\n        {\n            edges[index++]=new Edge(x,y,z);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 9, 10, 11 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "add|edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 18, 19 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 20, 21 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 22, 23 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Block",
    "children" : [ 24 ]
  }, {
    "id" : 9,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 10,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 11,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 12,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "source|vertex",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "end|vertex",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "z",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "weight",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "z",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 25 ]
  }, {
    "id" : 25,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 28, 29 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 31, 32, 33, 34 ]
  }, {
    "id" : 28,
    "token" : "edges",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 30 ]
  }, {
    "id" : 30,
    "token" : "index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "edge",
    "type" : "SimpleType",
    "children" : [ 35 ]
  }, {
    "id" : 32,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "z",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "edge",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "getEdgeArray",
  "full_name" : "BellmanFord.LongJavaFileProject.getEdgeArray",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Edge[] getEdgeArray()\n        {\n            return edges;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "edge",
    "type" : "ArrayType",
    "children" : [ 5, 6 ]
  }, {
    "id" : 3,
    "token" : "get|edge|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 8 ]
  }, {
    "id" : 5,
    "token" : "edge",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 9 ]
  }, {
    "id" : 9,
    "token" : "edges",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "Node",
  "full_name" : "Node.Graph.LongJavaFileProject.Node",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Node(E name) {\n                this.name = name;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 8 ]
  }, {
    "id" : 5,
    "token" : "e",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "name",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 9 ]
  }, {
    "id" : 9,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 10, 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 12, 13 ]
  }, {
    "id" : 11,
    "token" : "name",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "name",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "Edge",
  "full_name" : "Edge.Graph.LongJavaFileProject.Edge",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Edge(Node startNode, Node endNode) {\n                this.startNode = startNode;\n                this.endNode = endNode;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 12, 13 ]
  }, {
    "id" : 6,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "start|node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "end|node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 19 ]
  }, {
    "id" : 14,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 15, 16 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 17, 18 ]
  }, {
    "id" : 16,
    "token" : "start|node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "start|node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 22, 23 ]
  }, {
    "id" : 21,
    "token" : "end|node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "end|node",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "Graph",
  "full_name" : "Graph.LongJavaFileProject.Graph",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Graph() {\n            edgeList = new ArrayList<Edge>();\n            nodeList = new ArrayList<Node>();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "graph",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4, 5 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 6 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 14 ]
  }, {
    "id" : 6,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "edge|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 9 ]
  }, {
    "id" : 9,
    "token" : "array|listedge",
    "type" : "ParameterizedType",
    "children" : [ 10, 11 ]
  }, {
    "id" : 10,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "edge",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 15, 16 ]
  }, {
    "id" : 15,
    "token" : "node|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 17 ]
  }, {
    "id" : 17,
    "token" : "array|listnode",
    "type" : "ParameterizedType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 18,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 21 ]
  }, {
    "id" : 20,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "addEdge",
  "full_name" : "Graph.LongJavaFileProject.addEdge",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void addEdge(E startNode, E endNode) {\n            Node start = null, end = null;\n            for (Node node : nodeList) {\n                if (startNode.compareTo(node.name) == 0) {\n                    start = node;\n                } else if (endNode.compareTo(node.name) == 0) {\n                    end = node;\n                }\n            }\n            if (start == null) {\n                start = new Node(startNode);\n                nodeList.add(start);\n            }\n            if (end == null) {\n                end = new Node(endNode);\n                nodeList.add(end);\n            }\n\n            edgeList.add(new Edge(start, end));\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "add|edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 13, 14, 15, 16, 17 ]
  }, {
    "id" : 7,
    "token" : "e",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "start|node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "e",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "end|node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 18, 19, 20 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 26, 27, 28 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 56, 57 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 72, 73 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 88 ]
  }, {
    "id" : 18,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 21 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 24, 25 ]
  }, {
    "id" : 21,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "start",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "end",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 29, 30 ]
  }, {
    "id" : 27,
    "token" : "node|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "Block",
    "children" : [ 32 ]
  }, {
    "id" : 29,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 31 ]
  }, {
    "id" : 30,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 33, 34, 35 ]
  }, {
    "id" : 33,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 36, 37 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "Block",
    "children" : [ 41 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 45, 46 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39, 40 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "start|node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "compare|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "nodename",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 42 ]
  }, {
    "id" : 42,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "start",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 47, 48 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "Block",
    "children" : [ 52 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 49, 50, 51 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "end|node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "compare|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "nodename",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 53 ]
  }, {
    "id" : 53,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 54, 55 ]
  }, {
    "id" : 54,
    "token" : "end",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 58, 59 ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "Block",
    "children" : [ 60, 61 ]
  }, {
    "id" : 58,
    "token" : "start",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 62 ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 68 ]
  }, {
    "id" : 62,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 63, 64 ]
  }, {
    "id" : 63,
    "token" : "start",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 65, 66 ]
  }, {
    "id" : 65,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 67 ]
  }, {
    "id" : 66,
    "token" : "start|node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 69, 70, 71 ]
  }, {
    "id" : 69,
    "token" : "node|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "start",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 74, 75 ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "Block",
    "children" : [ 76, 77 ]
  }, {
    "id" : 74,
    "token" : "end",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 78 ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 84 ]
  }, {
    "id" : 78,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 79, 80 ]
  }, {
    "id" : 79,
    "token" : "end",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 81, 82 ]
  }, {
    "id" : 81,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 83 ]
  }, {
    "id" : 82,
    "token" : "end|node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 85, 86, 87 ]
  }, {
    "id" : 85,
    "token" : "node|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "end",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 89, 90, 91 ]
  }, {
    "id" : 89,
    "token" : "edge|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 92, 93, 94 ]
  }, {
    "id" : 92,
    "token" : "edge",
    "type" : "SimpleType",
    "children" : [ 95 ]
  }, {
    "id" : 93,
    "token" : "start",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "end",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "edge",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "countGraphs",
  "full_name" : "Graph.LongJavaFileProject.countGraphs",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int countGraphs() {\n            int count = 0;\n            Set<Node> markedNodes = new HashSet<Node>();\n\n            for (Node n : nodeList) {\n                if (!markedNodes.contains(n)) {\n                    markedNodes.add(n);\n                    markedNodes.addAll(depthFirstSearch(n, new ArrayList<Node>()));\n                    count++;\n                }\n            }\n\n            return count;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "count|graphs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5, 6, 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 13, 14 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 26, 27, 28 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 60 ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 11, 12 ]
  }, {
    "id" : 11,
    "token" : "count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "setnode",
    "type" : "ParameterizedType",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 19, 20 ]
  }, {
    "id" : 15,
    "token" : "set",
    "type" : "SimpleType",
    "children" : [ 17 ]
  }, {
    "id" : 16,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "set",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "marked|nodes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 21 ]
  }, {
    "id" : 21,
    "token" : "hash|setnode",
    "type" : "ParameterizedType",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "hash|set",
    "type" : "SimpleType",
    "children" : [ 24 ]
  }, {
    "id" : 23,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 25 ]
  }, {
    "id" : 24,
    "token" : "hash|set",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 29, 30 ]
  }, {
    "id" : 27,
    "token" : "node|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "Block",
    "children" : [ 32 ]
  }, {
    "id" : 29,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 31 ]
  }, {
    "id" : 30,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 35 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "Block",
    "children" : [ 39, 40, 41 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 36, 37, 38 ]
  }, {
    "id" : 36,
    "token" : "marked|nodes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 42 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 46 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 58 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 43, 44, 45 ]
  }, {
    "id" : 43,
    "token" : "marked|nodes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 47, 48, 49 ]
  }, {
    "id" : 47,
    "token" : "marked|nodes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "add|all",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 50, 51, 52 ]
  }, {
    "id" : 50,
    "token" : "depth|first|search",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 53 ]
  }, {
    "id" : 53,
    "token" : "array|listnode",
    "type" : "ParameterizedType",
    "children" : [ 54, 55 ]
  }, {
    "id" : 54,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 56 ]
  }, {
    "id" : 55,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 57 ]
  }, {
    "id" : 56,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 59 ]
  }, {
    "id" : 59,
    "token" : "count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "count",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "depthFirstSearch",
  "full_name" : "Graph.LongJavaFileProject.depthFirstSearch",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public ArrayList<Node> depthFirstSearch(Node n, ArrayList<Node> visited) {\n            visited.add(n);\n            for (Edge e : edgeList) {\n                if (e.startNode.equals(n) && !visited.contains(e.endNode)) {\n                    depthFirstSearch(e.endNode, visited);\n                }\n            }\n            return visited;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "array|listnode",
    "type" : "ParameterizedType",
    "children" : [ 7, 8 ]
  }, {
    "id" : 3,
    "token" : "depth|first|search",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 20, 21, 22 ]
  }, {
    "id" : 7,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "array|listnode",
    "type" : "ParameterizedType",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "visited",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 19 ]
  }, {
    "id" : 18,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 23 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 27, 28, 29 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 50 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 24, 25, 26 ]
  }, {
    "id" : 24,
    "token" : "visited",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 30, 31 ]
  }, {
    "id" : 28,
    "token" : "edge|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "Block",
    "children" : [ 33 ]
  }, {
    "id" : 30,
    "token" : "edge",
    "type" : "SimpleType",
    "children" : [ 32 ]
  }, {
    "id" : 31,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 36, 37 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "Block",
    "children" : [ 45 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39, 40 ]
  }, {
    "id" : 37,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 41 ]
  }, {
    "id" : 38,
    "token" : "estart|node",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 42, 43, 44 ]
  }, {
    "id" : 42,
    "token" : "visited",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "eend|node",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 46 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 47, 48, 49 ]
  }, {
    "id" : 47,
    "token" : "depth|first|search",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "eend|node",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "visited",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "visited",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "Cycle",
  "full_name" : "Cycle.LongJavaFileProject.Cycle",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Cycle() {\n            Scanner in = new Scanner(System.in);\n            System.out.print(\"Enter the no. of nodes: \");\n            nodes = in.nextInt();\n            System.out.print(\"Enter the no. of Edges: \");\n            edges = in.nextInt();\n\n            adjacencyMatrix = new int[nodes][nodes];\n            visited = new boolean[nodes];\n\n            for (int i = 0; i < nodes; i++) {\n                visited[i] = false;\n            }\n\n            System.out.println(\"Enter the details of each edges <Start Node> <End Node>\");\n\n            for (int i = 0; i < edges; i++) {\n                int start, end;\n                start = in.nextInt();\n                end = in.nextInt();\n                adjacencyMatrix[start][end] = 1;\n            }\n            in.close();\n\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "cycle",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 15, 16 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 23 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 27 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 32 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 36 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 41 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 50 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 57, 58, 59, 60 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 74 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 78, 79, 80, 81 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 115 ]
  }, {
    "id" : 15,
    "token" : "scanner",
    "type" : "SimpleType",
    "children" : [ 17 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "scanner",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "scanner",
    "type" : "SimpleType",
    "children" : [ 22 ]
  }, {
    "id" : 21,
    "token" : "systemin",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "scanner",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 24, 25, 26 ]
  }, {
    "id" : 24,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "enter|the|no|of|nodes",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "nodes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "next|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 33, 34, 35 ]
  }, {
    "id" : 33,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "enter|the|no|of|edges",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 37, 38 ]
  }, {
    "id" : 37,
    "token" : "edges",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 39, 40 ]
  }, {
    "id" : 39,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "next|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "adjacency|matrix",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 44, 45, 46 ]
  }, {
    "id" : 44,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 47, 48, 49 ]
  }, {
    "id" : 45,
    "token" : "nodes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "nodes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 51, 52 ]
  }, {
    "id" : 51,
    "token" : "visited",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 53, 54 ]
  }, {
    "id" : 53,
    "token" : "boolean",
    "type" : "ArrayType",
    "children" : [ 55, 56 ]
  }, {
    "id" : 54,
    "token" : "nodes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 61, 62 ]
  }, {
    "id" : 58,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 65, 66 ]
  }, {
    "id" : 59,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 67 ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "Block",
    "children" : [ 68 ]
  }, {
    "id" : 61,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 63, 64 ]
  }, {
    "id" : 63,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "nodes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 69 ]
  }, {
    "id" : 69,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 70, 71 ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 72, 73 ]
  }, {
    "id" : 71,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "visited",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 75, 76, 77 ]
  }, {
    "id" : 75,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "enter|the|details|of|each|edges|start|node|end|node",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 82, 83 ]
  }, {
    "id" : 79,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 86, 87 ]
  }, {
    "id" : 80,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 88 ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "Block",
    "children" : [ 89, 90, 91, 92 ]
  }, {
    "id" : 82,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 84, 85 ]
  }, {
    "id" : 84,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "edges",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 93, 94, 95 ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 98 ]
  }, {
    "id" : 91,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 103 ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 108 ]
  }, {
    "id" : 93,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 96 ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 97 ]
  }, {
    "id" : 96,
    "token" : "start",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "end",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 99, 100 ]
  }, {
    "id" : 99,
    "token" : "start",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 101, 102 ]
  }, {
    "id" : 101,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "next|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 104, 105 ]
  }, {
    "id" : 104,
    "token" : "end",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 106, 107 ]
  }, {
    "id" : 106,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "next|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 109, 110 ]
  }, {
    "id" : 109,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 111, 112 ]
  }, {
    "id" : 110,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 113, 114 ]
  }, {
    "id" : 112,
    "token" : "end",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "adjacency|matrix",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "start",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 116, 117 ]
  }, {
    "id" : 116,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "close",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "start",
  "full_name" : "Cycle.LongJavaFileProject.start",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void start() {\n            for (int i = 0; i < nodes; i++) {\n                ArrayList<Integer> temp = new ArrayList<>();\n                dfs(i, i, temp);\n                for (int j = 0; j < nodes; j++) {\n                    adjacencyMatrix[i][j] = 0;\n                    adjacencyMatrix[j][i] = 0;\n                }\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "start",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 6, 7, 8, 9 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 10, 11 ]
  }, {
    "id" : 7,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 14, 15 ]
  }, {
    "id" : 8,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 16 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Block",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 10,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 12, 13 ]
  }, {
    "id" : 12,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "nodes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 31 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 36, 37, 38, 39 ]
  }, {
    "id" : 20,
    "token" : "array|listinteger",
    "type" : "ParameterizedType",
    "children" : [ 22, 23 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 22,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 24 ]
  }, {
    "id" : 23,
    "token" : "integer",
    "type" : "SimpleType",
    "children" : [ 25 ]
  }, {
    "id" : 24,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 28 ]
  }, {
    "id" : 28,
    "token" : "array|list",
    "type" : "ParameterizedType",
    "children" : [ 29 ]
  }, {
    "id" : 29,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 30 ]
  }, {
    "id" : 30,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 32, 33, 34, 35 ]
  }, {
    "id" : 32,
    "token" : "dfs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 40, 41 ]
  }, {
    "id" : 37,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 44, 45 ]
  }, {
    "id" : 38,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 46 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "Block",
    "children" : [ 47, 48 ]
  }, {
    "id" : 40,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "nodes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 49 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 56 ]
  }, {
    "id" : 49,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 50, 51 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 52, 53 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 54, 55 ]
  }, {
    "id" : 53,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "adjacency|matrix",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 57, 58 ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 59, 60 ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 61, 62 ]
  }, {
    "id" : 60,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "adjacency|matrix",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "dfs",
  "full_name" : "Cycle.LongJavaFileProject.dfs",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void dfs(Integer start, Integer curr, ArrayList<Integer> temp) {\n            temp.add(curr);\n            visited[curr] = true;\n            for (int i = 0; i < nodes; i++) {\n                if (adjacencyMatrix[curr][i] == 1) {\n                    if (i == start) {\n                        cycles.add(new ArrayList<Integer>(temp));\n                    } else {\n                        if (!visited[i]) {\n                            dfs(start, i, temp);\n                        }\n                    }\n                }\n            }\n\n            if (temp.size() > 0) {\n                temp.remove(temp.size() - 1);\n            }\n            visited[curr] = false;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "dfs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 20, 21, 22, 23, 24 ]
  }, {
    "id" : 8,
    "token" : "integer",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "start",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "integer",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "curr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "array|listinteger",
    "type" : "ParameterizedType",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "integer",
    "type" : "SimpleType",
    "children" : [ 19 ]
  }, {
    "id" : 18,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 25 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 29 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 34, 35, 36, 37 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 83, 84 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 98 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 26, 27, 28 ]
  }, {
    "id" : 26,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "curr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 32, 33 ]
  }, {
    "id" : 31,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "visited",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "curr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 38, 39 ]
  }, {
    "id" : 35,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 42, 43 ]
  }, {
    "id" : 36,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 44 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "Block",
    "children" : [ 45 ]
  }, {
    "id" : 38,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "nodes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 46, 47 ]
  }, {
    "id" : 46,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 48, 49 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "Block",
    "children" : [ 54 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 50, 51 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 52, 53 ]
  }, {
    "id" : 51,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "adjacency|matrix",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "curr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 55, 56, 57 ]
  }, {
    "id" : 55,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 58, 59 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "Block",
    "children" : [ 60 ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "Block",
    "children" : [ 71 ]
  }, {
    "id" : 58,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "start",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 61 ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 62, 63, 64 ]
  }, {
    "id" : 62,
    "token" : "cycles",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 65, 66 ]
  }, {
    "id" : 65,
    "token" : "array|listinteger",
    "type" : "ParameterizedType",
    "children" : [ 67, 68 ]
  }, {
    "id" : 66,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 69 ]
  }, {
    "id" : 68,
    "token" : "integer",
    "type" : "SimpleType",
    "children" : [ 70 ]
  }, {
    "id" : 69,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 72, 73 ]
  }, {
    "id" : 72,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 74 ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "Block",
    "children" : [ 77 ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 75, 76 ]
  }, {
    "id" : 75,
    "token" : "visited",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 78 ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 79, 80, 81, 82 ]
  }, {
    "id" : 79,
    "token" : "dfs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "start",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 85, 86 ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "Block",
    "children" : [ 89 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 87, 88 ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 90 ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 91, 92, 93 ]
  }, {
    "id" : 91,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "remove",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 94, 95 ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 96, 97 ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 99, 100 ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 101, 102 ]
  }, {
    "id" : 100,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "visited",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "curr",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "printAll",
  "full_name" : "Cycle.LongJavaFileProject.printAll",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void printAll() {\n            for (int i = 0; i < cycles.size(); i++) {\n                for (int j = 0; j < cycles.get(i).size(); j++) {\n                    System.out.print(cycles.get(i).get(j) + \" -> \");\n                }\n                System.out.println(cycles.get(i).get(0));\n                System.out.println();\n            }\n\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "print|all",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 6, 7, 8, 9 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 10, 11 ]
  }, {
    "id" : 7,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 14, 15 ]
  }, {
    "id" : 8,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 18 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Block",
    "children" : [ 19, 20, 21 ]
  }, {
    "id" : 10,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 12, 13 ]
  }, {
    "id" : 12,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "cycles",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 22, 23, 24, 25 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 51 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 61 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 26, 27 ]
  }, {
    "id" : 23,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 30, 31 ]
  }, {
    "id" : 24,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 37 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "Block",
    "children" : [ 38 ]
  }, {
    "id" : 26,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 32, 33 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 34, 35, 36 ]
  }, {
    "id" : 33,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "cycles",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 39 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 40, 41, 42 ]
  }, {
    "id" : 40,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 45, 46, 47 ]
  }, {
    "id" : 44,
    "token" : "->",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 48, 49, 50 ]
  }, {
    "id" : 46,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "cycles",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 52, 53, 54 ]
  }, {
    "id" : 52,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 55, 56, 57 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 58, 59, 60 ]
  }, {
    "id" : 56,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "cycles",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 62, 63 ]
  }, {
    "id" : 62,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "Cycles.LongJavaFileProject.main",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void main(String[] args) {\n            Cycle c = new Cycle();\n            c.start();\n            c.printAll();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 21 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 24 ]
  }, {
    "id" : 14,
    "token" : "cycle",
    "type" : "SimpleType",
    "children" : [ 16 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 17, 18 ]
  }, {
    "id" : 16,
    "token" : "cycle",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 19 ]
  }, {
    "id" : 19,
    "token" : "cycle",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 20,
    "token" : "cycle",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "start",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 25, 26 ]
  }, {
    "id" : 25,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "print|all",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "MatrixGraphs.LongJavaFileProject.main",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void main(String args[]) {\n            AdjacencyMatrixGraph graph = new AdjacencyMatrixGraph(10);\n            graph.addEdge(1, 2);\n            graph.addEdge(1, 5);\n            graph.addEdge(2, 5);\n            graph.addEdge(1, 2);\n            graph.addEdge(2, 3);\n            graph.addEdge(3, 4);\n            graph.addEdge(4, 1);\n            graph.addEdge(2, 3);\n            System.out.println(graph);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 28 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 33 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 38 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 43 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 48 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 53 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 58 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 63 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 68 ]
  }, {
    "id" : 20,
    "token" : "adjacency|matrix|graph",
    "type" : "SimpleType",
    "children" : [ 22 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 23, 24 ]
  }, {
    "id" : 22,
    "token" : "adjacency|matrix|graph",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "graph",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 25, 26 ]
  }, {
    "id" : 25,
    "token" : "adjacency|matrix|graph",
    "type" : "SimpleType",
    "children" : [ 27 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "adjacency|matrix|graph",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 29, 30, 31, 32 ]
  }, {
    "id" : 29,
    "token" : "graph",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "add|edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 34, 35, 36, 37 ]
  }, {
    "id" : 34,
    "token" : "graph",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "add|edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 39, 40, 41, 42 ]
  }, {
    "id" : 39,
    "token" : "graph",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "add|edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 44, 45, 46, 47 ]
  }, {
    "id" : 44,
    "token" : "graph",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "add|edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 49, 50, 51, 52 ]
  }, {
    "id" : 49,
    "token" : "graph",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "add|edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 54, 55, 56, 57 ]
  }, {
    "id" : 54,
    "token" : "graph",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "add|edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 59, 60, 61, 62 ]
  }, {
    "id" : 59,
    "token" : "graph",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "add|edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 64, 65, 66, 67 ]
  }, {
    "id" : 64,
    "token" : "graph",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "add|edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 69, 70, 71 ]
  }, {
    "id" : 69,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "graph",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "AdjacencyMatrixGraph",
  "full_name" : "AdjacencyMatrixGraph.LongJavaFileProject.AdjacencyMatrixGraph",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public AdjacencyMatrixGraph(int givenNumberOfVertices) {\n            this.setNumberOfVertices(givenNumberOfVertices);\n            this.setNumberOfEdges(0);\n            this.setAdjacency(new int[givenNumberOfVertices][givenNumberOfVertices]);\n            for (int i = 0; i < givenNumberOfVertices; i++) {\n                for (int j = 0; j < givenNumberOfVertices; j++) {\n                    this.adjacency()[i][j] = AdjacencyMatrixGraph.EDGE_NONE;\n                }\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "adjacency|matrix|graph",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 7, 8, 9, 10 ]
  }, {
    "id" : 5,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "given|number|of|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 11 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 15 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 19 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 29, 30, 31, 32 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "set|number|of|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "given|number|of|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 16, 17, 18 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "set|number|of|edges",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 20, 21, 22 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "set|adjacency",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 23, 24, 25 ]
  }, {
    "id" : 23,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 26, 27, 28 ]
  }, {
    "id" : 24,
    "token" : "given|number|of|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "given|number|of|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 33, 34 ]
  }, {
    "id" : 30,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 37, 38 ]
  }, {
    "id" : 31,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 39 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "Block",
    "children" : [ 40 ]
  }, {
    "id" : 33,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "given|number|of|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 41, 42, 43, 44 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 45, 46 ]
  }, {
    "id" : 42,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 49, 50 ]
  }, {
    "id" : 43,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 51 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "Block",
    "children" : [ 52 ]
  }, {
    "id" : 45,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 47, 48 ]
  }, {
    "id" : 47,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "given|number|of|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 53 ]
  }, {
    "id" : 53,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 54, 55 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 56, 57 ]
  }, {
    "id" : 55,
    "token" : "adjacency|matrix|graphedge|none",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 58, 59 ]
  }, {
    "id" : 57,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 60, 61 ]
  }, {
    "id" : 59,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "adjacency",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "setNumberOfVertices",
  "full_name" : "AdjacencyMatrixGraph.LongJavaFileProject.setNumberOfVertices",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void setNumberOfVertices(int newNumberOfVertices) {\n            this._numberOfVertices = newNumberOfVertices;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "set|number|of|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 8 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "new|number|of|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 9 ]
  }, {
    "id" : 9,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 10, 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 12, 13 ]
  }, {
    "id" : 11,
    "token" : "new|number|of|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "number|of|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "numberOfVertices",
  "full_name" : "AdjacencyMatrixGraph.LongJavaFileProject.numberOfVertices",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int numberOfVertices() {\n            return this._numberOfVertices;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "number|of|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "number|of|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "setNumberOfEdges",
  "full_name" : "AdjacencyMatrixGraph.LongJavaFileProject.setNumberOfEdges",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void setNumberOfEdges(int newNumberOfEdges) {\n            this._numberOfEdges = newNumberOfEdges;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "set|number|of|edges",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 8 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "new|number|of|edges",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 9 ]
  }, {
    "id" : 9,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 10, 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 12, 13 ]
  }, {
    "id" : 11,
    "token" : "new|number|of|edges",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "number|of|edges",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "numberOfEdges",
  "full_name" : "AdjacencyMatrixGraph.LongJavaFileProject.numberOfEdges",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int numberOfEdges() {\n            return this._numberOfEdges;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "number|of|edges",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "number|of|edges",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "setAdjacency",
  "full_name" : "AdjacencyMatrixGraph.LongJavaFileProject.setAdjacency",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void setAdjacency(int[][] newAdjacency) {\n            this._adjacency = newAdjacency;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "set|adjacency",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 8, 9, 10 ]
  }, {
    "id" : 7,
    "token" : "new|adjacency",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 12 ]
  }, {
    "id" : 12,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 13, 14 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "new|adjacency",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "adjacency",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "adjacency",
  "full_name" : "AdjacencyMatrixGraph.LongJavaFileProject.adjacency",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private int[][] adjacency() {\n            return this._adjacency;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 5, 6, 7 ]
  }, {
    "id" : 3,
    "token" : "adjacency",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 8 ]
  }, {
    "id" : 5,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 9 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 10, 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "adjacency",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "adjacencyOfEdgeDoesExist",
  "full_name" : "AdjacencyMatrixGraph.LongJavaFileProject.adjacencyOfEdgeDoesExist",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private boolean adjacencyOfEdgeDoesExist(int from, int to) {\n            return (this.adjacency()[from][to] != AdjacencyMatrixGraph.EDGE_NONE);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "adjacency|of|edge|does|exist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 11 ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 12 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 13 ]
  }, {
    "id" : 13,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "adjacency|matrix|graphedge|none",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 20, 21 ]
  }, {
    "id" : 19,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "adjacency",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "vertexDoesExist",
  "full_name" : "AdjacencyMatrixGraph.LongJavaFileProject.vertexDoesExist",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public boolean vertexDoesExist(int aVertex) {\n            if (aVertex >= 0 && aVertex < this.numberOfVertices()) {\n                return true;\n            } else {\n                return false;\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "vertex|does|exist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 8 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "a|vertex",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 9, 10, 11 ]
  }, {
    "id" : 9,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 12, 13 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Block",
    "children" : [ 20 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "Block",
    "children" : [ 22 ]
  }, {
    "id" : 12,
    "token" : ">=",
    "type" : "InfixExpression",
    "children" : [ 14, 15 ]
  }, {
    "id" : 13,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 16, 17 ]
  }, {
    "id" : 14,
    "token" : "a|vertex",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "a|vertex",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 18, 19 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "number|of|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 21 ]
  }, {
    "id" : 21,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 23 ]
  }, {
    "id" : 23,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "edgeDoesExist",
  "full_name" : "AdjacencyMatrixGraph.LongJavaFileProject.edgeDoesExist",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public boolean edgeDoesExist(int from, int to) {\n            if (this.vertexDoesExist(from) && this.vertexDoesExist(to)) {\n                return (this.adjacencyOfEdgeDoesExist(from, to));\n            }\n\n            return false;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "edge|does|exist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12 ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 13, 14 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 30 ]
  }, {
    "id" : 13,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Block",
    "children" : [ 23 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 20, 21, 22 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "vertex|does|exist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "vertex|does|exist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 24 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 25 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 26, 27, 28, 29 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "adjacency|of|edge|does|exist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "addEdge",
  "full_name" : "AdjacencyMatrixGraph.LongJavaFileProject.addEdge",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public boolean addEdge(int from, int to) {\n            if (this.vertexDoesExist(from) && this.vertexDoesExist(to)) {\n                if (!this.adjacencyOfEdgeDoesExist(from, to)) {\n                    this.adjacency()[from][to] = AdjacencyMatrixGraph.EDGE_EXIST;\n                    this.adjacency()[to][from] = AdjacencyMatrixGraph.EDGE_EXIST;\n                    this.setNumberOfEdges(this.numberOfEdges() + 1);\n                    return true;\n                }\n            }\n\n            return false;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "add|edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12 ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 13, 14 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 62 ]
  }, {
    "id" : 13,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Block",
    "children" : [ 23 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 20, 21, 22 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "vertex|does|exist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "vertex|does|exist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 26 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "Block",
    "children" : [ 31, 32, 33, 34 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 27, 28, 29, 30 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "adjacency|of|edge|does|exist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 35 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 44 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 53 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 61 ]
  }, {
    "id" : 35,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 38, 39 ]
  }, {
    "id" : 37,
    "token" : "adjacency|matrix|graphedge|exist",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 40, 41 ]
  }, {
    "id" : 39,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "adjacency",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 45, 46 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 47, 48 ]
  }, {
    "id" : 46,
    "token" : "adjacency|matrix|graphedge|exist",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 49, 50 ]
  }, {
    "id" : 48,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 51, 52 ]
  }, {
    "id" : 50,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "adjacency",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 54, 55, 56 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "set|number|of|edges",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 57, 58 ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 59, 60 ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "number|of|edges",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "removeEdge",
  "full_name" : "AdjacencyMatrixGraph.LongJavaFileProject.removeEdge",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public boolean removeEdge(int from, int to) {\n            if (!this.vertexDoesExist(from) || !this.vertexDoesExist(to)) {\n                if (this.adjacencyOfEdgeDoesExist(from, to)) {\n                    this.adjacency()[from][to] = AdjacencyMatrixGraph.EDGE_NONE;\n                    this.adjacency()[to][from] = AdjacencyMatrixGraph.EDGE_NONE;\n                    this.setNumberOfEdges(this.numberOfEdges() - 1);\n                    return true;\n                }\n            }\n            return false;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "remove|edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12 ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 13, 14 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 63 ]
  }, {
    "id" : 13,
    "token" : "||",
    "type" : "InfixExpression",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Block",
    "children" : [ 25 ]
  }, {
    "id" : 15,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 17 ]
  }, {
    "id" : 16,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 21 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 18, 19, 20 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "vertex|does|exist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 22, 23, 24 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "vertex|does|exist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28, 29, 30, 31 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "Block",
    "children" : [ 32, 33, 34, 35 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "adjacency|of|edge|does|exist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 36 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 45 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 54 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 62 ]
  }, {
    "id" : 36,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 37, 38 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 39, 40 ]
  }, {
    "id" : 38,
    "token" : "adjacency|matrix|graphedge|none",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 41, 42 ]
  }, {
    "id" : 40,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 43, 44 ]
  }, {
    "id" : 42,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "adjacency",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 46, 47 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 48, 49 ]
  }, {
    "id" : 47,
    "token" : "adjacency|matrix|graphedge|none",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 50, 51 ]
  }, {
    "id" : 49,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 52, 53 ]
  }, {
    "id" : 51,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "adjacency",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 55, 56, 57 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "set|number|of|edges",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 58, 59 ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 60, 61 ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "number|of|edges",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "toString",
  "full_name" : "AdjacencyMatrixGraph.LongJavaFileProject.toString",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public String toString() {\n            String s = new String();\n            s = \"    \";\n            for (int i = 0; i < this.numberOfVertices(); i++) {\n                s = s + String.valueOf(i) + \" \";\n            }\n            s = s + \" \\n\";\n\n            for (int i = 0; i < this.numberOfVertices(); i++) {\n                s = s + String.valueOf(i) + \" : \";\n                for (int j = 0; j < this.numberOfVertices(); j++) {\n                    s = s + String.valueOf(this._adjacency[i][j]) + \" \";\n                }\n                s = s + \"\\n\";\n            }\n            return s;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 5 ]
  }, {
    "id" : 3,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 6, 7, 8, 9, 10, 11 ]
  }, {
    "id" : 5,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 19 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 22, 23, 24, 25 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 45 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 50, 51, 52, 53 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 109 ]
  }, {
    "id" : 12,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 17 ]
  }, {
    "id" : 17,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 18 ]
  }, {
    "id" : 18,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 26, 27 ]
  }, {
    "id" : 23,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 30, 31 ]
  }, {
    "id" : 24,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 34 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "Block",
    "children" : [ 35 ]
  }, {
    "id" : 26,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 32, 33 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "number|of|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 36 ]
  }, {
    "id" : 36,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 37, 38 ]
  }, {
    "id" : 37,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 39, 40, 41 ]
  }, {
    "id" : 39,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 42, 43, 44 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "value|of",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 46, 47 ]
  }, {
    "id" : 46,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 48, 49 ]
  }, {
    "id" : 48,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 54, 55 ]
  }, {
    "id" : 51,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 58, 59 ]
  }, {
    "id" : 52,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 62 ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "Block",
    "children" : [ 63, 64, 65 ]
  }, {
    "id" : 54,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 56, 57 ]
  }, {
    "id" : 56,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 60, 61 ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "number|of|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 66 ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 75, 76, 77, 78 ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 104 ]
  }, {
    "id" : 66,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 67, 68 ]
  }, {
    "id" : 67,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 69, 70, 71 ]
  }, {
    "id" : 69,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 72, 73, 74 ]
  }, {
    "id" : 71,
    "token" : ":",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "value|of",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 79, 80 ]
  }, {
    "id" : 76,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 83, 84 ]
  }, {
    "id" : 77,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 87 ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "Block",
    "children" : [ 88 ]
  }, {
    "id" : 79,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 81, 82 ]
  }, {
    "id" : 81,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 85, 86 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "number|of|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 89 ]
  }, {
    "id" : 89,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 90, 91 ]
  }, {
    "id" : 90,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 92, 93, 94 ]
  }, {
    "id" : 92,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 95, 96, 97 ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "value|of",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 98, 99 ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 100, 101 ]
  }, {
    "id" : 99,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 102, 103 ]
  }, {
    "id" : 101,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "adjacency",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 105, 106 ]
  }, {
    "id" : 105,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 107, 108 ]
  }, {
    "id" : 107,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "FordFulkerson.LongJavaFileProject.main",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void main(String[] args) {\n            System.out.println(\"V : 6\");\n            V = 6;\n            capacity = new int[V][V];\n\n            capacity[0][1] = 12;\n            capacity[0][3] = 13;\n            capacity[1][2] = 10;\n            capacity[2][3] = 13;\n            capacity[2][4] = 3;\n            capacity[2][5] = 15;\n            capacity[3][2] = 7;\n            capacity[3][4] = 15;\n            capacity[4][5] = 17;\n\n            System.out.println(\"Max capacity in networkFlow : \" + networkFlow(0, 5));\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 24 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 28 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 31 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 40 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 47 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 54 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 61 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 68 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 75 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 82 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 89 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 96 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 103 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 25, 26, 27 ]
  }, {
    "id" : 25,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "v|:",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 29, 30 ]
  }, {
    "id" : 29,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 32, 33 ]
  }, {
    "id" : 32,
    "token" : "capacity",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 34, 35, 36 ]
  }, {
    "id" : 34,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 37, 38, 39 ]
  }, {
    "id" : 35,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 41, 42 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 43, 44 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 45, 46 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "capacity",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 48, 49 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 50, 51 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 52, 53 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "capacity",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 55, 56 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 57, 58 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 59, 60 ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "capacity",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 62, 63 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 64, 65 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 66, 67 ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "capacity",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 69, 70 ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 71, 72 ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 73, 74 ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "capacity",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 76, 77 ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 78, 79 ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 80, 81 ]
  }, {
    "id" : 79,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "capacity",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 83, 84 ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 85, 86 ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 87, 88 ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "capacity",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 90, 91 ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 92, 93 ]
  }, {
    "id" : 91,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 94, 95 ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "capacity",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 97, 98 ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 99, 100 ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 101, 102 ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "capacity",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 104, 105, 106 ]
  }, {
    "id" : 104,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 107, 108 ]
  }, {
    "id" : 107,
    "token" : "max|capacity|in|network|flow|:",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 109, 110, 111 ]
  }, {
    "id" : 109,
    "token" : "network|flow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "networkFlow",
  "full_name" : "FordFulkerson.LongJavaFileProject.networkFlow",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private int networkFlow(int source, int sink) {\n            flow = new int[V][V];\n            int totalFlow = 0;\n            while (true) {\n                Vector<Integer> parent = new Vector<>(V);\n                for (int i = 0; i < V; i++)\n                    parent.add(-1);\n                Queue<Integer> q = new LinkedList<>();\n                parent.set(source, source);\n                q.add(source);\n                while (!q.isEmpty() && parent.get(sink) == -1) {\n                    int here = q.peek();\n                    q.poll();\n                    for (int there = 0; there < V; ++there)\n                        if (capacity[here][there] - flow[here][there] > 0 && parent.get(there) == -1) {\n                            q.add(there);\n                            parent.set(there, here);\n                        }\n                }\n                if (parent.get(sink) == -1)\n                    break;\n\n                int amount = INF;\n                String printer = \"path : \";\n                StringBuilder sb = new StringBuilder();\n                for (int p = sink; p != source; p = parent.get(p)) {\n                    amount = Math.min(capacity[parent.get(p)][p] - flow[parent.get(p)][p], amount);\n                    sb.append(p + \"-\");\n                }\n                sb.append(source);\n                for (int p = sink; p != source; p = parent.get(p)) {\n                    flow[parent.get(p)][p] += amount;\n                    flow[p][parent.get(p)] -= amount;\n                }\n                totalFlow += amount;\n                printer += sb.reverse() + \" / max flow : \" + totalFlow;\n                System.out.println(printer);\n            }\n\n            return totalFlow;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "network|flow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13, 14 ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "source",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "sink",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 15 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 28, 29 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 289 ]
  }, {
    "id" : 15,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "flow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 18, 19, 20 ]
  }, {
    "id" : 18,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 21, 22, 23 ]
  }, {
    "id" : 19,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "total|flow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "Block",
    "children" : [ 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 46, 47 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 58, 59, 60, 61 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 74, 75 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 85 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 90 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 94, 95 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 163, 164 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 171, 172 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 175, 176 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 180, 181 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 187, 188, 189, 190 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 233 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 237, 238, 239, 240 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 274 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 277 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 285 ]
  }, {
    "id" : 46,
    "token" : "vectorinteger",
    "type" : "ParameterizedType",
    "children" : [ 48, 49 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 52, 53 ]
  }, {
    "id" : 48,
    "token" : "vector",
    "type" : "SimpleType",
    "children" : [ 50 ]
  }, {
    "id" : 49,
    "token" : "integer",
    "type" : "SimpleType",
    "children" : [ 51 ]
  }, {
    "id" : 50,
    "token" : "vector",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "parent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 54, 55 ]
  }, {
    "id" : 54,
    "token" : "vector",
    "type" : "ParameterizedType",
    "children" : [ 56 ]
  }, {
    "id" : 55,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "vector",
    "type" : "SimpleType",
    "children" : [ 57 ]
  }, {
    "id" : 57,
    "token" : "vector",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 62, 63 ]
  }, {
    "id" : 59,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 66, 67 ]
  }, {
    "id" : 60,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 68 ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 69 ]
  }, {
    "id" : 62,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 64, 65 ]
  }, {
    "id" : 64,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 70, 71, 72 ]
  }, {
    "id" : 70,
    "token" : "parent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 73 ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "queueinteger",
    "type" : "ParameterizedType",
    "children" : [ 76, 77 ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 80, 81 ]
  }, {
    "id" : 76,
    "token" : "queue",
    "type" : "SimpleType",
    "children" : [ 78 ]
  }, {
    "id" : 77,
    "token" : "integer",
    "type" : "SimpleType",
    "children" : [ 79 ]
  }, {
    "id" : 78,
    "token" : "queue",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 82 ]
  }, {
    "id" : 82,
    "token" : "linked|list",
    "type" : "ParameterizedType",
    "children" : [ 83 ]
  }, {
    "id" : 83,
    "token" : "linked|list",
    "type" : "SimpleType",
    "children" : [ 84 ]
  }, {
    "id" : 84,
    "token" : "linked|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 86, 87, 88, 89 ]
  }, {
    "id" : 86,
    "token" : "parent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "set",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "source",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "source",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 91, 92, 93 ]
  }, {
    "id" : 91,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "source",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 96, 97 ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "Block",
    "children" : [ 107, 108, 109 ]
  }, {
    "id" : 96,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 98 ]
  }, {
    "id" : 97,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 101, 102 ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 99, 100 ]
  }, {
    "id" : 99,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 103, 104, 105 ]
  }, {
    "id" : 102,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 106 ]
  }, {
    "id" : 103,
    "token" : "parent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "sink",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 110, 111 ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 116 ]
  }, {
    "id" : 109,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 119, 120, 121, 122 ]
  }, {
    "id" : 110,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 112, 113 ]
  }, {
    "id" : 112,
    "token" : "here",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 114, 115 ]
  }, {
    "id" : 114,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "peek",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 117, 118 ]
  }, {
    "id" : 117,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "poll",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 123, 124 ]
  }, {
    "id" : 120,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 127, 128 ]
  }, {
    "id" : 121,
    "token" : "++",
    "type" : "PrefixExpression",
    "children" : [ 129 ]
  }, {
    "id" : 122,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 130, 131 ]
  }, {
    "id" : 123,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 125, 126 ]
  }, {
    "id" : 125,
    "token" : "there",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "there",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "there",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 132, 133 ]
  }, {
    "id" : 131,
    "token" : "",
    "type" : "Block",
    "children" : [ 152, 153 ]
  }, {
    "id" : 132,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 134, 135 ]
  }, {
    "id" : 133,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 146, 147 ]
  }, {
    "id" : 134,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 136, 137 ]
  }, {
    "id" : 135,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 138, 139 ]
  }, {
    "id" : 137,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 142, 143 ]
  }, {
    "id" : 138,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 140, 141 ]
  }, {
    "id" : 139,
    "token" : "there",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 140,
    "token" : "capacity",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 141,
    "token" : "here",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 144, 145 ]
  }, {
    "id" : 143,
    "token" : "there",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 144,
    "token" : "flow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "here",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 146,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 148, 149, 150 ]
  }, {
    "id" : 147,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 151 ]
  }, {
    "id" : 148,
    "token" : "parent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "there",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 151,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 152,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 154 ]
  }, {
    "id" : 153,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 158 ]
  }, {
    "id" : 154,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 155, 156, 157 ]
  }, {
    "id" : 155,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 157,
    "token" : "there",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 158,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 159, 160, 161, 162 ]
  }, {
    "id" : 159,
    "token" : "parent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 160,
    "token" : "set",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "there",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 162,
    "token" : "here",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 163,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 165, 166 ]
  }, {
    "id" : 164,
    "token" : "",
    "type" : "BreakStatement",
    "children" : [ ]
  }, {
    "id" : 165,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 167, 168, 169 ]
  }, {
    "id" : 166,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 170 ]
  }, {
    "id" : 167,
    "token" : "parent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 168,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 169,
    "token" : "sink",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 170,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 171,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 172,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 173, 174 ]
  }, {
    "id" : 173,
    "token" : "amount",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 174,
    "token" : "inf",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 175,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 177 ]
  }, {
    "id" : 176,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 178, 179 ]
  }, {
    "id" : 177,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 178,
    "token" : "printer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 179,
    "token" : "path|:",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 180,
    "token" : "string|builder",
    "type" : "SimpleType",
    "children" : [ 182 ]
  }, {
    "id" : 181,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 183, 184 ]
  }, {
    "id" : 182,
    "token" : "string|builder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 183,
    "token" : "sb",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 184,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 185 ]
  }, {
    "id" : 185,
    "token" : "string|builder",
    "type" : "SimpleType",
    "children" : [ 186 ]
  }, {
    "id" : 186,
    "token" : "string|builder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 187,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 191, 192 ]
  }, {
    "id" : 188,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 195, 196 ]
  }, {
    "id" : 189,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 197, 198 ]
  }, {
    "id" : 190,
    "token" : "",
    "type" : "Block",
    "children" : [ 202, 203 ]
  }, {
    "id" : 191,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 192,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 193, 194 ]
  }, {
    "id" : 193,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 194,
    "token" : "sink",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 195,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 196,
    "token" : "source",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 197,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 198,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 199, 200, 201 ]
  }, {
    "id" : 199,
    "token" : "parent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 200,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 201,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 202,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 204 ]
  }, {
    "id" : 203,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 227 ]
  }, {
    "id" : 204,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 205, 206 ]
  }, {
    "id" : 205,
    "token" : "amount",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 206,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 207, 208, 209, 210 ]
  }, {
    "id" : 207,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 208,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 209,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 211, 212 ]
  }, {
    "id" : 210,
    "token" : "amount",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 211,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 213, 214 ]
  }, {
    "id" : 212,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 220, 221 ]
  }, {
    "id" : 213,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 215, 216 ]
  }, {
    "id" : 214,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 215,
    "token" : "capacity",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 216,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 217, 218, 219 ]
  }, {
    "id" : 217,
    "token" : "parent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 218,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 219,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 220,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 222, 223 ]
  }, {
    "id" : 221,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 222,
    "token" : "flow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 223,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 224, 225, 226 ]
  }, {
    "id" : 224,
    "token" : "parent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 225,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 226,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 227,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 228, 229, 230 ]
  }, {
    "id" : 228,
    "token" : "sb",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 229,
    "token" : "append",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 230,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 231, 232 ]
  }, {
    "id" : 231,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 232,
    "token" : "-",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 233,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 234, 235, 236 ]
  }, {
    "id" : 234,
    "token" : "sb",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 235,
    "token" : "append",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 236,
    "token" : "source",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 237,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 241, 242 ]
  }, {
    "id" : 238,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 245, 246 ]
  }, {
    "id" : 239,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 247, 248 ]
  }, {
    "id" : 240,
    "token" : "",
    "type" : "Block",
    "children" : [ 252, 253 ]
  }, {
    "id" : 241,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 242,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 243, 244 ]
  }, {
    "id" : 243,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 244,
    "token" : "sink",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 245,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 246,
    "token" : "source",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 247,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 248,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 249, 250, 251 ]
  }, {
    "id" : 249,
    "token" : "parent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 250,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 251,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 252,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 254 ]
  }, {
    "id" : 253,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 264 ]
  }, {
    "id" : 254,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 255, 256 ]
  }, {
    "id" : 255,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 257, 258 ]
  }, {
    "id" : 256,
    "token" : "amount",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 257,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 259, 260 ]
  }, {
    "id" : 258,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 259,
    "token" : "flow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 260,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 261, 262, 263 ]
  }, {
    "id" : 261,
    "token" : "parent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 262,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 263,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 264,
    "token" : "-=",
    "type" : "Assignment",
    "children" : [ 265, 266 ]
  }, {
    "id" : 265,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 267, 268 ]
  }, {
    "id" : 266,
    "token" : "amount",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 267,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 269, 270 ]
  }, {
    "id" : 268,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 271, 272, 273 ]
  }, {
    "id" : 269,
    "token" : "flow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 270,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 271,
    "token" : "parent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 272,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 273,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 274,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 275, 276 ]
  }, {
    "id" : 275,
    "token" : "total|flow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 276,
    "token" : "amount",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 277,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 278, 279 ]
  }, {
    "id" : 278,
    "token" : "printer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 279,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 280, 281, 282 ]
  }, {
    "id" : 280,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 283, 284 ]
  }, {
    "id" : 281,
    "token" : "/|max|flow|:",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 282,
    "token" : "total|flow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 283,
    "token" : "sb",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 284,
    "token" : "reverse",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 285,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 286, 287, 288 ]
  }, {
    "id" : 286,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 287,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 288,
    "token" : "printer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 289,
    "token" : "total|flow",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "getLCS",
  "full_name" : "LongestCommonSubsequence.LongJavaFileProject.getLCS",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public String getLCS(String str1, String str2) {\n\n            //At least one string is null\n            if (str1 == null || str2 == null)\n                return null;\n\n            //At least one string is empty\n            if (str1.length() == 0 || str2.length() == 0)\n                return \"\";\n\n            String[] arr1 = str1.split(\"\");\n            String[] arr2 = str2.split(\"\");\n\n            //lcsMatrix[i][j]  = LCS of first i elements of arr1 and first j characters of arr2\n            int[][] lcsMatrix = new int[arr1.length + 1][arr2.length + 1];\n\n            for (int i = 0; i < arr1.length + 1; i++)\n                lcsMatrix[i][0] = 0;\n            for (int j = 1; j < arr2.length + 1; j++)\n                lcsMatrix[0][j] = 0;\n            for (int i = 1; i < arr1.length + 1; i++) {\n                for (int j = 1; j < arr2.length + 1; j++) {\n                    if (arr1[i - 1].equals(arr2[j - 1])) {\n                        lcsMatrix[i][j] = lcsMatrix[i - 1][j - 1] + 1;\n                    } else {\n                        lcsMatrix[i][j] = lcsMatrix[i - 1][j] > lcsMatrix[i][j - 1] ? lcsMatrix[i - 1][j] : lcsMatrix[i][j - 1];\n                    }\n                }\n            }\n            return lcsString(str1, str2, lcsMatrix);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 3,
    "token" : "get|lcs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 14, 15, 16, 17, 18, 19, 20, 21, 22 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 23, 24 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 32, 33 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 45, 46 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 55, 56 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 65, 66 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 82, 83, 84, 85 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 102, 103, 104, 105 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 122, 123, 124, 125 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 219 ]
  }, {
    "id" : 23,
    "token" : "||",
    "type" : "InfixExpression",
    "children" : [ 25, 26 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 31 ]
  }, {
    "id" : 25,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 27, 28 ]
  }, {
    "id" : 26,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 29, 30 ]
  }, {
    "id" : 27,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "||",
    "type" : "InfixExpression",
    "children" : [ 34, 35 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 44 ]
  }, {
    "id" : 34,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 36, 37 ]
  }, {
    "id" : 35,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 40, 41 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 47, 48 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 50, 51 ]
  }, {
    "id" : 47,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 49 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 52, 53, 54 ]
  }, {
    "id" : 52,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "split",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 57, 58 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 60, 61 ]
  }, {
    "id" : 57,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 59 ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 62, 63, 64 ]
  }, {
    "id" : 62,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "split",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 67, 68, 69 ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 70, 71 ]
  }, {
    "id" : 67,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "lcs|matrix",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 72, 73, 74 ]
  }, {
    "id" : 72,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 75, 76, 77 ]
  }, {
    "id" : 73,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 78, 79 ]
  }, {
    "id" : 74,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 80, 81 ]
  }, {
    "id" : 75,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "arr|length",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "arr|length",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 86, 87 ]
  }, {
    "id" : 83,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 90, 91 ]
  }, {
    "id" : 84,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 94 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 95 ]
  }, {
    "id" : 86,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 88, 89 ]
  }, {
    "id" : 88,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 92, 93 ]
  }, {
    "id" : 92,
    "token" : "arr|length",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 96, 97 ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 98, 99 ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 100, 101 ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "lcs|matrix",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 106, 107 ]
  }, {
    "id" : 103,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 110, 111 ]
  }, {
    "id" : 104,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 114 ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 115 ]
  }, {
    "id" : 106,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 108, 109 ]
  }, {
    "id" : 108,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 112, 113 ]
  }, {
    "id" : 112,
    "token" : "arr|length",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 116, 117 ]
  }, {
    "id" : 116,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 118, 119 ]
  }, {
    "id" : 117,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 120, 121 ]
  }, {
    "id" : 119,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "lcs|matrix",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 126, 127 ]
  }, {
    "id" : 123,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 130, 131 ]
  }, {
    "id" : 124,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 134 ]
  }, {
    "id" : 125,
    "token" : "",
    "type" : "Block",
    "children" : [ 135 ]
  }, {
    "id" : 126,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 128, 129 ]
  }, {
    "id" : 128,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 132, 133 ]
  }, {
    "id" : 132,
    "token" : "arr|length",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 134,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 135,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 136, 137, 138, 139 ]
  }, {
    "id" : 136,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 140, 141 ]
  }, {
    "id" : 137,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 144, 145 ]
  }, {
    "id" : 138,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 148 ]
  }, {
    "id" : 139,
    "token" : "",
    "type" : "Block",
    "children" : [ 149 ]
  }, {
    "id" : 140,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 141,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 142, 143 ]
  }, {
    "id" : 142,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 143,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 144,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 146, 147 ]
  }, {
    "id" : 146,
    "token" : "arr|length",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 150, 151, 152 ]
  }, {
    "id" : 150,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 153, 154, 155 ]
  }, {
    "id" : 151,
    "token" : "",
    "type" : "Block",
    "children" : [ 164 ]
  }, {
    "id" : 152,
    "token" : "",
    "type" : "Block",
    "children" : [ 182 ]
  }, {
    "id" : 153,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 156, 157 ]
  }, {
    "id" : 154,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 155,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 160, 161 ]
  }, {
    "id" : 156,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 157,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 158, 159 ]
  }, {
    "id" : 158,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 159,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 160,
    "token" : "arr",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 162, 163 ]
  }, {
    "id" : 162,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 163,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 164,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 165 ]
  }, {
    "id" : 165,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 166, 167 ]
  }, {
    "id" : 166,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 168, 169 ]
  }, {
    "id" : 167,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 172, 173 ]
  }, {
    "id" : 168,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 170, 171 ]
  }, {
    "id" : 169,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 170,
    "token" : "lcs|matrix",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 171,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 172,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 174, 175 ]
  }, {
    "id" : 173,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 174,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 176, 177 ]
  }, {
    "id" : 175,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 180, 181 ]
  }, {
    "id" : 176,
    "token" : "lcs|matrix",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 177,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 178, 179 ]
  }, {
    "id" : 178,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 179,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 180,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 181,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 182,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 183 ]
  }, {
    "id" : 183,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 184, 185 ]
  }, {
    "id" : 184,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 186, 187 ]
  }, {
    "id" : 185,
    "token" : "",
    "type" : "ConditionalExpression",
    "children" : [ 190, 191, 192 ]
  }, {
    "id" : 186,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 188, 189 ]
  }, {
    "id" : 187,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 188,
    "token" : "lcs|matrix",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 189,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 190,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 193, 194 ]
  }, {
    "id" : 191,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 207, 208 ]
  }, {
    "id" : 192,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 213, 214 ]
  }, {
    "id" : 193,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 195, 196 ]
  }, {
    "id" : 194,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 201, 202 ]
  }, {
    "id" : 195,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 197, 198 ]
  }, {
    "id" : 196,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 197,
    "token" : "lcs|matrix",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 198,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 199, 200 ]
  }, {
    "id" : 199,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 200,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 201,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 203, 204 ]
  }, {
    "id" : 202,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 205, 206 ]
  }, {
    "id" : 203,
    "token" : "lcs|matrix",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 204,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 205,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 206,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 207,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 209, 210 ]
  }, {
    "id" : 208,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 209,
    "token" : "lcs|matrix",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 210,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 211, 212 ]
  }, {
    "id" : 211,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 212,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 213,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 215, 216 ]
  }, {
    "id" : 214,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 217, 218 ]
  }, {
    "id" : 215,
    "token" : "lcs|matrix",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 216,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 217,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 218,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 219,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 220, 221, 222, 223 ]
  }, {
    "id" : 220,
    "token" : "lcs|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 221,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 222,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 223,
    "token" : "lcs|matrix",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "lcsString",
  "full_name" : "LongestCommonSubsequence.LongJavaFileProject.lcsString",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public String lcsString(String str1, String str2, int[][] lcsMatrix) {\n            StringBuilder lcs = new StringBuilder();\n            int i = str1.length(),\n                    j = str2.length();\n            while (i > 0 && j > 0) {\n                if (str1.charAt(i - 1) == str2.charAt(j - 1)) {\n                    lcs.append(str1.charAt(i - 1));\n                    i--;\n                    j--;\n                } else if (lcsMatrix[i - 1][j] > lcsMatrix[i][j - 1]) {\n                    i--;\n                } else {\n                    j--;\n                }\n            }\n            return lcs.reverse().toString();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 3,
    "token" : "lcs|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 12, 13 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 15, 16 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 20, 21, 22, 23 ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 16,
    "token" : "lcs|matrix",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 31, 32, 33 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 42, 43 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 105 ]
  }, {
    "id" : 24,
    "token" : "string|builder",
    "type" : "SimpleType",
    "children" : [ 26 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 27, 28 ]
  }, {
    "id" : 26,
    "token" : "string|builder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "lcs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 29 ]
  }, {
    "id" : 29,
    "token" : "string|builder",
    "type" : "SimpleType",
    "children" : [ 30 ]
  }, {
    "id" : 30,
    "token" : "string|builder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 34, 35 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 38, 39 ]
  }, {
    "id" : 34,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 44, 45 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "Block",
    "children" : [ 50 ]
  }, {
    "id" : 44,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 46, 47 ]
  }, {
    "id" : 45,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 48, 49 ]
  }, {
    "id" : 46,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 51, 52, 53 ]
  }, {
    "id" : 51,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 54, 55 ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "Block",
    "children" : [ 66, 67, 68 ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 82, 83, 84 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 56, 57, 58 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 61, 62, 63 ]
  }, {
    "id" : 56,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "char|at",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 59, 60 ]
  }, {
    "id" : 59,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "char|at",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 64, 65 ]
  }, {
    "id" : 64,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 69 ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 78 ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 80 ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 70, 71, 72 ]
  }, {
    "id" : 70,
    "token" : "lcs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "append",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 73, 74, 75 ]
  }, {
    "id" : 73,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "char|at",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 76, 77 ]
  }, {
    "id" : 76,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "--",
    "type" : "PostfixExpression",
    "children" : [ 79 ]
  }, {
    "id" : 79,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "--",
    "type" : "PostfixExpression",
    "children" : [ 81 ]
  }, {
    "id" : 81,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 85, 86 ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "Block",
    "children" : [ 99 ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "Block",
    "children" : [ 102 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 87, 88 ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 93, 94 ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 89, 90 ]
  }, {
    "id" : 88,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "lcs|matrix",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 91, 92 ]
  }, {
    "id" : 91,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 95, 96 ]
  }, {
    "id" : 94,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 97, 98 ]
  }, {
    "id" : 95,
    "token" : "lcs|matrix",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 100 ]
  }, {
    "id" : 100,
    "token" : "--",
    "type" : "PostfixExpression",
    "children" : [ 101 ]
  }, {
    "id" : 101,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 103 ]
  }, {
    "id" : 103,
    "token" : "--",
    "type" : "PostfixExpression",
    "children" : [ 104 ]
  }, {
    "id" : 104,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 106, 107 ]
  }, {
    "id" : 106,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 108, 109 ]
  }, {
    "id" : 107,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "lcs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "reverse",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "LongestCommonSubsequence.LongJavaFileProject.main",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void main(String[] args) {\n            String str1 = \"DSGSHSRGSRHTRD\";\n            String str2 = \"DATRGAGTSHS\";\n            String lcs = getLCS(str1, str2);\n\n            //Print LCS\n            if (lcs != null) {\n                System.out.println(\"String 1: \" + str1);\n                System.out.println(\"String 2: \" + str2);\n                System.out.println(\"LCS: \" + lcs);\n                System.out.println(\"LCS length: \" + lcs.length());\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13, 14 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 15, 16 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 25, 26 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 33, 34 ]
  }, {
    "id" : 15,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 17 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "dsgshsrgsrhtrd",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 22 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 23, 24 ]
  }, {
    "id" : 22,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "datrgagtshs",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 27 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 28, 29 ]
  }, {
    "id" : 27,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "lcs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 30, 31, 32 ]
  }, {
    "id" : 30,
    "token" : "get|lcs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 35, 36 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "Block",
    "children" : [ 37, 38, 39, 40 ]
  }, {
    "id" : 35,
    "token" : "lcs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 41 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 47 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 53 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 59 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 42, 43, 44 ]
  }, {
    "id" : 42,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 45, 46 ]
  }, {
    "id" : 45,
    "token" : "string|:",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 48, 49, 50 ]
  }, {
    "id" : 48,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 51, 52 ]
  }, {
    "id" : 51,
    "token" : "string|:",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "str",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 54, 55, 56 ]
  }, {
    "id" : 54,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 57, 58 ]
  }, {
    "id" : 57,
    "token" : "lcs",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "lcs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 60, 61, 62 ]
  }, {
    "id" : 60,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 63, 64 ]
  }, {
    "id" : 63,
    "token" : "lcs|length",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 65, 66 ]
  }, {
    "id" : 65,
    "token" : "lcs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "ClosestPair",
  "full_name" : "ClosestPair.LongJavaFileProject.ClosestPair",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "ClosestPair(int points) {\n            numberPoints = points;\n            array = new Location[numberPoints];\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "closest|pair",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 4, 5 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "points",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 11 ]
  }, {
    "id" : 8,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 9, 10 ]
  }, {
    "id" : 9,
    "token" : "number|points",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "points",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 12, 13 ]
  }, {
    "id" : 12,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "number|points",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "Location",
  "full_name" : "Location.ClosestPair.LongJavaFileProject.Location",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "Location(final double xpar, final double ypar) { //Save x, y coordinates\n                this.x = xpar;\n                this.y = ypar;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6, 7 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9, 10 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "xpar",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "ypar",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 18 ]
  }, {
    "id" : 13,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "xpar",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "ypar",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "createLocation",
  "full_name" : "ClosestPair.LongJavaFileProject.createLocation",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Location[] createLocation(int numberValues) {\n            return new Location[numberValues];\n\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 6, 7 ]
  }, {
    "id" : 3,
    "token" : "create|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11 ]
  }, {
    "id" : 6,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "number|values",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 12 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 13, 14 ]
  }, {
    "id" : 13,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "number|values",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 17 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "buildLocation",
  "full_name" : "ClosestPair.LongJavaFileProject.buildLocation",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Location buildLocation(double x, double y) {\n            return new Location(x, y);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 3,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 12 ]
  }, {
    "id" : 7,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 13 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 14,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 17 ]
  }, {
    "id" : 15,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "xPartition",
  "full_name" : "ClosestPair.LongJavaFileProject.xPartition",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int xPartition(\n                final Location[] a, final int first, final int last) {\n\n            Location pivot = a[last]; // pivot\n            int pIndex = last;\n            int i = first - 1;\n            Location temp; // Temporarily store value for position transformation\n            for (int j = first; j <= last - 1; j++) {\n                if (a[j].x <= pivot.x) { // Less than or less than pivot\n                    i++;\n                    temp = a[i]; // array[i] <-> array[j]\n                    a[i] = a[j];\n                    a[j] = temp;\n                }\n            }\n            i++;\n            temp = a[i]; // array[pivot] <-> array[i]\n            a[i] = a[pIndex];\n            a[pIndex] = temp;\n            return i; // pivot index\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "x|partition",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9, 10 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 ]
  }, {
    "id" : 8,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 11, 12 ]
  }, {
    "id" : 10,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 30, 31 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 37, 38 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 41, 42 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 47, 48 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 51, 52, 53, 54 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 96 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 98 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 103 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 110 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 115 ]
  }, {
    "id" : 30,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 32 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 32,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "pivot",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 39, 40 ]
  }, {
    "id" : 39,
    "token" : "p|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 45, 46 ]
  }, {
    "id" : 45,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 49 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 50 ]
  }, {
    "id" : 49,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 55, 56 ]
  }, {
    "id" : 52,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 59, 60 ]
  }, {
    "id" : 53,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 63 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "Block",
    "children" : [ 64 ]
  }, {
    "id" : 55,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 57, 58 ]
  }, {
    "id" : 57,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 61, 62 ]
  }, {
    "id" : 61,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 65, 66 ]
  }, {
    "id" : 65,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 67, 68 ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "Block",
    "children" : [ 73, 74, 75, 76 ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 69, 70 ]
  }, {
    "id" : 68,
    "token" : "pivotx",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 71, 72 ]
  }, {
    "id" : 70,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 77 ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 79 ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 84 ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 91 ]
  }, {
    "id" : 77,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 78 ]
  }, {
    "id" : 78,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 80, 81 ]
  }, {
    "id" : 80,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 82, 83 ]
  }, {
    "id" : 82,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 85, 86 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 87, 88 ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 89, 90 ]
  }, {
    "id" : 87,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 92, 93 ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 94, 95 ]
  }, {
    "id" : 93,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 97 ]
  }, {
    "id" : 97,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 99, 100 ]
  }, {
    "id" : 99,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 101, 102 ]
  }, {
    "id" : 101,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 104, 105 ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 106, 107 ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 108, 109 ]
  }, {
    "id" : 106,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "p|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 111, 112 ]
  }, {
    "id" : 111,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 113, 114 ]
  }, {
    "id" : 112,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "p|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "yPartition",
  "full_name" : "ClosestPair.LongJavaFileProject.yPartition",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int yPartition(\n                final Location[] a, final int first, final int last) {\n\n            Location pivot = a[last]; // pivot\n            int pIndex = last;\n            int i = first - 1;\n            Location temp; // Temporarily store value for position transformation\n            for (int j = first; j <= last - 1; j++) {\n                if (a[j].y <= pivot.y) { // Less than or less than pivot\n                    i++;\n                    temp = a[i]; // array[i] <-> array[j]\n                    a[i] = a[j];\n                    a[j] = temp;\n                }\n            }\n            i++;\n            temp = a[i]; // array[pivot] <-> array[i]\n            a[i] = a[pIndex];\n            a[pIndex] = temp;\n            return i; // pivot index\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "y|partition",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9, 10 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 ]
  }, {
    "id" : 8,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 11, 12 ]
  }, {
    "id" : 10,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 30, 31 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 37, 38 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 41, 42 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 47, 48 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 51, 52, 53, 54 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 96 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 98 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 103 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 110 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 115 ]
  }, {
    "id" : 30,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 32 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 32,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "pivot",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 39, 40 ]
  }, {
    "id" : 39,
    "token" : "p|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 45, 46 ]
  }, {
    "id" : 45,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 49 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 50 ]
  }, {
    "id" : 49,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 55, 56 ]
  }, {
    "id" : 52,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 59, 60 ]
  }, {
    "id" : 53,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 63 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "Block",
    "children" : [ 64 ]
  }, {
    "id" : 55,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 57, 58 ]
  }, {
    "id" : 57,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 61, 62 ]
  }, {
    "id" : 61,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 65, 66 ]
  }, {
    "id" : 65,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 67, 68 ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "Block",
    "children" : [ 73, 74, 75, 76 ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 69, 70 ]
  }, {
    "id" : 68,
    "token" : "pivoty",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 71, 72 ]
  }, {
    "id" : 70,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 77 ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 79 ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 84 ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 91 ]
  }, {
    "id" : 77,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 78 ]
  }, {
    "id" : 78,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 80, 81 ]
  }, {
    "id" : 80,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 82, 83 ]
  }, {
    "id" : 82,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 85, 86 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 87, 88 ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 89, 90 ]
  }, {
    "id" : 87,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 92, 93 ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 94, 95 ]
  }, {
    "id" : 93,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 97 ]
  }, {
    "id" : 97,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 99, 100 ]
  }, {
    "id" : 99,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 101, 102 ]
  }, {
    "id" : 101,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 104, 105 ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 106, 107 ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 108, 109 ]
  }, {
    "id" : 106,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "p|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 111, 112 ]
  }, {
    "id" : 111,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 113, 114 ]
  }, {
    "id" : 112,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "p|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "xQuickSort",
  "full_name" : "ClosestPair.LongJavaFileProject.xQuickSort",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void xQuickSort(\n                final Location[] a, final int first, final int last) {\n\n            if (first < last) {\n                int q = xPartition(a, first, last); // pivot\n                xQuickSort(a, first, q - 1); // Left\n                xQuickSort(a, q + 1, last); // Right\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "x|quick|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9, 10 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 20 ]
  }, {
    "id" : 8,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 11, 12 ]
  }, {
    "id" : 10,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 21, 22 ]
  }, {
    "id" : 21,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "Block",
    "children" : [ 25, 26, 27 ]
  }, {
    "id" : 23,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 28, 29 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 36 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 43 ]
  }, {
    "id" : 28,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 32, 33, 34, 35 ]
  }, {
    "id" : 32,
    "token" : "x|partition",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 37, 38, 39, 40 ]
  }, {
    "id" : 37,
    "token" : "x|quick|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 41, 42 ]
  }, {
    "id" : 41,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 44, 45, 46, 47 ]
  }, {
    "id" : 44,
    "token" : "x|quick|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 48, 49 ]
  }, {
    "id" : 47,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "yQuickSort",
  "full_name" : "ClosestPair.LongJavaFileProject.yQuickSort",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void yQuickSort(\n                final Location[] a, final int first, final int last) {\n\n            if (first < last) {\n                int q = yPartition(a, first, last); // pivot\n                yQuickSort(a, first, q - 1); // Left\n                yQuickSort(a, q + 1, last); // Right\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "y|quick|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9, 10 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 20 ]
  }, {
    "id" : 8,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 11, 12 ]
  }, {
    "id" : 10,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 21, 22 ]
  }, {
    "id" : 21,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "Block",
    "children" : [ 25, 26, 27 ]
  }, {
    "id" : 23,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 28, 29 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 36 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 43 ]
  }, {
    "id" : 28,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 32, 33, 34, 35 ]
  }, {
    "id" : 32,
    "token" : "y|partition",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 37, 38, 39, 40 ]
  }, {
    "id" : 37,
    "token" : "y|quick|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 41, 42 ]
  }, {
    "id" : 41,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 44, 45, 46, 47 ]
  }, {
    "id" : 44,
    "token" : "y|quick|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 48, 49 ]
  }, {
    "id" : 47,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "closestPair",
  "full_name" : "ClosestPair.LongJavaFileProject.closestPair",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public double closestPair(final Location[] a, final int indexNum) {\n\n            Location[] divideArray = new Location[indexNum];\n            System.arraycopy(a, 0, divideArray, 0, indexNum); // Copy previous array\n            int totalNum = indexNum; // number of coordinates in the divideArray\n            int divideX = indexNum / 2; // Intermediate value for divide\n            Location[] leftArray = new Location[divideX]; //divide - left array\n            //divide-right array\n            Location[] rightArray = new Location[totalNum - divideX];\n            if (indexNum <= 3) { // If the number of coordinates is 3 or less\n                return bruteForce(divideArray);\n            }\n            //divide-left array\n            System.arraycopy(divideArray, 0, leftArray, 0, divideX);\n            //divide-right array\n            System.arraycopy(\n                    divideArray, divideX, rightArray, 0, totalNum - divideX);\n\n            double minLeftArea = 0; //Minimum length of left array\n            double minRightArea = 0; //Minimum length of right array\n            double minValue = 0; //Minimum lengt\n\n            minLeftArea = closestPair(leftArray, divideX); // recursive closestPair\n            minRightArea = closestPair(rightArray, totalNum - divideX);\n            // window size (= minimum length)\n            minValue = Math.min(minLeftArea, minRightArea);\n\n            // Create window.  Set the size for creating a window\n            // and creating a new array for the coordinates in the window\n            for (int i = 0; i < totalNum; i++) {\n                double xGap = Math.abs(divideArray[divideX].x - divideArray[i].x);\n                if (xGap < minValue) {\n                    secondCount++; // size of the array\n                } else {\n                    if (divideArray[i].x > divideArray[divideX].x) {\n                        break;\n                    }\n                }\n            }\n            // new array for coordinates in window\n            Location[] firstWindow = new Location[secondCount];\n            int k = 0;\n            for (int i = 0; i < totalNum; i++) {\n                double xGap = Math.abs(divideArray[divideX].x - divideArray[i].x);\n                if (xGap < minValue) { // if it's inside a window\n                    firstWindow[k] = divideArray[i]; // put in an array\n                    k++;\n                } else {\n                    if (divideArray[i].x > divideArray[divideX].x) {\n                        break;\n                    }\n                }\n            }\n            yQuickSort(firstWindow, 0, secondCount - 1); // Sort by y coordinates\n            /* Coordinates in Window */\n            double length = 0;\n            // size comparison within window\n            for (int i = 0; i < secondCount - 1; i++) {\n                for (int j = (i + 1); j < secondCount; j++) {\n                    double xGap = Math.abs(firstWindow[i].x - firstWindow[j].x);\n                    double yGap = Math.abs(firstWindow[i].y - firstWindow[j].y);\n                    if (yGap < minValue) {\n                        length = Math.sqrt(Math.pow(xGap, 2) + Math.pow(yGap, 2));\n                        // If measured distance is less than current min distance\n                        if (length < minValue) {\n                            // Change minimum distance to current distance\n                            minValue = length;\n                            // Conditional for registering final coordinate\n                            if (length < minNum) {\n                                minNum = length;\n                                point1 = firstWindow[i];\n                                point2 = firstWindow[j];\n                            }\n                        }\n                    } else {\n                        break;\n                    }\n                }\n            }\n            secondCount = 0;\n            return minValue;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "closest|pair",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 13, 14, 15 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 ]
  }, {
    "id" : 7,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 10, 11 ]
  }, {
    "id" : 9,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "index|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 40, 41 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 52 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 60, 61 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 64, 65 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 70, 71 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 82, 83 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 96, 97 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 104 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 112 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 122, 123 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 126, 127 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 130, 131 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 134 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 140 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 148 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 155, 156, 157, 158 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 207, 208 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 219, 220 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 223, 224, 225, 226 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 283 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 290, 291 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 294, 295, 296, 297 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 412 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 415 ]
  }, {
    "id" : 40,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 45, 46 ]
  }, {
    "id" : 42,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 44 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 47, 48 ]
  }, {
    "id" : 47,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 49, 50 ]
  }, {
    "id" : 48,
    "token" : "index|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 51 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 53, 54, 55, 56, 57, 58, 59 ]
  }, {
    "id" : 53,
    "token" : "system",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "arraycopy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "index|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 62, 63 ]
  }, {
    "id" : 62,
    "token" : "total|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "index|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 66, 67 ]
  }, {
    "id" : 66,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 68, 69 ]
  }, {
    "id" : 68,
    "token" : "index|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 72, 73 ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 75, 76 ]
  }, {
    "id" : 72,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 74 ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "left|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 77, 78 ]
  }, {
    "id" : 77,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 79, 80 ]
  }, {
    "id" : 78,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 81 ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 84, 85 ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 87, 88 ]
  }, {
    "id" : 84,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 86 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "right|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 89, 90 ]
  }, {
    "id" : 89,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 91, 92 ]
  }, {
    "id" : 90,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 94, 95 ]
  }, {
    "id" : 91,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 93 ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "total|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 98, 99 ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "Block",
    "children" : [ 100 ]
  }, {
    "id" : 98,
    "token" : "index|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 101 ]
  }, {
    "id" : 101,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 102, 103 ]
  }, {
    "id" : 102,
    "token" : "brute|force",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 105, 106, 107, 108, 109, 110, 111 ]
  }, {
    "id" : 105,
    "token" : "system",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "arraycopy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "left|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 113, 114, 115, 116, 117, 118, 119 ]
  }, {
    "id" : 113,
    "token" : "system",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "arraycopy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "right|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 120, 121 ]
  }, {
    "id" : 120,
    "token" : "total|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 124, 125 ]
  }, {
    "id" : 124,
    "token" : "min|left|area",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 128, 129 ]
  }, {
    "id" : 128,
    "token" : "min|right|area",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 132, 133 ]
  }, {
    "id" : 132,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 134,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 135, 136 ]
  }, {
    "id" : 135,
    "token" : "min|left|area",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 137, 138, 139 ]
  }, {
    "id" : 137,
    "token" : "closest|pair",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 138,
    "token" : "left|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 139,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 140,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 141, 142 ]
  }, {
    "id" : 141,
    "token" : "min|right|area",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 143, 144, 145 ]
  }, {
    "id" : 143,
    "token" : "closest|pair",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 144,
    "token" : "right|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 146, 147 ]
  }, {
    "id" : 146,
    "token" : "total|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 149, 150 ]
  }, {
    "id" : 149,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 151, 152, 153, 154 ]
  }, {
    "id" : 151,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 152,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 153,
    "token" : "min|left|area",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 154,
    "token" : "min|right|area",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 155,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 159, 160 ]
  }, {
    "id" : 156,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 163, 164 ]
  }, {
    "id" : 157,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 165 ]
  }, {
    "id" : 158,
    "token" : "",
    "type" : "Block",
    "children" : [ 166, 167 ]
  }, {
    "id" : 159,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 160,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 161, 162 ]
  }, {
    "id" : 161,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 162,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 163,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 164,
    "token" : "total|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 165,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 166,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 168, 169 ]
  }, {
    "id" : 167,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 185, 186, 187 ]
  }, {
    "id" : 168,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 169,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 170, 171 ]
  }, {
    "id" : 170,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 171,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 172, 173, 174 ]
  }, {
    "id" : 172,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 173,
    "token" : "abs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 174,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 175, 176 ]
  }, {
    "id" : 175,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 177, 178 ]
  }, {
    "id" : 176,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 181, 182 ]
  }, {
    "id" : 177,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 179, 180 ]
  }, {
    "id" : 178,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 179,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 180,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 181,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 183, 184 ]
  }, {
    "id" : 182,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 183,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 184,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 185,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 188, 189 ]
  }, {
    "id" : 186,
    "token" : "",
    "type" : "Block",
    "children" : [ 190 ]
  }, {
    "id" : 187,
    "token" : "",
    "type" : "Block",
    "children" : [ 193 ]
  }, {
    "id" : 188,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 189,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 190,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 191 ]
  }, {
    "id" : 191,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 192 ]
  }, {
    "id" : 192,
    "token" : "second|count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 193,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 194, 195 ]
  }, {
    "id" : 194,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 196, 197 ]
  }, {
    "id" : 195,
    "token" : "",
    "type" : "Block",
    "children" : [ 206 ]
  }, {
    "id" : 196,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 198, 199 ]
  }, {
    "id" : 197,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 202, 203 ]
  }, {
    "id" : 198,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 200, 201 ]
  }, {
    "id" : 199,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 200,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 201,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 202,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 204, 205 ]
  }, {
    "id" : 203,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 204,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 205,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 206,
    "token" : "",
    "type" : "BreakStatement",
    "children" : [ ]
  }, {
    "id" : 207,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 209, 210 ]
  }, {
    "id" : 208,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 212, 213 ]
  }, {
    "id" : 209,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 211 ]
  }, {
    "id" : 210,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 211,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 212,
    "token" : "first|window",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 213,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 214, 215 ]
  }, {
    "id" : 214,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 216, 217 ]
  }, {
    "id" : 215,
    "token" : "second|count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 216,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 218 ]
  }, {
    "id" : 217,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 218,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 219,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 220,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 221, 222 ]
  }, {
    "id" : 221,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 222,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 223,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 227, 228 ]
  }, {
    "id" : 224,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 231, 232 ]
  }, {
    "id" : 225,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 233 ]
  }, {
    "id" : 226,
    "token" : "",
    "type" : "Block",
    "children" : [ 234, 235 ]
  }, {
    "id" : 227,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 228,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 229, 230 ]
  }, {
    "id" : 229,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 230,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 231,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 232,
    "token" : "total|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 233,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 234,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 236, 237 ]
  }, {
    "id" : 235,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 253, 254, 255 ]
  }, {
    "id" : 236,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 237,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 238, 239 ]
  }, {
    "id" : 238,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 239,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 240, 241, 242 ]
  }, {
    "id" : 240,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 241,
    "token" : "abs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 242,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 243, 244 ]
  }, {
    "id" : 243,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 245, 246 ]
  }, {
    "id" : 244,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 249, 250 ]
  }, {
    "id" : 245,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 247, 248 ]
  }, {
    "id" : 246,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 247,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 248,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 249,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 251, 252 ]
  }, {
    "id" : 250,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 251,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 252,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 253,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 256, 257 ]
  }, {
    "id" : 254,
    "token" : "",
    "type" : "Block",
    "children" : [ 258, 259 ]
  }, {
    "id" : 255,
    "token" : "",
    "type" : "Block",
    "children" : [ 269 ]
  }, {
    "id" : 256,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 257,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 258,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 260 ]
  }, {
    "id" : 259,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 267 ]
  }, {
    "id" : 260,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 261, 262 ]
  }, {
    "id" : 261,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 263, 264 ]
  }, {
    "id" : 262,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 265, 266 ]
  }, {
    "id" : 263,
    "token" : "first|window",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 264,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 265,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 266,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 267,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 268 ]
  }, {
    "id" : 268,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 269,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 270, 271 ]
  }, {
    "id" : 270,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 272, 273 ]
  }, {
    "id" : 271,
    "token" : "",
    "type" : "Block",
    "children" : [ 282 ]
  }, {
    "id" : 272,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 274, 275 ]
  }, {
    "id" : 273,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 278, 279 ]
  }, {
    "id" : 274,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 276, 277 ]
  }, {
    "id" : 275,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 276,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 277,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 278,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 280, 281 ]
  }, {
    "id" : 279,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 280,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 281,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 282,
    "token" : "",
    "type" : "BreakStatement",
    "children" : [ ]
  }, {
    "id" : 283,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 284, 285, 286, 287 ]
  }, {
    "id" : 284,
    "token" : "y|quick|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 285,
    "token" : "first|window",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 286,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 287,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 288, 289 ]
  }, {
    "id" : 288,
    "token" : "second|count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 289,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 290,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 291,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 292, 293 ]
  }, {
    "id" : 292,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 293,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 294,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 298, 299 ]
  }, {
    "id" : 295,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 302, 303 ]
  }, {
    "id" : 296,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 306 ]
  }, {
    "id" : 297,
    "token" : "",
    "type" : "Block",
    "children" : [ 307 ]
  }, {
    "id" : 298,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 299,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 300, 301 ]
  }, {
    "id" : 300,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 301,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 302,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 303,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 304, 305 ]
  }, {
    "id" : 304,
    "token" : "second|count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 305,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 306,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 307,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 308, 309, 310, 311 ]
  }, {
    "id" : 308,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 312, 313 ]
  }, {
    "id" : 309,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 319, 320 ]
  }, {
    "id" : 310,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 321 ]
  }, {
    "id" : 311,
    "token" : "",
    "type" : "Block",
    "children" : [ 322, 323, 324 ]
  }, {
    "id" : 312,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 313,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 314, 315 ]
  }, {
    "id" : 314,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 315,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 316 ]
  }, {
    "id" : 316,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 317, 318 ]
  }, {
    "id" : 317,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 318,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 319,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 320,
    "token" : "second|count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 321,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 322,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 325, 326 ]
  }, {
    "id" : 323,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 342, 343 ]
  }, {
    "id" : 324,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 359, 360, 361 ]
  }, {
    "id" : 325,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 326,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 327, 328 ]
  }, {
    "id" : 327,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 328,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 329, 330, 331 ]
  }, {
    "id" : 329,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 330,
    "token" : "abs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 331,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 332, 333 ]
  }, {
    "id" : 332,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 334, 335 ]
  }, {
    "id" : 333,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 338, 339 ]
  }, {
    "id" : 334,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 336, 337 ]
  }, {
    "id" : 335,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 336,
    "token" : "first|window",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 337,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 338,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 340, 341 ]
  }, {
    "id" : 339,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 340,
    "token" : "first|window",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 341,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 342,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 343,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 344, 345 ]
  }, {
    "id" : 344,
    "token" : "y|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 345,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 346, 347, 348 ]
  }, {
    "id" : 346,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 347,
    "token" : "abs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 348,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 349, 350 ]
  }, {
    "id" : 349,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 351, 352 ]
  }, {
    "id" : 350,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 355, 356 ]
  }, {
    "id" : 351,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 353, 354 ]
  }, {
    "id" : 352,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 353,
    "token" : "first|window",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 354,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 355,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 357, 358 ]
  }, {
    "id" : 356,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 357,
    "token" : "first|window",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 358,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 359,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 362, 363 ]
  }, {
    "id" : 360,
    "token" : "",
    "type" : "Block",
    "children" : [ 364, 365 ]
  }, {
    "id" : 361,
    "token" : "",
    "type" : "Block",
    "children" : [ 411 ]
  }, {
    "id" : 362,
    "token" : "y|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 363,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 364,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 366 ]
  }, {
    "id" : 365,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 382, 383 ]
  }, {
    "id" : 366,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 367, 368 ]
  }, {
    "id" : 367,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 368,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 369, 370, 371 ]
  }, {
    "id" : 369,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 370,
    "token" : "sqrt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 371,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 372, 373 ]
  }, {
    "id" : 372,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 374, 375, 376, 377 ]
  }, {
    "id" : 373,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 378, 379, 380, 381 ]
  }, {
    "id" : 374,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 375,
    "token" : "pow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 376,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 377,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 378,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 379,
    "token" : "pow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 380,
    "token" : "y|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 381,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 382,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 384, 385 ]
  }, {
    "id" : 383,
    "token" : "",
    "type" : "Block",
    "children" : [ 386, 387 ]
  }, {
    "id" : 384,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 385,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 386,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 388 ]
  }, {
    "id" : 387,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 391, 392 ]
  }, {
    "id" : 388,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 389, 390 ]
  }, {
    "id" : 389,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 390,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 391,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 393, 394 ]
  }, {
    "id" : 392,
    "token" : "",
    "type" : "Block",
    "children" : [ 395, 396, 397 ]
  }, {
    "id" : 393,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 394,
    "token" : "min|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 395,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 398 ]
  }, {
    "id" : 396,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 401 ]
  }, {
    "id" : 397,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 406 ]
  }, {
    "id" : 398,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 399, 400 ]
  }, {
    "id" : 399,
    "token" : "min|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 400,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 401,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 402, 403 ]
  }, {
    "id" : 402,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 403,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 404, 405 ]
  }, {
    "id" : 404,
    "token" : "first|window",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 405,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 406,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 407, 408 ]
  }, {
    "id" : 407,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 408,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 409, 410 ]
  }, {
    "id" : 409,
    "token" : "first|window",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 410,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 411,
    "token" : "",
    "type" : "BreakStatement",
    "children" : [ ]
  }, {
    "id" : 412,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 413, 414 ]
  }, {
    "id" : 413,
    "token" : "second|count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 414,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 415,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "bruteForce",
  "full_name" : "ClosestPair.LongJavaFileProject.bruteForce",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public double bruteForce(final Location[] arrayParam) {\n\n            double minValue = Double.MAX_VALUE; // minimum distance\n            double length = 0;\n            double xGap = 0; // Difference between x coordinates\n            double yGap = 0; // Difference between y coordinates\n            double result = 0;\n\n            if (arrayParam.length == 2) {\n                // Difference between x coordinates\n                xGap = (arrayParam[0].x - arrayParam[1].x);\n                // Difference between y coordinates\n                yGap = (arrayParam[0].y - arrayParam[1].y);\n                // distance between coordinates\n                length = Math.sqrt(Math.pow(xGap, 2) + Math.pow(yGap, 2));\n                // Conditional statement for registering final coordinate\n                if (length < minNum) {\n                    minNum = length;\n\n                }\n                point1 = arrayParam[0];\n                point2 = arrayParam[1];\n                result = length;\n            }\n            if (arrayParam.length == 3) {\n                for (int i = 0; i < arrayParam.length - 1; i++) {\n                    for (int j = (i + 1); j < arrayParam.length; j++) {\n                        // Difference between x coordinates\n                        xGap = (arrayParam[i].x - arrayParam[j].x);\n                        // Difference between y coordinates\n                        yGap = (arrayParam[i].y - arrayParam[j].y);\n                        // distance between coordinates\n                        length =\n                                Math.sqrt(Math.pow(xGap, 2) + Math.pow(yGap, 2));\n                        // If measured distance is less than current min distance\n                        if (length < minValue) {\n                            // Change minimum distance to current distance\n                            minValue = length;\n                            if (length < minNum) {\n                                // Registering final coordinate\n                                minNum = length;\n                                point1 = arrayParam[i];\n                                point2 = arrayParam[j];\n                            }\n                        }\n                    }\n                }\n                result = minValue;\n\n            }\n            return result; // If only one point returns 0.\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "brute|force",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 12, 13, 14, 15, 16, 17, 18, 19 ]
  }, {
    "id" : 6,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 28, 29 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 32, 33 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 36, 37 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 40, 41 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 116, 117 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 230 ]
  }, {
    "id" : 20,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "doublemax|value",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "y|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 38, 39 ]
  }, {
    "id" : 38,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "Block",
    "children" : [ 44, 45, 46, 47, 48, 49, 50 ]
  }, {
    "id" : 42,
    "token" : "array|paramlength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 51 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 65 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 79 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 95, 96 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 103 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 108 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 113 ]
  }, {
    "id" : 51,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 52, 53 ]
  }, {
    "id" : 52,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 54 ]
  }, {
    "id" : 54,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 55, 56 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 57, 58 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 61, 62 ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 59, 60 ]
  }, {
    "id" : 58,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 63, 64 ]
  }, {
    "id" : 62,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 66, 67 ]
  }, {
    "id" : 66,
    "token" : "y|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 68 ]
  }, {
    "id" : 68,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 69, 70 ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 71, 72 ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 75, 76 ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 73, 74 ]
  }, {
    "id" : 72,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 77, 78 ]
  }, {
    "id" : 76,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 80, 81 ]
  }, {
    "id" : 80,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 82, 83, 84 ]
  }, {
    "id" : 82,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "sqrt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 85, 86 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 87, 88, 89, 90 ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 91, 92, 93, 94 ]
  }, {
    "id" : 87,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "pow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "pow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "y|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 97, 98 ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "Block",
    "children" : [ 99 ]
  }, {
    "id" : 97,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "min|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 100 ]
  }, {
    "id" : 100,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 101, 102 ]
  }, {
    "id" : 101,
    "token" : "min|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 104, 105 ]
  }, {
    "id" : 104,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 106, 107 ]
  }, {
    "id" : 106,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 109, 110 ]
  }, {
    "id" : 109,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 111, 112 ]
  }, {
    "id" : 111,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 114, 115 ]
  }, {
    "id" : 114,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 118, 119 ]
  }, {
    "id" : 117,
    "token" : "",
    "type" : "Block",
    "children" : [ 120, 121 ]
  }, {
    "id" : 118,
    "token" : "array|paramlength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 122, 123, 124, 125 ]
  }, {
    "id" : 121,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 227 ]
  }, {
    "id" : 122,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 126, 127 ]
  }, {
    "id" : 123,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 130, 131 ]
  }, {
    "id" : 124,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 134 ]
  }, {
    "id" : 125,
    "token" : "",
    "type" : "Block",
    "children" : [ 135 ]
  }, {
    "id" : 126,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 128, 129 ]
  }, {
    "id" : 128,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 132, 133 ]
  }, {
    "id" : 132,
    "token" : "array|paramlength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 134,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 135,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 136, 137, 138, 139 ]
  }, {
    "id" : 136,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 140, 141 ]
  }, {
    "id" : 137,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 147, 148 ]
  }, {
    "id" : 138,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 149 ]
  }, {
    "id" : 139,
    "token" : "",
    "type" : "Block",
    "children" : [ 150, 151, 152, 153 ]
  }, {
    "id" : 140,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 141,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 142, 143 ]
  }, {
    "id" : 142,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 143,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 144 ]
  }, {
    "id" : 144,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 145, 146 ]
  }, {
    "id" : 145,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 146,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "array|paramlength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 154 ]
  }, {
    "id" : 151,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 168 ]
  }, {
    "id" : 152,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 182 ]
  }, {
    "id" : 153,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 198, 199 ]
  }, {
    "id" : 154,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 155, 156 ]
  }, {
    "id" : 155,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 157 ]
  }, {
    "id" : 157,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 158, 159 ]
  }, {
    "id" : 158,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 160, 161 ]
  }, {
    "id" : 159,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 164, 165 ]
  }, {
    "id" : 160,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 162, 163 ]
  }, {
    "id" : 161,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 162,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 163,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 164,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 166, 167 ]
  }, {
    "id" : 165,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 166,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 167,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 168,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 169, 170 ]
  }, {
    "id" : 169,
    "token" : "y|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 170,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 171 ]
  }, {
    "id" : 171,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 172, 173 ]
  }, {
    "id" : 172,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 174, 175 ]
  }, {
    "id" : 173,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 178, 179 ]
  }, {
    "id" : 174,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 176, 177 ]
  }, {
    "id" : 175,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 176,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 177,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 178,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 180, 181 ]
  }, {
    "id" : 179,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 180,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 181,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 182,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 183, 184 ]
  }, {
    "id" : 183,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 184,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 185, 186, 187 ]
  }, {
    "id" : 185,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 186,
    "token" : "sqrt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 187,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 188, 189 ]
  }, {
    "id" : 188,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 190, 191, 192, 193 ]
  }, {
    "id" : 189,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 194, 195, 196, 197 ]
  }, {
    "id" : 190,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 191,
    "token" : "pow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 192,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 193,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 194,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 195,
    "token" : "pow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 196,
    "token" : "y|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 197,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 198,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 200, 201 ]
  }, {
    "id" : 199,
    "token" : "",
    "type" : "Block",
    "children" : [ 202, 203 ]
  }, {
    "id" : 200,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 201,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 202,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 204 ]
  }, {
    "id" : 203,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 207, 208 ]
  }, {
    "id" : 204,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 205, 206 ]
  }, {
    "id" : 205,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 206,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 207,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 209, 210 ]
  }, {
    "id" : 208,
    "token" : "",
    "type" : "Block",
    "children" : [ 211, 212, 213 ]
  }, {
    "id" : 209,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 210,
    "token" : "min|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 211,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 214 ]
  }, {
    "id" : 212,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 217 ]
  }, {
    "id" : 213,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 222 ]
  }, {
    "id" : 214,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 215, 216 ]
  }, {
    "id" : 215,
    "token" : "min|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 216,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 217,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 218, 219 ]
  }, {
    "id" : 218,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 219,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 220, 221 ]
  }, {
    "id" : 220,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 221,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 222,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 223, 224 ]
  }, {
    "id" : 223,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 224,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 225, 226 ]
  }, {
    "id" : 225,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 226,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 227,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 228, 229 ]
  }, {
    "id" : 228,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 229,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 230,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "ClosestPair.LongJavaFileProject.main",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void main(final String[] args) {\n\n            //Input data consists of one x-coordinate and one y-coordinate\n\n            ClosestPair cp = new ClosestPair(12);\n            cp.array[0] = cp.buildLocation(2, 3);\n            cp.array[1] = cp.buildLocation(2, 16);\n            cp.array[2] = cp.buildLocation(3, 9);\n            cp.array[3] = cp.buildLocation(6, 3);\n            cp.array[4] = cp.buildLocation(7, 7);\n            cp.array[5] = cp.buildLocation(19, 4);\n            cp.array[6] = cp.buildLocation(10, 11);\n            cp.array[7] = cp.buildLocation(15, 2);\n            cp.array[8] = cp.buildLocation(15, 19);\n            cp.array[9] = cp.buildLocation(16, 11);\n            cp.array[10] = cp.buildLocation(17, 13);\n            cp.array[11] = cp.buildLocation(9, 12);\n\n            System.out.println(\"Input data\");\n            System.out.println(\"Number of points: \" + cp.array.length);\n            for (int i = 0; i < cp.array.length; i++) {\n                System.out.println(\"x: \" + cp.array[i].x + \", y: \" + cp.array[i].y);\n            }\n\n            cp.xQuickSort(cp.array, 0, cp.array.length - 1); // Sorting by x value\n\n            double result; // minimum distance\n\n            result = cp.closestPair(cp.array, cp.array.length);\n            System.out.println(\"Output Data\");\n            System.out.println(\"(\" + cp.point1.x + \", \" + cp.point1.y + \")\");\n            System.out.println(\"(\" + cp.point2.x + \", \" + cp.point2.y + \")\");\n            System.out.println(\"Minimum Distance : \" + result);\n\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 ]
  }, {
    "id" : 6,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 35, 36 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 43 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 52 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 61 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 70 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 79 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 88 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 97 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 106 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 115 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 124 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 133 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 142 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 151 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 155 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 161, 162, 163, 164 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 189 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 197, 198 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 200 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 207 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 211 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 220 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 229 ]
  }, {
    "id" : 35,
    "token" : "closest|pair",
    "type" : "SimpleType",
    "children" : [ 37 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 38, 39 ]
  }, {
    "id" : 37,
    "token" : "closest|pair",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "closest|pair",
    "type" : "SimpleType",
    "children" : [ 42 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "closest|pair",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 44, 45 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 46, 47 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 48, 49, 50, 51 ]
  }, {
    "id" : 46,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 53, 54 ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 55, 56 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 57, 58, 59, 60 ]
  }, {
    "id" : 55,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 62, 63 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 64, 65 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 66, 67, 68, 69 ]
  }, {
    "id" : 64,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 71, 72 ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 73, 74 ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 75, 76, 77, 78 ]
  }, {
    "id" : 73,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 80, 81 ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 82, 83 ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 84, 85, 86, 87 ]
  }, {
    "id" : 82,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 89, 90 ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 91, 92 ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 93, 94, 95, 96 ]
  }, {
    "id" : 91,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 98, 99 ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 100, 101 ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 102, 103, 104, 105 ]
  }, {
    "id" : 100,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 107, 108 ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 109, 110 ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 111, 112, 113, 114 ]
  }, {
    "id" : 109,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 116, 117 ]
  }, {
    "id" : 116,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 118, 119 ]
  }, {
    "id" : 117,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 120, 121, 122, 123 ]
  }, {
    "id" : 118,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 125, 126 ]
  }, {
    "id" : 125,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 127, 128 ]
  }, {
    "id" : 126,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 129, 130, 131, 132 ]
  }, {
    "id" : 127,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 132,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 134, 135 ]
  }, {
    "id" : 134,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 136, 137 ]
  }, {
    "id" : 135,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 138, 139, 140, 141 ]
  }, {
    "id" : 136,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 137,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 138,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 139,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 140,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 141,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 143, 144 ]
  }, {
    "id" : 143,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 145, 146 ]
  }, {
    "id" : 144,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 147, 148, 149, 150 ]
  }, {
    "id" : 145,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 146,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 151,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 152, 153, 154 ]
  }, {
    "id" : 152,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 153,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 154,
    "token" : "input|data",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 155,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 156, 157, 158 ]
  }, {
    "id" : 156,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 157,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 158,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 159, 160 ]
  }, {
    "id" : 159,
    "token" : "number|of|points",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 160,
    "token" : "cparraylength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 165, 166 ]
  }, {
    "id" : 162,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 169, 170 ]
  }, {
    "id" : 163,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 171 ]
  }, {
    "id" : 164,
    "token" : "",
    "type" : "Block",
    "children" : [ 172 ]
  }, {
    "id" : 165,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 166,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 167, 168 ]
  }, {
    "id" : 167,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 168,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 169,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 170,
    "token" : "cparraylength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 171,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 172,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 173 ]
  }, {
    "id" : 173,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 174, 175, 176 ]
  }, {
    "id" : 174,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 175,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 176,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 177, 178, 179, 180 ]
  }, {
    "id" : 177,
    "token" : "x",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 178,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 181, 182 ]
  }, {
    "id" : 179,
    "token" : "y",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 180,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 185, 186 ]
  }, {
    "id" : 181,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 183, 184 ]
  }, {
    "id" : 182,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 183,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 184,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 185,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 187, 188 ]
  }, {
    "id" : 186,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 187,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 188,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 189,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 190, 191, 192, 193, 194 ]
  }, {
    "id" : 190,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 191,
    "token" : "x|quick|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 192,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 193,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 194,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 195, 196 ]
  }, {
    "id" : 195,
    "token" : "cparraylength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 196,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 197,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 198,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 199 ]
  }, {
    "id" : 199,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 200,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 201, 202 ]
  }, {
    "id" : 201,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 202,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 203, 204, 205, 206 ]
  }, {
    "id" : 203,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 204,
    "token" : "closest|pair",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 205,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 206,
    "token" : "cparraylength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 207,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 208, 209, 210 ]
  }, {
    "id" : 208,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 209,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 210,
    "token" : "output|data",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 211,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 212, 213, 214 ]
  }, {
    "id" : 212,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 213,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 214,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 215, 216, 217, 218, 219 ]
  }, {
    "id" : 215,
    "token" : "(",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 216,
    "token" : "cppoint|x",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 217,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 218,
    "token" : "cppoint|y",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 219,
    "token" : ")",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 220,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 221, 222, 223 ]
  }, {
    "id" : 221,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 222,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 223,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 224, 225, 226, 227, 228 ]
  }, {
    "id" : 224,
    "token" : "(",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 225,
    "token" : "cppoint|x",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 226,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 227,
    "token" : "cppoint|y",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 228,
    "token" : ")",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 229,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 230, 231, 232 ]
  }, {
    "id" : 230,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 231,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 232,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 233, 234 ]
  }, {
    "id" : 233,
    "token" : "minimum|distance|:",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 234,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "SkylineAlgorithm",
  "full_name" : "SkylineAlgorithm.LongJavaFileProject.SkylineAlgorithm",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public SkylineAlgorithm() {\n            points = new ArrayList<>();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "skyline|algorithm",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 6, 7 ]
  }, {
    "id" : 6,
    "token" : "points",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "array|list",
    "type" : "ParameterizedType",
    "children" : [ 9 ]
  }, {
    "id" : 9,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 10,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "getPoints",
  "full_name" : "SkylineAlgorithm.LongJavaFileProject.getPoints",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public ArrayList<Point> getPoints() {\n            return points;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "array|listpoint",
    "type" : "ParameterizedType",
    "children" : [ 5, 6 ]
  }, {
    "id" : 3,
    "token" : "get|points",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 9 ]
  }, {
    "id" : 5,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "point",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 10 ]
  }, {
    "id" : 10,
    "token" : "points",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "produceSubSkyLines",
  "full_name" : "SkylineAlgorithm.LongJavaFileProject.produceSubSkyLines",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public ArrayList<Point> produceSubSkyLines(ArrayList<Point> list) {\n\n            // part where function exits flashback\n            int size = list.size();\n            if (size == 1) {\n                return list;\n            } else if (size == 2) {\n                if (list.get(0).dominates(list.get(1))) {\n                    list.remove(1);\n                } else {\n                    if (list.get(1).dominates(list.get(0))) {\n                        list.remove(0);\n                    }\n                }\n                return list;\n            }\n\n            // recursive part of the function\n            ArrayList<Point> leftHalf = new ArrayList<>();\n            ArrayList<Point> rightHalf = new ArrayList<>();\n            for (int i = 0; i < list.size(); i++) {\n                if (i < list.size() / 2) {\n                    leftHalf.add(list.get(i));\n                } else {\n                    rightHalf.add(list.get(i));\n                }\n            }\n            ArrayList<Point> leftSubSkyLine = produceSubSkyLines(leftHalf);\n            ArrayList<Point> rightSubSkyLine = produceSubSkyLines(rightHalf);\n\n            // skyline is produced\n            return produceFinalSkyLine(leftSubSkyLine, rightSubSkyLine);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "array|listpoint",
    "type" : "ParameterizedType",
    "children" : [ 6, 7 ]
  }, {
    "id" : 3,
    "token" : "produce|sub|sky|lines",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 16, 17, 18, 19, 20, 21, 22, 23 ]
  }, {
    "id" : 6,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "point",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "array|listpoint",
    "type" : "ParameterizedType",
    "children" : [ 12, 13 ]
  }, {
    "id" : 11,
    "token" : "list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "point",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 14,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 30, 31, 32 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 78, 79 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 89, 90 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 100, 101, 102, 103 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 139, 140 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 149, 150 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 159 ]
  }, {
    "id" : 24,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 33, 34 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "Block",
    "children" : [ 35 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 37, 38 ]
  }, {
    "id" : 33,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 36 ]
  }, {
    "id" : 36,
    "token" : "list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 39, 40 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "Block",
    "children" : [ 41, 42 ]
  }, {
    "id" : 39,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 43, 44, 45 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 77 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 46, 47, 48 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "Block",
    "children" : [ 55 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "Block",
    "children" : [ 60 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 49, 50, 51 ]
  }, {
    "id" : 47,
    "token" : "dominates",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 52, 53, 54 ]
  }, {
    "id" : 49,
    "token" : "list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 56 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 57, 58, 59 ]
  }, {
    "id" : 57,
    "token" : "list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "remove",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 61, 62 ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 63, 64, 65 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "Block",
    "children" : [ 72 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 66, 67, 68 ]
  }, {
    "id" : 64,
    "token" : "dominates",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 69, 70, 71 ]
  }, {
    "id" : 66,
    "token" : "list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 73 ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 74, 75, 76 ]
  }, {
    "id" : 74,
    "token" : "list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "remove",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "array|listpoint",
    "type" : "ParameterizedType",
    "children" : [ 80, 81 ]
  }, {
    "id" : 79,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 84, 85 ]
  }, {
    "id" : 80,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 82 ]
  }, {
    "id" : 81,
    "token" : "point",
    "type" : "SimpleType",
    "children" : [ 83 ]
  }, {
    "id" : 82,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "left|half",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 86 ]
  }, {
    "id" : 86,
    "token" : "array|list",
    "type" : "ParameterizedType",
    "children" : [ 87 ]
  }, {
    "id" : 87,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 88 ]
  }, {
    "id" : 88,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "array|listpoint",
    "type" : "ParameterizedType",
    "children" : [ 91, 92 ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 95, 96 ]
  }, {
    "id" : 91,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 93 ]
  }, {
    "id" : 92,
    "token" : "point",
    "type" : "SimpleType",
    "children" : [ 94 ]
  }, {
    "id" : 93,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "right|half",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 97 ]
  }, {
    "id" : 97,
    "token" : "array|list",
    "type" : "ParameterizedType",
    "children" : [ 98 ]
  }, {
    "id" : 98,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 99 ]
  }, {
    "id" : 99,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 104, 105 ]
  }, {
    "id" : 101,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 108, 109 ]
  }, {
    "id" : 102,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 112 ]
  }, {
    "id" : 103,
    "token" : "",
    "type" : "Block",
    "children" : [ 113 ]
  }, {
    "id" : 104,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 106, 107 ]
  }, {
    "id" : 106,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 110, 111 ]
  }, {
    "id" : 110,
    "token" : "list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 114, 115, 116 ]
  }, {
    "id" : 114,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 117, 118 ]
  }, {
    "id" : 115,
    "token" : "",
    "type" : "Block",
    "children" : [ 123 ]
  }, {
    "id" : 116,
    "token" : "",
    "type" : "Block",
    "children" : [ 131 ]
  }, {
    "id" : 117,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 119, 120 ]
  }, {
    "id" : 119,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 121, 122 ]
  }, {
    "id" : 120,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 124 ]
  }, {
    "id" : 124,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 125, 126, 127 ]
  }, {
    "id" : 125,
    "token" : "left|half",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 128, 129, 130 ]
  }, {
    "id" : 128,
    "token" : "list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 132 ]
  }, {
    "id" : 132,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 133, 134, 135 ]
  }, {
    "id" : 133,
    "token" : "right|half",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 134,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 135,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 136, 137, 138 ]
  }, {
    "id" : 136,
    "token" : "list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 137,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 138,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 139,
    "token" : "array|listpoint",
    "type" : "ParameterizedType",
    "children" : [ 141, 142 ]
  }, {
    "id" : 140,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 145, 146 ]
  }, {
    "id" : 141,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 143 ]
  }, {
    "id" : 142,
    "token" : "point",
    "type" : "SimpleType",
    "children" : [ 144 ]
  }, {
    "id" : 143,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 144,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "left|sub|sky|line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 146,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 147, 148 ]
  }, {
    "id" : 147,
    "token" : "produce|sub|sky|lines",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "left|half",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "array|listpoint",
    "type" : "ParameterizedType",
    "children" : [ 151, 152 ]
  }, {
    "id" : 150,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 155, 156 ]
  }, {
    "id" : 151,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 153 ]
  }, {
    "id" : 152,
    "token" : "point",
    "type" : "SimpleType",
    "children" : [ 154 ]
  }, {
    "id" : 153,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 154,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 155,
    "token" : "right|sub|sky|line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 157, 158 ]
  }, {
    "id" : 157,
    "token" : "produce|sub|sky|lines",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 158,
    "token" : "right|half",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 159,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 160, 161, 162 ]
  }, {
    "id" : 160,
    "token" : "produce|final|sky|line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "left|sub|sky|line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 162,
    "token" : "right|sub|sky|line",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "produceFinalSkyLine",
  "full_name" : "SkylineAlgorithm.LongJavaFileProject.produceFinalSkyLine",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public ArrayList<Point> produceFinalSkyLine(ArrayList<Point> left, ArrayList<Point> right) {\n\n            // dominated points of ArrayList left are removed\n            for (int i = 0; i < left.size() - 1; i++) {\n                if (left.get(i).x == left.get(i + 1).x && left.get(i).y > left.get(i + 1).y) {\n                    left.remove(i);\n                    i--;\n                }\n            }\n\n            // minimum y-value is found\n            int min = left.get(0).y;\n            for (int i = 1; i < left.size(); i++) {\n                if (min > left.get(i).y) {\n                    min = left.get(i).y;\n                    if (min == 1) {\n                        i = left.size();\n                    }\n                }\n            }\n\n            // dominated points of ArrayList right are removed\n            for (int i = 0; i < right.size(); i++) {\n                if (right.get(i).y >= min) {\n                    right.remove(i);\n                    i--;\n                }\n            }\n\n            // final skyline found and returned\n            left.addAll(right);\n            return left;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "array|listpoint",
    "type" : "ParameterizedType",
    "children" : [ 7, 8 ]
  }, {
    "id" : 3,
    "token" : "produce|final|sky|line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 17, 18 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 23, 24, 25, 26, 27, 28 ]
  }, {
    "id" : 7,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "point",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "array|listpoint",
    "type" : "ParameterizedType",
    "children" : [ 13, 14 ]
  }, {
    "id" : 12,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 14,
    "token" : "point",
    "type" : "SimpleType",
    "children" : [ 16 ]
  }, {
    "id" : 15,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "array|listpoint",
    "type" : "ParameterizedType",
    "children" : [ 19, 20 ]
  }, {
    "id" : 18,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 21 ]
  }, {
    "id" : 20,
    "token" : "point",
    "type" : "SimpleType",
    "children" : [ 22 ]
  }, {
    "id" : 21,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 29, 30, 31, 32 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 85, 86 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 94, 95, 96, 97 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 137, 138, 139, 140 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 168 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 172 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 33, 34 ]
  }, {
    "id" : 30,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 37, 38 ]
  }, {
    "id" : 31,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 43 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "Block",
    "children" : [ 44 ]
  }, {
    "id" : 33,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 39, 40 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 41, 42 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 45, 46 ]
  }, {
    "id" : 45,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 47, 48 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "Block",
    "children" : [ 77, 78 ]
  }, {
    "id" : 47,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 49, 50 ]
  }, {
    "id" : 48,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 63, 64 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 51, 52 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 56, 57 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 53, 54, 55 ]
  }, {
    "id" : 52,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 58, 59, 60 ]
  }, {
    "id" : 57,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 61, 62 ]
  }, {
    "id" : 61,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 65, 66 ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 70, 71 ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 67, 68, 69 ]
  }, {
    "id" : 66,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 72, 73, 74 ]
  }, {
    "id" : 71,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 75, 76 ]
  }, {
    "id" : 75,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 79 ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 83 ]
  }, {
    "id" : 79,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 80, 81, 82 ]
  }, {
    "id" : 80,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "remove",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "--",
    "type" : "PostfixExpression",
    "children" : [ 84 ]
  }, {
    "id" : 84,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 87, 88 ]
  }, {
    "id" : 87,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 89, 90 ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 91, 92, 93 ]
  }, {
    "id" : 90,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 98, 99 ]
  }, {
    "id" : 95,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 102, 103 ]
  }, {
    "id" : 96,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 106 ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "Block",
    "children" : [ 107 ]
  }, {
    "id" : 98,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 100, 101 ]
  }, {
    "id" : 100,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 104, 105 ]
  }, {
    "id" : 104,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 108, 109 ]
  }, {
    "id" : 108,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 110, 111 ]
  }, {
    "id" : 109,
    "token" : "",
    "type" : "Block",
    "children" : [ 117, 118 ]
  }, {
    "id" : 110,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 112, 113 ]
  }, {
    "id" : 112,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 114, 115, 116 ]
  }, {
    "id" : 113,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 119 ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 127, 128 ]
  }, {
    "id" : 119,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 120, 121 ]
  }, {
    "id" : 120,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 122, 123 ]
  }, {
    "id" : 122,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 124, 125, 126 ]
  }, {
    "id" : 123,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 129, 130 ]
  }, {
    "id" : 128,
    "token" : "",
    "type" : "Block",
    "children" : [ 131 ]
  }, {
    "id" : 129,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 132 ]
  }, {
    "id" : 132,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 133, 134 ]
  }, {
    "id" : 133,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 134,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 135, 136 ]
  }, {
    "id" : 135,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 137,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 141, 142 ]
  }, {
    "id" : 138,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 145, 146 ]
  }, {
    "id" : 139,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 149 ]
  }, {
    "id" : 140,
    "token" : "",
    "type" : "Block",
    "children" : [ 150 ]
  }, {
    "id" : 141,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 143, 144 ]
  }, {
    "id" : 143,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 144,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 146,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 147, 148 ]
  }, {
    "id" : 147,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 151, 152 ]
  }, {
    "id" : 151,
    "token" : ">=",
    "type" : "InfixExpression",
    "children" : [ 153, 154 ]
  }, {
    "id" : 152,
    "token" : "",
    "type" : "Block",
    "children" : [ 160, 161 ]
  }, {
    "id" : 153,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 155, 156 ]
  }, {
    "id" : 154,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 155,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 157, 158, 159 ]
  }, {
    "id" : 156,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 157,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 158,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 159,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 160,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 162 ]
  }, {
    "id" : 161,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 166 ]
  }, {
    "id" : 162,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 163, 164, 165 ]
  }, {
    "id" : 163,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 164,
    "token" : "remove",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 165,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 166,
    "token" : "--",
    "type" : "PostfixExpression",
    "children" : [ 167 ]
  }, {
    "id" : 167,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 168,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 169, 170, 171 ]
  }, {
    "id" : 169,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 170,
    "token" : "add|all",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 171,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 172,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "Point",
  "full_name" : "Point.SkylineAlgorithm.LongJavaFileProject.Point",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Point(int x, int y) {\n                this.x = x;\n                this.y = y;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 17 ]
  }, {
    "id" : 12,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 13, 14 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 18, 19 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 20, 21 ]
  }, {
    "id" : 19,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "getX",
  "full_name" : "Point.SkylineAlgorithm.LongJavaFileProject.getX",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n             * @return x, the x-value\n             */",
  "comment" : null,
  "body" : "public int getX() {\n                return x;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 6 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "get|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 8 ]
  }, {
    "id" : 6,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 7 ]
  }, {
    "id" : 7,
    "token" : "x|the|xvalue",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 9 ]
  }, {
    "id" : 9,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "getY",
  "full_name" : "Point.SkylineAlgorithm.LongJavaFileProject.getY",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n             * @return y, the y-value\n             */",
  "comment" : null,
  "body" : "public int getY() {\n                return y;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 6 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "get|y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 8 ]
  }, {
    "id" : 6,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 7 ]
  }, {
    "id" : 7,
    "token" : "y|the|yvalue",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 9 ]
  }, {
    "id" : 9,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "dominates",
  "full_name" : "Point.SkylineAlgorithm.LongJavaFileProject.dominates",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public boolean dominates(Point p1) {\n                // checks if p1 is dominated\n                return (this.x < p1.x && this.y <= p1.y) || (this.x <= p1.x && this.y < p1.y);\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "dominates",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9 ]
  }, {
    "id" : 6,
    "token" : "point",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 10 ]
  }, {
    "id" : 10,
    "token" : "||",
    "type" : "InfixExpression",
    "children" : [ 11, 12 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 24 ]
  }, {
    "id" : 13,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 20, 21 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "p|x",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 22, 23 ]
  }, {
    "id" : 21,
    "token" : "p|y",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 25, 26 ]
  }, {
    "id" : 25,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 27, 28 ]
  }, {
    "id" : 26,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 29, 30 ]
  }, {
    "id" : 28,
    "token" : "p|x",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 33, 34 ]
  }, {
    "id" : 32,
    "token" : "p|y",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "compare",
  "full_name" : "XComparator.SkylineAlgorithm.LongJavaFileProject.compare",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "@Override\n            public int compare(Point a, Point b) {\n                return Integer.compare(a.x, b.x);\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 8 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "compare",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 12, 13 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 15 ]
  }, {
    "id" : 8,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "point",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "point",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 16 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 17, 18, 19, 20 ]
  }, {
    "id" : 17,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "compare",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "ax",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "bx",
    "type" : "QualifiedName",
    "children" : [ ]
  } ]
}, {
  "name" : "scheduleCore",
  "full_name" : "AES.LongJavaFileProject.scheduleCore",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public BigInteger scheduleCore(BigInteger t, int rconCounter) {\n            String rBytes = t.toString(16);\n\n            // Add zero padding\n            while (rBytes.length() < 8) {\n                rBytes = \"0\" + rBytes;\n            }\n\n            // rotate the first 16 bits to the back\n            String rotatingBytes = rBytes.substring(0, 2);\n            String fixedBytes = rBytes.substring(2);\n\n            rBytes = fixedBytes + rotatingBytes;\n\n            // apply S-Box to all 8-Bit Substrings\n            for (int i = 0; i < 4; i++) {\n                String currentByteBits = rBytes.substring(i * 2, (i + 1) * 2);\n\n                int currentByte = Integer.parseInt(currentByteBits, 16);\n                currentByte = SBOX[currentByte];\n\n                // add the current RCON value to the first byte\n                if (i == 0) {\n                    currentByte = currentByte ^ RCON[rconCounter];\n                }\n\n                currentByteBits = Integer.toHexString(currentByte);\n\n                // Add zero padding\n\n                while (currentByteBits.length() < 2) {\n                    currentByteBits = '0' + currentByteBits;\n                }\n\n                // replace bytes in original string\n                rBytes = rBytes.substring(0, i * 2) + currentByteBits + rBytes.substring((i + 1) * 2);\n            }\n\n            // t = new BigInteger(rBytes, 16);\n            // return t;\n            return new BigInteger(rBytes, 16);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 3,
    "token" : "schedule|core",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 13, 14, 15, 16, 17, 18, 19 ]
  }, {
    "id" : 7,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "rcon|counter",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 28, 29 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 40, 41 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 49, 50 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 57 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 62, 63, 64, 65 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 159 ]
  }, {
    "id" : 20,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 22 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 23, 24 ]
  }, {
    "id" : 22,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "r|bytes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 25, 26, 27 ]
  }, {
    "id" : 25,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 30, 31 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "Block",
    "children" : [ 34 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 32, 33 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "r|bytes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 35 ]
  }, {
    "id" : 35,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "r|bytes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 38, 39 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "r|bytes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 42 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 43, 44 ]
  }, {
    "id" : 42,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "rotating|bytes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 45, 46, 47, 48 ]
  }, {
    "id" : 45,
    "token" : "r|bytes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "substring",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 51 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 52, 53 ]
  }, {
    "id" : 51,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "fixed|bytes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 54, 55, 56 ]
  }, {
    "id" : 54,
    "token" : "r|bytes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "substring",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 58, 59 ]
  }, {
    "id" : 58,
    "token" : "r|bytes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 60, 61 ]
  }, {
    "id" : 60,
    "token" : "fixed|bytes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "rotating|bytes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 66, 67 ]
  }, {
    "id" : 63,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 70, 71 ]
  }, {
    "id" : 64,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 72 ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "Block",
    "children" : [ 73, 74, 75, 76, 77, 78, 79 ]
  }, {
    "id" : 66,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 68, 69 ]
  }, {
    "id" : 68,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 80, 81 ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 96, 97 ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 104 ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 109, 110 ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 121 ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 127, 128 ]
  }, {
    "id" : 79,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 139 ]
  }, {
    "id" : 80,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 82 ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 83, 84 ]
  }, {
    "id" : 82,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "current|byte|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 85, 86, 87, 88 ]
  }, {
    "id" : 85,
    "token" : "r|bytes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "substring",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 89, 90 ]
  }, {
    "id" : 88,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 91, 92 ]
  }, {
    "id" : 89,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 93 ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 94, 95 ]
  }, {
    "id" : 94,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 98, 99 ]
  }, {
    "id" : 98,
    "token" : "current|byte",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 100, 101, 102, 103 ]
  }, {
    "id" : 100,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "parse|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "current|byte|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 105, 106 ]
  }, {
    "id" : 105,
    "token" : "current|byte",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 107, 108 ]
  }, {
    "id" : 107,
    "token" : "sbox",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "current|byte",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 111, 112 ]
  }, {
    "id" : 110,
    "token" : "",
    "type" : "Block",
    "children" : [ 113 ]
  }, {
    "id" : 111,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 114 ]
  }, {
    "id" : 114,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 115, 116 ]
  }, {
    "id" : 115,
    "token" : "current|byte",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "^",
    "type" : "InfixExpression",
    "children" : [ 117, 118 ]
  }, {
    "id" : 117,
    "token" : "current|byte",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 119, 120 ]
  }, {
    "id" : 119,
    "token" : "rcon",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "rcon|counter",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 122, 123 ]
  }, {
    "id" : 122,
    "token" : "current|byte|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 124, 125, 126 ]
  }, {
    "id" : 124,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "to|hex|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "current|byte",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 129, 130 ]
  }, {
    "id" : 128,
    "token" : "",
    "type" : "Block",
    "children" : [ 133 ]
  }, {
    "id" : 129,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 131, 132 ]
  }, {
    "id" : 130,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "current|byte|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 132,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 134 ]
  }, {
    "id" : 134,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 135, 136 ]
  }, {
    "id" : 135,
    "token" : "current|byte|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 137, 138 ]
  }, {
    "id" : 137,
    "token" : "",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 138,
    "token" : "current|byte|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 139,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 140, 141 ]
  }, {
    "id" : 140,
    "token" : "r|bytes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 141,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 142, 143, 144 ]
  }, {
    "id" : 142,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 145, 146, 147, 148 ]
  }, {
    "id" : 143,
    "token" : "current|byte|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 144,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 151, 152, 153 ]
  }, {
    "id" : 145,
    "token" : "r|bytes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 146,
    "token" : "substring",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 149, 150 ]
  }, {
    "id" : 149,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 151,
    "token" : "r|bytes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 152,
    "token" : "substring",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 153,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 154, 155 ]
  }, {
    "id" : 154,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 156 ]
  }, {
    "id" : 155,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 157, 158 ]
  }, {
    "id" : 157,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 158,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 159,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 160, 161, 162 ]
  }, {
    "id" : 160,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 163 ]
  }, {
    "id" : 161,
    "token" : "r|bytes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 162,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 163,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "keyExpansion",
  "full_name" : "AES.LongJavaFileProject.keyExpansion",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public BigInteger[] keyExpansion(BigInteger initialKey) {\n            BigInteger[] roundKeys = { initialKey, new BigInteger(\"0\"), new BigInteger(\"0\"), new BigInteger(\"0\"),\n                    new BigInteger(\"0\"), new BigInteger(\"0\"), new BigInteger(\"0\"), new BigInteger(\"0\"), new BigInteger(\"0\"),\n                    new BigInteger(\"0\"), new BigInteger(\"0\"), };\n\n            // initialize rcon iteration\n            int rconCounter = 1;\n\n            for (int i = 1; i < 11; i++) {\n\n                // get the previous 32 bits the key\n                BigInteger t = roundKeys[i - 1].remainder(new BigInteger(\"100000000\", 16));\n\n                // split previous key into 8-bit segments\n                BigInteger[] prevKey = { roundKeys[i - 1].remainder(new BigInteger(\"100000000\", 16)),\n                        roundKeys[i - 1].remainder(new BigInteger(\"10000000000000000\", 16))\n                                .divide(new BigInteger(\"100000000\", 16)),\n                        roundKeys[i - 1].remainder(new BigInteger(\"1000000000000000000000000\", 16))\n                                .divide(new BigInteger(\"10000000000000000\", 16)),\n                        roundKeys[i - 1].divide(new BigInteger(\"1000000000000000000000000\", 16)), };\n\n                // run schedule core\n                t = scheduleCore(t, rconCounter);\n                rconCounter += 1;\n\n                // Calculate partial round key\n                BigInteger t0 = t.xor(prevKey[3]);\n                BigInteger t1 = t0.xor(prevKey[2]);\n                BigInteger t2 = t1.xor(prevKey[1]);\n                BigInteger t3 = t2.xor(prevKey[0]);\n\n                // Join round key segments\n                t2 = t2.multiply(new BigInteger(\"100000000\", 16));\n                t1 = t1.multiply(new BigInteger(\"10000000000000000\", 16));\n                t0 = t0.multiply(new BigInteger(\"1000000000000000000000000\", 16));\n                roundKeys[i] = t0.add(t1).add(t2).add(t3);\n\n            }\n            return roundKeys;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "big|integer",
    "type" : "ArrayType",
    "children" : [ 6, 7 ]
  }, {
    "id" : 3,
    "token" : "key|expansion",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 12, 13, 14, 15 ]
  }, {
    "id" : 6,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "initial|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 64, 65 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 68, 69, 70, 71 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 269 ]
  }, {
    "id" : 16,
    "token" : "big|integer",
    "type" : "ArrayType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 21, 22 ]
  }, {
    "id" : 18,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "round|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 ]
  }, {
    "id" : 23,
    "token" : "initial|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 34, 35 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 37, 38 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 40, 41 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 43, 44 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 46, 47 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 49, 50 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 52, 53 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 55, 56 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 58, 59 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 61, 62 ]
  }, {
    "id" : 34,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 36 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 39 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 42 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 45 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 48 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 51 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 54 ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 57 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 60 ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 63 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 66, 67 ]
  }, {
    "id" : 66,
    "token" : "rcon|counter",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 72, 73 ]
  }, {
    "id" : 69,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 76, 77 ]
  }, {
    "id" : 70,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 78 ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "Block",
    "children" : [ 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90 ]
  }, {
    "id" : 72,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 74, 75 ]
  }, {
    "id" : 74,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 91, 92 ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 107, 108 ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 176 ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 182 ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 185, 186 ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 195, 196 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 205, 206 ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 215, 216 ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 225 ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 235 ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 245 ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 255 ]
  }, {
    "id" : 91,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 93 ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 94, 95 ]
  }, {
    "id" : 93,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 96, 97, 98 ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 99, 100 ]
  }, {
    "id" : 97,
    "token" : "remainder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 103, 104, 105 ]
  }, {
    "id" : 99,
    "token" : "round|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 101, 102 ]
  }, {
    "id" : 101,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 106 ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "big|integer",
    "type" : "ArrayType",
    "children" : [ 109, 110 ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 112, 113 ]
  }, {
    "id" : 109,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 111 ]
  }, {
    "id" : 110,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "prev|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 114, 115, 116, 117 ]
  }, {
    "id" : 114,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 118, 119, 120 ]
  }, {
    "id" : 115,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 129, 130, 131 ]
  }, {
    "id" : 116,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 147, 148, 149 ]
  }, {
    "id" : 117,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 165, 166, 167 ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 121, 122 ]
  }, {
    "id" : 119,
    "token" : "remainder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 125, 126, 127 ]
  }, {
    "id" : 121,
    "token" : "round|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 123, 124 ]
  }, {
    "id" : 123,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 128 ]
  }, {
    "id" : 126,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 132, 133, 134 ]
  }, {
    "id" : 130,
    "token" : "divide",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 143, 144, 145 ]
  }, {
    "id" : 132,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 135, 136 ]
  }, {
    "id" : 133,
    "token" : "remainder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 134,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 139, 140, 141 ]
  }, {
    "id" : 135,
    "token" : "round|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 137, 138 ]
  }, {
    "id" : 137,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 138,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 139,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 142 ]
  }, {
    "id" : 140,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 141,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 143,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 146 ]
  }, {
    "id" : 144,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 146,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 150, 151, 152 ]
  }, {
    "id" : 148,
    "token" : "divide",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 161, 162, 163 ]
  }, {
    "id" : 150,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 153, 154 ]
  }, {
    "id" : 151,
    "token" : "remainder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 152,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 157, 158, 159 ]
  }, {
    "id" : 153,
    "token" : "round|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 154,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 155, 156 ]
  }, {
    "id" : 155,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 157,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 160 ]
  }, {
    "id" : 158,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 159,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 160,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 164 ]
  }, {
    "id" : 162,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 163,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 164,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 165,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 168, 169 ]
  }, {
    "id" : 166,
    "token" : "divide",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 167,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 172, 173, 174 ]
  }, {
    "id" : 168,
    "token" : "round|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 169,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 170, 171 ]
  }, {
    "id" : 170,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 171,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 172,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 175 ]
  }, {
    "id" : 173,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 174,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 175,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 176,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 177, 178 ]
  }, {
    "id" : 177,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 178,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 179, 180, 181 ]
  }, {
    "id" : 179,
    "token" : "schedule|core",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 180,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 181,
    "token" : "rcon|counter",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 182,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 183, 184 ]
  }, {
    "id" : 183,
    "token" : "rcon|counter",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 184,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 185,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 187 ]
  }, {
    "id" : 186,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 188, 189 ]
  }, {
    "id" : 187,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 188,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 189,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 190, 191, 192 ]
  }, {
    "id" : 190,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 191,
    "token" : "xor",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 192,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 193, 194 ]
  }, {
    "id" : 193,
    "token" : "prev|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 194,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 195,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 197 ]
  }, {
    "id" : 196,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 198, 199 ]
  }, {
    "id" : 197,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 198,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 199,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 200, 201, 202 ]
  }, {
    "id" : 200,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 201,
    "token" : "xor",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 202,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 203, 204 ]
  }, {
    "id" : 203,
    "token" : "prev|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 204,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 205,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 207 ]
  }, {
    "id" : 206,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 208, 209 ]
  }, {
    "id" : 207,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 208,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 209,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 210, 211, 212 ]
  }, {
    "id" : 210,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 211,
    "token" : "xor",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 212,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 213, 214 ]
  }, {
    "id" : 213,
    "token" : "prev|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 214,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 215,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 217 ]
  }, {
    "id" : 216,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 218, 219 ]
  }, {
    "id" : 217,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 218,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 219,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 220, 221, 222 ]
  }, {
    "id" : 220,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 221,
    "token" : "xor",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 222,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 223, 224 ]
  }, {
    "id" : 223,
    "token" : "prev|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 224,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 225,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 226, 227 ]
  }, {
    "id" : 226,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 227,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 228, 229, 230 ]
  }, {
    "id" : 228,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 229,
    "token" : "multiply",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 230,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 231, 232, 233 ]
  }, {
    "id" : 231,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 234 ]
  }, {
    "id" : 232,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 233,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 234,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 235,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 236, 237 ]
  }, {
    "id" : 236,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 237,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 238, 239, 240 ]
  }, {
    "id" : 238,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 239,
    "token" : "multiply",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 240,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 241, 242, 243 ]
  }, {
    "id" : 241,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 244 ]
  }, {
    "id" : 242,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 243,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 244,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 245,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 246, 247 ]
  }, {
    "id" : 246,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 247,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 248, 249, 250 ]
  }, {
    "id" : 248,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 249,
    "token" : "multiply",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 250,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 251, 252, 253 ]
  }, {
    "id" : 251,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 254 ]
  }, {
    "id" : 252,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 253,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 254,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 255,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 256, 257 ]
  }, {
    "id" : 256,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 258, 259 ]
  }, {
    "id" : 257,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 260, 261, 262 ]
  }, {
    "id" : 258,
    "token" : "round|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 259,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 260,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 263, 264, 265 ]
  }, {
    "id" : 261,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 262,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 263,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 266, 267, 268 ]
  }, {
    "id" : 264,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 265,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 266,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 267,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 268,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 269,
    "token" : "round|keys",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "splitBlockIntoCells",
  "full_name" : "AES.LongJavaFileProject.splitBlockIntoCells",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int[] splitBlockIntoCells(BigInteger block) {\n\n            int[] cells = new int[16];\n            String blockBits = block.toString(2);\n\n            // Append leading 0 for full \"128-bit\" string\n            while (blockBits.length() < 128) {\n                blockBits = '0' + blockBits;\n            }\n\n            // split 128 to 8 bit cells\n            for (int i = 0; i < cells.length; i++) {\n                String cellBits = blockBits.substring(8 * i, 8 * (i + 1));\n                cells[i] = Integer.parseInt(cellBits, 2);\n            }\n\n            return cells;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 6, 7 ]
  }, {
    "id" : 3,
    "token" : "split|block|into|cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13, 14, 15 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "block",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 26, 27 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 34, 35 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 46, 47, 48, 49 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 84 ]
  }, {
    "id" : 16,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 20, 21 ]
  }, {
    "id" : 18,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 24, 25 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 28 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 29, 30 ]
  }, {
    "id" : 28,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "block|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 31, 32, 33 ]
  }, {
    "id" : 31,
    "token" : "block",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 36, 37 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "Block",
    "children" : [ 40 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "block|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 41 ]
  }, {
    "id" : 41,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "block|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 44, 45 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "block|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 50, 51 ]
  }, {
    "id" : 47,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 54, 55 ]
  }, {
    "id" : 48,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 56 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "Block",
    "children" : [ 57, 58 ]
  }, {
    "id" : 50,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 52, 53 ]
  }, {
    "id" : 52,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "cellslength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 59, 60 ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 75 ]
  }, {
    "id" : 59,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 61 ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 62, 63 ]
  }, {
    "id" : 61,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "cell|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 64, 65, 66, 67 ]
  }, {
    "id" : 64,
    "token" : "block|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "substring",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 68, 69 ]
  }, {
    "id" : 67,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 70, 71 ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 72 ]
  }, {
    "id" : 72,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 73, 74 ]
  }, {
    "id" : 73,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 76, 77 ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 78, 79 ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 80, 81, 82, 83 ]
  }, {
    "id" : 78,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "parse|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "cell|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "mergeCellsIntoBlock",
  "full_name" : "AES.LongJavaFileProject.mergeCellsIntoBlock",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public BigInteger mergeCellsIntoBlock(int[] cells) {\n\n            String blockBits = \"\";\n            for (int i = 0; i < 16; i++) {\n                String cellBits = Integer.toBinaryString(cells[i]);\n\n                // Append leading 0 for full \"8-bit\" strings\n                while (cellBits.length() < 8) {\n                    cellBits = '0' + cellBits;\n                }\n\n                blockBits += cellBits;\n            }\n\n            return new BigInteger(blockBits, 2);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 3,
    "token" : "merge|cells|into|block",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13 ]
  }, {
    "id" : 6,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 19, 20, 21, 22 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 58 ]
  }, {
    "id" : 14,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 16 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 17, 18 ]
  }, {
    "id" : 16,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "block|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 20,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 27, 28 ]
  }, {
    "id" : 21,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 29 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "Block",
    "children" : [ 30, 31, 32 ]
  }, {
    "id" : 23,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 25, 26 ]
  }, {
    "id" : 25,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 33, 34 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 43, 44 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 55 ]
  }, {
    "id" : 33,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 35 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 35,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "cell|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39, 40 ]
  }, {
    "id" : 38,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "to|binary|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 41, 42 ]
  }, {
    "id" : 41,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 45, 46 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "Block",
    "children" : [ 49 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 47, 48 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "cell|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 50 ]
  }, {
    "id" : 50,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 51, 52 ]
  }, {
    "id" : 51,
    "token" : "cell|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 53, 54 ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "cell|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 56, 57 ]
  }, {
    "id" : 56,
    "token" : "block|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "cell|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 59, 60, 61 ]
  }, {
    "id" : 59,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 62 ]
  }, {
    "id" : 60,
    "token" : "block|bits",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "addRoundKey",
  "full_name" : "AES.LongJavaFileProject.addRoundKey",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public BigInteger addRoundKey(BigInteger ciphertext, BigInteger key) {\n            return ciphertext.xor(key);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 3,
    "token" : "add|round|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 14 ]
  }, {
    "id" : 7,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "ciphertext",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 15 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 16, 17, 18 ]
  }, {
    "id" : 16,
    "token" : "ciphertext",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "xor",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "subBytes",
  "full_name" : "AES.LongJavaFileProject.subBytes",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public BigInteger subBytes(BigInteger ciphertext) {\n\n            int[] cells = splitBlockIntoCells(ciphertext);\n\n            for (int i = 0; i < 16; i++) {\n                cells[i] = SBOX[cells[i]];\n            }\n\n            return mergeCellsIntoBlock(cells);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 3,
    "token" : "sub|bytes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10, 11, 12 ]
  }, {
    "id" : 6,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "ciphertext",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 13, 14 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 21, 22, 23, 24 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 42 ]
  }, {
    "id" : 13,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 17, 18 ]
  }, {
    "id" : 15,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "split|block|into|cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "ciphertext",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 25, 26 ]
  }, {
    "id" : 22,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 29, 30 ]
  }, {
    "id" : 23,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 31 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "Block",
    "children" : [ 32 ]
  }, {
    "id" : 25,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 33 ]
  }, {
    "id" : 33,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 36, 37 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 38, 39 ]
  }, {
    "id" : 36,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "sbox",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "merge|cells|into|block",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "subBytesDec",
  "full_name" : "AES.LongJavaFileProject.subBytesDec",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public BigInteger subBytesDec(BigInteger ciphertext) {\n\n            int[] cells = splitBlockIntoCells(ciphertext);\n\n            for (int i = 0; i < 16; i++) {\n                cells[i] = INVERSE_SBOX[cells[i]];\n            }\n\n            return mergeCellsIntoBlock(cells);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 3,
    "token" : "sub|bytes|dec",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10, 11, 12 ]
  }, {
    "id" : 6,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "ciphertext",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 13, 14 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 21, 22, 23, 24 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 42 ]
  }, {
    "id" : 13,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 17, 18 ]
  }, {
    "id" : 15,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "split|block|into|cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "ciphertext",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 25, 26 ]
  }, {
    "id" : 22,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 29, 30 ]
  }, {
    "id" : 23,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 31 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "Block",
    "children" : [ 32 ]
  }, {
    "id" : 25,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 33 ]
  }, {
    "id" : 33,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 36, 37 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 38, 39 ]
  }, {
    "id" : 36,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "inverse|sbox",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "merge|cells|into|block",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "shiftRows",
  "full_name" : "AES.LongJavaFileProject.shiftRows",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public BigInteger shiftRows(BigInteger ciphertext) {\n            int[] cells = splitBlockIntoCells(ciphertext);\n            int[] output = new int[16];\n\n            // do nothing in the first row\n            output[0] = cells[0];\n            output[4] = cells[4];\n            output[8] = cells[8];\n            output[12] = cells[12];\n\n            // shift the second row backwards by one cell\n            output[1] = cells[5];\n            output[5] = cells[9];\n            output[9] = cells[13];\n            output[13] = cells[1];\n\n            // shift the third row backwards by two cell\n            output[2] = cells[10];\n            output[6] = cells[14];\n            output[10] = cells[2];\n            output[14] = cells[6];\n\n            // shift the forth row backwards by tree cell\n            output[3] = cells[15];\n            output[7] = cells[3];\n            output[11] = cells[7];\n            output[15] = cells[11];\n\n            return mergeCellsIntoBlock(output);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 3,
    "token" : "shift|rows",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 ]
  }, {
    "id" : 6,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "ciphertext",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 29, 30 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 37, 38 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 47 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 54 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 61 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 68 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 75 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 82 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 89 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 96 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 103 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 110 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 117 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 124 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 131 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 138 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 145 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 152 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 159 ]
  }, {
    "id" : 29,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 31, 32 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 31,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "split|block|into|cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "ciphertext",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 39, 40 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 41, 42 ]
  }, {
    "id" : 39,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 45, 46 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 48, 49 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 50, 51 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 52, 53 ]
  }, {
    "id" : 50,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 55, 56 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 57, 58 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 59, 60 ]
  }, {
    "id" : 57,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 62, 63 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 64, 65 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 66, 67 ]
  }, {
    "id" : 64,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 69, 70 ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 71, 72 ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 73, 74 ]
  }, {
    "id" : 71,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 76, 77 ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 78, 79 ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 80, 81 ]
  }, {
    "id" : 78,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 83, 84 ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 85, 86 ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 87, 88 ]
  }, {
    "id" : 85,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 90, 91 ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 92, 93 ]
  }, {
    "id" : 91,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 94, 95 ]
  }, {
    "id" : 92,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 97, 98 ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 99, 100 ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 101, 102 ]
  }, {
    "id" : 99,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 104, 105 ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 106, 107 ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 108, 109 ]
  }, {
    "id" : 106,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 111, 112 ]
  }, {
    "id" : 111,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 113, 114 ]
  }, {
    "id" : 112,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 115, 116 ]
  }, {
    "id" : 113,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 118, 119 ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 120, 121 ]
  }, {
    "id" : 119,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 122, 123 ]
  }, {
    "id" : 120,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 125, 126 ]
  }, {
    "id" : 125,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 127, 128 ]
  }, {
    "id" : 126,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 129, 130 ]
  }, {
    "id" : 127,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 132, 133 ]
  }, {
    "id" : 132,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 134, 135 ]
  }, {
    "id" : 133,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 136, 137 ]
  }, {
    "id" : 134,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 135,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 137,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 138,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 139, 140 ]
  }, {
    "id" : 139,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 141, 142 ]
  }, {
    "id" : 140,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 143, 144 ]
  }, {
    "id" : 141,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 143,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 144,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 146, 147 ]
  }, {
    "id" : 146,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 148, 149 ]
  }, {
    "id" : 147,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 150, 151 ]
  }, {
    "id" : 148,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 151,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 152,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 153, 154 ]
  }, {
    "id" : 153,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 155, 156 ]
  }, {
    "id" : 154,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 157, 158 ]
  }, {
    "id" : 155,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 157,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 158,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 159,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 160, 161 ]
  }, {
    "id" : 160,
    "token" : "merge|cells|into|block",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "shiftRowsDec",
  "full_name" : "AES.LongJavaFileProject.shiftRowsDec",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public BigInteger shiftRowsDec(BigInteger ciphertext) {\n            int[] cells = splitBlockIntoCells(ciphertext);\n            int[] output = new int[16];\n\n            // do nothing in the first row\n            output[0] = cells[0];\n            output[4] = cells[4];\n            output[8] = cells[8];\n            output[12] = cells[12];\n\n            // shift the second row forwards by one cell\n            output[1] = cells[13];\n            output[5] = cells[1];\n            output[9] = cells[5];\n            output[13] = cells[9];\n\n            // shift the third row forwards by two cell\n            output[2] = cells[10];\n            output[6] = cells[14];\n            output[10] = cells[2];\n            output[14] = cells[6];\n\n            // shift the forth row forwards by tree cell\n            output[3] = cells[7];\n            output[7] = cells[11];\n            output[11] = cells[15];\n            output[15] = cells[3];\n\n            return mergeCellsIntoBlock(output);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 3,
    "token" : "shift|rows|dec",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 ]
  }, {
    "id" : 6,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "ciphertext",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 29, 30 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 37, 38 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 47 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 54 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 61 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 68 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 75 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 82 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 89 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 96 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 103 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 110 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 117 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 124 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 131 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 138 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 145 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 152 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 159 ]
  }, {
    "id" : 29,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 31, 32 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 31,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "split|block|into|cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "ciphertext",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 39, 40 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 41, 42 ]
  }, {
    "id" : 39,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 45, 46 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 48, 49 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 50, 51 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 52, 53 ]
  }, {
    "id" : 50,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 55, 56 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 57, 58 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 59, 60 ]
  }, {
    "id" : 57,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 62, 63 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 64, 65 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 66, 67 ]
  }, {
    "id" : 64,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 69, 70 ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 71, 72 ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 73, 74 ]
  }, {
    "id" : 71,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 76, 77 ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 78, 79 ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 80, 81 ]
  }, {
    "id" : 78,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 83, 84 ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 85, 86 ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 87, 88 ]
  }, {
    "id" : 85,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 90, 91 ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 92, 93 ]
  }, {
    "id" : 91,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 94, 95 ]
  }, {
    "id" : 92,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 97, 98 ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 99, 100 ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 101, 102 ]
  }, {
    "id" : 99,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 104, 105 ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 106, 107 ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 108, 109 ]
  }, {
    "id" : 106,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 111, 112 ]
  }, {
    "id" : 111,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 113, 114 ]
  }, {
    "id" : 112,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 115, 116 ]
  }, {
    "id" : 113,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 118, 119 ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 120, 121 ]
  }, {
    "id" : 119,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 122, 123 ]
  }, {
    "id" : 120,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 125, 126 ]
  }, {
    "id" : 125,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 127, 128 ]
  }, {
    "id" : 126,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 129, 130 ]
  }, {
    "id" : 127,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 132, 133 ]
  }, {
    "id" : 132,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 134, 135 ]
  }, {
    "id" : 133,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 136, 137 ]
  }, {
    "id" : 134,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 135,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 137,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 138,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 139, 140 ]
  }, {
    "id" : 139,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 141, 142 ]
  }, {
    "id" : 140,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 143, 144 ]
  }, {
    "id" : 141,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 143,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 144,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 146, 147 ]
  }, {
    "id" : 146,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 148, 149 ]
  }, {
    "id" : 147,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 150, 151 ]
  }, {
    "id" : 148,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 151,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 152,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 153, 154 ]
  }, {
    "id" : 153,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 155, 156 ]
  }, {
    "id" : 154,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 157, 158 ]
  }, {
    "id" : 155,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 157,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 158,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 159,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 160, 161 ]
  }, {
    "id" : 160,
    "token" : "merge|cells|into|block",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "output",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "mixColumns",
  "full_name" : "AES.LongJavaFileProject.mixColumns",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public BigInteger mixColumns(BigInteger ciphertext) {\n\n            int[] cells = splitBlockIntoCells(ciphertext);\n            int[] outputCells = new int[16];\n\n            for (int i = 0; i < 4; i++) {\n                int[] row = { cells[i * 4], cells[i * 4 + 1], cells[i * 4 + 2], cells[i * 4 + 3] };\n\n                outputCells[i * 4] = MULT2[row[0]] ^ MULT3[row[1]] ^ row[2] ^ row[3];\n                outputCells[i * 4 + 1] = row[0] ^ MULT2[row[1]] ^ MULT3[row[2]] ^ row[3];\n                outputCells[i * 4 + 2] = row[0] ^ row[1] ^ MULT2[row[2]] ^ MULT3[row[3]];\n                outputCells[i * 4 + 3] = MULT3[row[0]] ^ row[1] ^ row[2] ^ MULT2[row[3]];\n            }\n            return mergeCellsIntoBlock(outputCells);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 3,
    "token" : "mix|columns",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10, 11, 12, 13 ]
  }, {
    "id" : 6,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "ciphertext",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 32, 33, 34, 35 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 178 ]
  }, {
    "id" : 14,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 18, 19 ]
  }, {
    "id" : 16,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "split|block|into|cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "ciphertext",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 24, 25 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 24,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "output|cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 30, 31 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 36, 37 ]
  }, {
    "id" : 33,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 40, 41 ]
  }, {
    "id" : 34,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 42 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "Block",
    "children" : [ 43, 44, 45, 46, 47 ]
  }, {
    "id" : 36,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 38, 39 ]
  }, {
    "id" : 38,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 48, 49 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 80 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 103 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 128 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 153 ]
  }, {
    "id" : 48,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 50, 51 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 52, 53 ]
  }, {
    "id" : 50,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 54, 55, 56, 57 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 58, 59 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 62, 63 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 68, 69 ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 74, 75 ]
  }, {
    "id" : 58,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 60, 61 ]
  }, {
    "id" : 60,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 64, 65 ]
  }, {
    "id" : 64,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 66, 67 ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 70, 71 ]
  }, {
    "id" : 70,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 72, 73 ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 76, 77 ]
  }, {
    "id" : 76,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 78, 79 ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 81, 82 ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 83, 84 ]
  }, {
    "id" : 82,
    "token" : "^",
    "type" : "InfixExpression",
    "children" : [ 87, 88, 89, 90 ]
  }, {
    "id" : 83,
    "token" : "output|cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 85, 86 ]
  }, {
    "id" : 85,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 91, 92 ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 95, 96 ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 99, 100 ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 101, 102 ]
  }, {
    "id" : 91,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 93, 94 ]
  }, {
    "id" : 93,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 97, 98 ]
  }, {
    "id" : 97,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 104, 105 ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 106, 107 ]
  }, {
    "id" : 105,
    "token" : "^",
    "type" : "InfixExpression",
    "children" : [ 112, 113, 114, 115 ]
  }, {
    "id" : 106,
    "token" : "output|cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 108, 109 ]
  }, {
    "id" : 108,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 110, 111 ]
  }, {
    "id" : 109,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 116, 117 ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 118, 119 ]
  }, {
    "id" : 114,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 122, 123 ]
  }, {
    "id" : 115,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 126, 127 ]
  }, {
    "id" : 116,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 120, 121 ]
  }, {
    "id" : 120,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 124, 125 ]
  }, {
    "id" : 124,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 129, 130 ]
  }, {
    "id" : 129,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 131, 132 ]
  }, {
    "id" : 130,
    "token" : "^",
    "type" : "InfixExpression",
    "children" : [ 137, 138, 139, 140 ]
  }, {
    "id" : 131,
    "token" : "output|cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 132,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 133, 134 ]
  }, {
    "id" : 133,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 135, 136 ]
  }, {
    "id" : 134,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 135,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 137,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 141, 142 ]
  }, {
    "id" : 138,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 143, 144 ]
  }, {
    "id" : 139,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 145, 146 ]
  }, {
    "id" : 140,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 149, 150 ]
  }, {
    "id" : 141,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 143,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 144,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 146,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 147, 148 ]
  }, {
    "id" : 147,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 151, 152 ]
  }, {
    "id" : 151,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 152,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 153,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 154, 155 ]
  }, {
    "id" : 154,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 156, 157 ]
  }, {
    "id" : 155,
    "token" : "^",
    "type" : "InfixExpression",
    "children" : [ 162, 163, 164, 165 ]
  }, {
    "id" : 156,
    "token" : "output|cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 157,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 158, 159 ]
  }, {
    "id" : 158,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 160, 161 ]
  }, {
    "id" : 159,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 160,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 162,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 166, 167 ]
  }, {
    "id" : 163,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 170, 171 ]
  }, {
    "id" : 164,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 172, 173 ]
  }, {
    "id" : 165,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 174, 175 ]
  }, {
    "id" : 166,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 167,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 168, 169 ]
  }, {
    "id" : 168,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 169,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 170,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 171,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 172,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 173,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 174,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 175,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 176, 177 ]
  }, {
    "id" : 176,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 177,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 178,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 179, 180 ]
  }, {
    "id" : 179,
    "token" : "merge|cells|into|block",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 180,
    "token" : "output|cells",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "mixColumnsDec",
  "full_name" : "AES.LongJavaFileProject.mixColumnsDec",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public BigInteger mixColumnsDec(BigInteger ciphertext) {\n\n            int[] cells = splitBlockIntoCells(ciphertext);\n            int[] outputCells = new int[16];\n\n            for (int i = 0; i < 4; i++) {\n                int[] row = { cells[i * 4], cells[i * 4 + 1], cells[i * 4 + 2], cells[i * 4 + 3] };\n\n                outputCells[i * 4] = MULT14[row[0]] ^ MULT11[row[1]] ^ MULT13[row[2]] ^ MULT9[row[3]];\n                outputCells[i * 4 + 1] = MULT9[row[0]] ^ MULT14[row[1]] ^ MULT11[row[2]] ^ MULT13[row[3]];\n                outputCells[i * 4 + 2] = MULT13[row[0]] ^ MULT9[row[1]] ^ MULT14[row[2]] ^ MULT11[row[3]];\n                outputCells[i * 4 + 3] = MULT11[row[0]] ^ MULT13[row[1]] ^ MULT9[row[2]] ^ MULT14[row[3]];\n            }\n            return mergeCellsIntoBlock(outputCells);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 3,
    "token" : "mix|columns|dec",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10, 11, 12, 13 ]
  }, {
    "id" : 6,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "ciphertext",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 32, 33, 34, 35 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 194 ]
  }, {
    "id" : 14,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 18, 19 ]
  }, {
    "id" : 16,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "split|block|into|cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "ciphertext",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 24, 25 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 24,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "output|cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 30, 31 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 36, 37 ]
  }, {
    "id" : 33,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 40, 41 ]
  }, {
    "id" : 34,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 42 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "Block",
    "children" : [ 43, 44, 45, 46, 47 ]
  }, {
    "id" : 36,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 38, 39 ]
  }, {
    "id" : 38,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 48, 49 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 80 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 107 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 136 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 165 ]
  }, {
    "id" : 48,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 50, 51 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 52, 53 ]
  }, {
    "id" : 50,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 54, 55, 56, 57 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 58, 59 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 62, 63 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 68, 69 ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 74, 75 ]
  }, {
    "id" : 58,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 60, 61 ]
  }, {
    "id" : 60,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 64, 65 ]
  }, {
    "id" : 64,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 66, 67 ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 70, 71 ]
  }, {
    "id" : 70,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 72, 73 ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 76, 77 ]
  }, {
    "id" : 76,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 78, 79 ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 81, 82 ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 83, 84 ]
  }, {
    "id" : 82,
    "token" : "^",
    "type" : "InfixExpression",
    "children" : [ 87, 88, 89, 90 ]
  }, {
    "id" : 83,
    "token" : "output|cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 85, 86 ]
  }, {
    "id" : 85,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 91, 92 ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 95, 96 ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 99, 100 ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 103, 104 ]
  }, {
    "id" : 91,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 93, 94 ]
  }, {
    "id" : 93,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 97, 98 ]
  }, {
    "id" : 97,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 101, 102 ]
  }, {
    "id" : 101,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 105, 106 ]
  }, {
    "id" : 105,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 108, 109 ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 110, 111 ]
  }, {
    "id" : 109,
    "token" : "^",
    "type" : "InfixExpression",
    "children" : [ 116, 117, 118, 119 ]
  }, {
    "id" : 110,
    "token" : "output|cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 112, 113 ]
  }, {
    "id" : 112,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 114, 115 ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 120, 121 ]
  }, {
    "id" : 117,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 124, 125 ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 128, 129 ]
  }, {
    "id" : 119,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 132, 133 ]
  }, {
    "id" : 120,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 122, 123 ]
  }, {
    "id" : 122,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 126, 127 ]
  }, {
    "id" : 126,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 130, 131 ]
  }, {
    "id" : 130,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 132,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 134, 135 ]
  }, {
    "id" : 134,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 135,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 137, 138 ]
  }, {
    "id" : 137,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 139, 140 ]
  }, {
    "id" : 138,
    "token" : "^",
    "type" : "InfixExpression",
    "children" : [ 145, 146, 147, 148 ]
  }, {
    "id" : 139,
    "token" : "output|cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 140,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 141, 142 ]
  }, {
    "id" : 141,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 143, 144 ]
  }, {
    "id" : 142,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 143,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 144,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 149, 150 ]
  }, {
    "id" : 146,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 153, 154 ]
  }, {
    "id" : 147,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 157, 158 ]
  }, {
    "id" : 148,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 161, 162 ]
  }, {
    "id" : 149,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 151, 152 ]
  }, {
    "id" : 151,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 152,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 153,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 154,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 155, 156 ]
  }, {
    "id" : 155,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 157,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 158,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 159, 160 ]
  }, {
    "id" : 159,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 160,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 162,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 163, 164 ]
  }, {
    "id" : 163,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 164,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 165,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 166, 167 ]
  }, {
    "id" : 166,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 168, 169 ]
  }, {
    "id" : 167,
    "token" : "^",
    "type" : "InfixExpression",
    "children" : [ 174, 175, 176, 177 ]
  }, {
    "id" : 168,
    "token" : "output|cells",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 169,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 170, 171 ]
  }, {
    "id" : 170,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 172, 173 ]
  }, {
    "id" : 171,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 172,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 173,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 174,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 178, 179 ]
  }, {
    "id" : 175,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 182, 183 ]
  }, {
    "id" : 176,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 186, 187 ]
  }, {
    "id" : 177,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 190, 191 ]
  }, {
    "id" : 178,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 179,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 180, 181 ]
  }, {
    "id" : 180,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 181,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 182,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 183,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 184, 185 ]
  }, {
    "id" : 184,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 185,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 186,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 187,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 188, 189 ]
  }, {
    "id" : 188,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 189,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 190,
    "token" : "mult",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 191,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 192, 193 ]
  }, {
    "id" : 192,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 193,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 194,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 195, 196 ]
  }, {
    "id" : 195,
    "token" : "merge|cells|into|block",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 196,
    "token" : "output|cells",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "encrypt",
  "full_name" : "AES.LongJavaFileProject.encrypt",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public BigInteger encrypt(BigInteger plainText, BigInteger key) {\n            BigInteger[] roundKeys = keyExpansion(key);\n\n            // Initial round\n            plainText = addRoundKey(plainText, roundKeys[0]);\n\n            // Main rounds\n            for (int i = 1; i < 10; i++) {\n                plainText = subBytes(plainText);\n                plainText = shiftRows(plainText);\n                plainText = mixColumns(plainText);\n                plainText = addRoundKey(plainText, roundKeys[i]);\n            }\n\n            // Final round\n            plainText = subBytes(plainText);\n            plainText = shiftRows(plainText);\n            plainText = addRoundKey(plainText, roundKeys[10]);\n\n            return plainText;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 3,
    "token" : "encrypt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 14, 15, 16, 17, 18, 19, 20 ]
  }, {
    "id" : 7,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "plain|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 21, 22 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 30 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 38, 39, 40, 41 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 76 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 81 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 86 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 94 ]
  }, {
    "id" : 21,
    "token" : "big|integer",
    "type" : "ArrayType",
    "children" : [ 23, 24 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 23,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 25 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "round|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "key|expansion",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "plain|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 33, 34, 35 ]
  }, {
    "id" : 33,
    "token" : "add|round|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "plain|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "round|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 42, 43 ]
  }, {
    "id" : 39,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 46, 47 ]
  }, {
    "id" : 40,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 48 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "Block",
    "children" : [ 49, 50, 51, 52 ]
  }, {
    "id" : 42,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 44, 45 ]
  }, {
    "id" : 44,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 53 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 58 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 63 ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 68 ]
  }, {
    "id" : 53,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 54, 55 ]
  }, {
    "id" : 54,
    "token" : "plain|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 56, 57 ]
  }, {
    "id" : 56,
    "token" : "sub|bytes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "plain|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 59, 60 ]
  }, {
    "id" : 59,
    "token" : "plain|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 61, 62 ]
  }, {
    "id" : 61,
    "token" : "shift|rows",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "plain|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 64, 65 ]
  }, {
    "id" : 64,
    "token" : "plain|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 66, 67 ]
  }, {
    "id" : 66,
    "token" : "mix|columns",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "plain|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 69, 70 ]
  }, {
    "id" : 69,
    "token" : "plain|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 71, 72, 73 ]
  }, {
    "id" : 71,
    "token" : "add|round|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "plain|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 74, 75 ]
  }, {
    "id" : 74,
    "token" : "round|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 77, 78 ]
  }, {
    "id" : 77,
    "token" : "plain|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 79, 80 ]
  }, {
    "id" : 79,
    "token" : "sub|bytes",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "plain|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 82, 83 ]
  }, {
    "id" : 82,
    "token" : "plain|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 84, 85 ]
  }, {
    "id" : 84,
    "token" : "shift|rows",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "plain|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 87, 88 ]
  }, {
    "id" : 87,
    "token" : "plain|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 89, 90, 91 ]
  }, {
    "id" : 89,
    "token" : "add|round|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "plain|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 92, 93 ]
  }, {
    "id" : 92,
    "token" : "round|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "plain|text",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "decrypt",
  "full_name" : "AES.LongJavaFileProject.decrypt",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public BigInteger decrypt(BigInteger cipherText, BigInteger key) {\n\n            BigInteger[] roundKeys = keyExpansion(key);\n\n            // Invert final round\n            cipherText = addRoundKey(cipherText, roundKeys[10]);\n            cipherText = shiftRowsDec(cipherText);\n            cipherText = subBytesDec(cipherText);\n\n            // Invert main rounds\n            for (int i = 9; i > 0; i--) {\n                cipherText = addRoundKey(cipherText, roundKeys[i]);\n                cipherText = mixColumnsDec(cipherText);\n                cipherText = shiftRowsDec(cipherText);\n                cipherText = subBytesDec(cipherText);\n            }\n\n            // Invert initial round\n            cipherText = addRoundKey(cipherText, roundKeys[0]);\n\n            return cipherText;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 3,
    "token" : "decrypt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 14, 15, 16, 17, 18, 19, 20 ]
  }, {
    "id" : 7,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "cipher|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 21, 22 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 30 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 38 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 43 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 48, 49, 50, 51 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 86 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 94 ]
  }, {
    "id" : 21,
    "token" : "big|integer",
    "type" : "ArrayType",
    "children" : [ 23, 24 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 23,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 25 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "round|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "key|expansion",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "cipher|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 33, 34, 35 ]
  }, {
    "id" : 33,
    "token" : "add|round|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "cipher|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "round|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 39, 40 ]
  }, {
    "id" : 39,
    "token" : "cipher|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 41, 42 ]
  }, {
    "id" : 41,
    "token" : "shift|rows|dec",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "cipher|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 44, 45 ]
  }, {
    "id" : 44,
    "token" : "cipher|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 46, 47 ]
  }, {
    "id" : 46,
    "token" : "sub|bytes|dec",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "cipher|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 52, 53 ]
  }, {
    "id" : 49,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 56, 57 ]
  }, {
    "id" : 50,
    "token" : "--",
    "type" : "PostfixExpression",
    "children" : [ 58 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "Block",
    "children" : [ 59, 60, 61, 62 ]
  }, {
    "id" : 52,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 54, 55 ]
  }, {
    "id" : 54,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 63 ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 71 ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 76 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 81 ]
  }, {
    "id" : 63,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 64, 65 ]
  }, {
    "id" : 64,
    "token" : "cipher|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 66, 67, 68 ]
  }, {
    "id" : 66,
    "token" : "add|round|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "cipher|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 69, 70 ]
  }, {
    "id" : 69,
    "token" : "round|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 72, 73 ]
  }, {
    "id" : 72,
    "token" : "cipher|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 74, 75 ]
  }, {
    "id" : 74,
    "token" : "mix|columns|dec",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "cipher|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 77, 78 ]
  }, {
    "id" : 77,
    "token" : "cipher|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 79, 80 ]
  }, {
    "id" : 79,
    "token" : "shift|rows|dec",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "cipher|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 82, 83 ]
  }, {
    "id" : 82,
    "token" : "cipher|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 84, 85 ]
  }, {
    "id" : 84,
    "token" : "sub|bytes|dec",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "cipher|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 87, 88 ]
  }, {
    "id" : 87,
    "token" : "cipher|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 89, 90, 91 ]
  }, {
    "id" : 89,
    "token" : "add|round|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "cipher|text",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 92, 93 ]
  }, {
    "id" : 92,
    "token" : "round|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "cipher|text",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "AES.LongJavaFileProject.main",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void main(String[] args) {\n\n            try (Scanner input = new Scanner(System.in)) {\n                System.out.println(\"Enter (e) letter for encrpyt or (d) letter for decrypt :\");\n                char choice = input.nextLine().charAt(0);\n                String in;\n                switch (choice) {\n                    case 'E':\n                    case 'e':\n                        System.out.println(\"Choose a plaintext block (128-Bit Integer in base 16):\");\n                        in = input.nextLine();\n                        BigInteger plaintext = new BigInteger(in, 16);\n                        System.out.println(\"Choose a Key (128-Bit Integer in base 16):\");\n                        in = input.nextLine();\n                        BigInteger encryptionKey = new BigInteger(in, 16);\n                        System.out.println(\"The encrypted message is: \\n\" + encrypt(plaintext, encryptionKey).toString(16));\n                        break;\n                    case 'D':\n                    case 'd':\n                        System.out.println(\"Enter your ciphertext block (128-Bit Integer in base 16):\");\n                        in = input.nextLine();\n                        BigInteger ciphertext = new BigInteger(in, 16);\n                        System.out.println(\"Choose a Key (128-Bit Integer in base 16):\");\n                        in = input.nextLine();\n                        BigInteger decryptionKey = new BigInteger(in, 16);\n                        System.out.println(\"The deciphered message is:\\n\" + decrypt(ciphertext, decryptionKey).toString(16));\n                        break;\n                    default:\n                        System.out.println(\"** End **\");\n                }\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "TryStatement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 14, 15 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "Block",
    "children" : [ 22, 23, 24, 25 ]
  }, {
    "id" : 14,
    "token" : "scanner",
    "type" : "SimpleType",
    "children" : [ 16 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 17, 18 ]
  }, {
    "id" : 16,
    "token" : "scanner",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "input",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "scanner",
    "type" : "SimpleType",
    "children" : [ 21 ]
  }, {
    "id" : 20,
    "token" : "systemin",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "scanner",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 26 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 30, 31 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 39, 40 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "SwitchStatement",
    "children" : [ 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 27, 28, 29 ]
  }, {
    "id" : 27,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "enter|e|letter|for|encrpyt|or|d|letter|for|decrypt|:",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "char",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 32, 33 ]
  }, {
    "id" : 32,
    "token" : "choice",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 34, 35, 36 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 37, 38 ]
  }, {
    "id" : 35,
    "token" : "char|at",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "input",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "next|line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 41 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 42 ]
  }, {
    "id" : 41,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "choice",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "SwitchCase",
    "children" : [ 66 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "SwitchCase",
    "children" : [ 67 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 68 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 72 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 77, 78 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 86 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 90 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 95, 96 ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 104 ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "BreakStatement",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "SwitchCase",
    "children" : [ 116 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "SwitchCase",
    "children" : [ 117 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 118 ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 122 ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 127, 128 ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 136 ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 140 ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 145, 146 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 154 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "BreakStatement",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "SwitchCase",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 166 ]
  }, {
    "id" : 66,
    "token" : "e",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "e",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 69, 70, 71 ]
  }, {
    "id" : 69,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "choose|a|plaintext|block|(|bit|integer|in|base|):",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 73, 74 ]
  }, {
    "id" : 73,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 75, 76 ]
  }, {
    "id" : 75,
    "token" : "input",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "next|line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 79 ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 80, 81 ]
  }, {
    "id" : 79,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "plaintext",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 82, 83, 84 ]
  }, {
    "id" : 82,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 85 ]
  }, {
    "id" : 83,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 87, 88, 89 ]
  }, {
    "id" : 87,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "choose|a|key|(|bit|integer|in|base|):",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 91, 92 ]
  }, {
    "id" : 91,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 93, 94 ]
  }, {
    "id" : 93,
    "token" : "input",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "next|line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 97 ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 98, 99 ]
  }, {
    "id" : 97,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "encryption|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 100, 101, 102 ]
  }, {
    "id" : 100,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 103 ]
  }, {
    "id" : 101,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 105, 106, 107 ]
  }, {
    "id" : 105,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 108, 109 ]
  }, {
    "id" : 108,
    "token" : "the|encrypted|message|is",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 110, 111, 112 ]
  }, {
    "id" : 110,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 113, 114, 115 ]
  }, {
    "id" : 111,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "encrypt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "plaintext",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "encryption|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "d",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "d",
    "type" : "CharacterLiteral",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 119, 120, 121 ]
  }, {
    "id" : 119,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "enter|your|ciphertext|block|(|bit|integer|in|base|):",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 123, 124 ]
  }, {
    "id" : 123,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 125, 126 ]
  }, {
    "id" : 125,
    "token" : "input",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "next|line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 129 ]
  }, {
    "id" : 128,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 130, 131 ]
  }, {
    "id" : 129,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "ciphertext",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 132, 133, 134 ]
  }, {
    "id" : 132,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 135 ]
  }, {
    "id" : 133,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 134,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 135,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 137, 138, 139 ]
  }, {
    "id" : 137,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 138,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 139,
    "token" : "choose|a|key|(|bit|integer|in|base|):",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 140,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 141, 142 ]
  }, {
    "id" : 141,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 143, 144 ]
  }, {
    "id" : 143,
    "token" : "input",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 144,
    "token" : "next|line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 147 ]
  }, {
    "id" : 146,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 148, 149 ]
  }, {
    "id" : 147,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "decryption|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 150, 151, 152 ]
  }, {
    "id" : 150,
    "token" : "big|integer",
    "type" : "SimpleType",
    "children" : [ 153 ]
  }, {
    "id" : 151,
    "token" : "in",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 152,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 153,
    "token" : "big|integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 154,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 155, 156, 157 ]
  }, {
    "id" : 155,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 157,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 158, 159 ]
  }, {
    "id" : 158,
    "token" : "the|deciphered|message|is",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 159,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 160, 161, 162 ]
  }, {
    "id" : 160,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 163, 164, 165 ]
  }, {
    "id" : 161,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 162,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 163,
    "token" : "decrypt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 164,
    "token" : "ciphertext",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 165,
    "token" : "decryption|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 166,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 167, 168, 169 ]
  }, {
    "id" : 167,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 168,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 169,
    "token" : "**|end|**",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "encrpyter",
  "full_name" : "ColumnarTranspositionCipher.LongJavaFileProject.encrpyter",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public static String encrpyter(String word, String keyword) {\n            ColumnarTranspositionCipher.keyword = keyword;\n            abecedariumBuilder(500);\n            table = tableBuilder(word);\n            Object[][] sortedTable = sortTable(table);\n            String wordEncrypted = \"\";\n            for (int i = 0; i < sortedTable[i].length; i++) {\n                for (int j = 1; j < sortedTable.length; j++) {\n                    wordEncrypted += sortedTable[j][i];\n                }\n            }\n            return wordEncrypted;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 4,
    "token" : "encrpyter",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 12, 13 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 15, 16, 17, 18, 19, 20, 21 ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "keyword",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 22 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 25 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 28 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 33, 34 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 43, 44 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 48, 49, 50, 51 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 83 ]
  }, {
    "id" : 22,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 23, 24 ]
  }, {
    "id" : 23,
    "token" : "columnar|transposition|cipherkeyword",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "keyword",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "abecedarium|builder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 29, 30 ]
  }, {
    "id" : 29,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "table|builder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 35, 36, 37 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 39, 40 ]
  }, {
    "id" : 35,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 38 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "sorted|table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 41, 42 ]
  }, {
    "id" : 41,
    "token" : "sort|table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 45 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 46, 47 ]
  }, {
    "id" : 45,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "word|encrypted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 52, 53 ]
  }, {
    "id" : 49,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 56, 57 ]
  }, {
    "id" : 50,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 62 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "Block",
    "children" : [ 63 ]
  }, {
    "id" : 52,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 54, 55 ]
  }, {
    "id" : 54,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 58, 59 ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 60, 61 ]
  }, {
    "id" : 59,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "sorted|table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 64, 65, 66, 67 ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 68, 69 ]
  }, {
    "id" : 65,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 72, 73 ]
  }, {
    "id" : 66,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 74 ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "Block",
    "children" : [ 75 ]
  }, {
    "id" : 68,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 70, 71 ]
  }, {
    "id" : 70,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "sorted|tablelength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 76 ]
  }, {
    "id" : 76,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 77, 78 ]
  }, {
    "id" : 77,
    "token" : "word|encrypted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 79, 80 ]
  }, {
    "id" : 79,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 81, 82 ]
  }, {
    "id" : 80,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "sorted|table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "word|encrypted",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "decrypter",
  "full_name" : "ColumnarTranspositionCipher.LongJavaFileProject.decrypter",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public static String decrypter() {\n            String wordDecrypted = \"\";\n            for (int i = 1; i < table.length; i++) {\n                for (Object item : table[i]) {\n                    wordDecrypted += item;\n                }\n            }\n            return wordDecrypted.replaceAll(ENCRYPTION_FIELD, \"\");\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 4,
    "token" : "decrypter",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 7, 8, 9 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 10, 11 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 15, 16, 17, 18 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 39 ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 13, 14 ]
  }, {
    "id" : 12,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "word|decrypted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 19, 20 ]
  }, {
    "id" : 16,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 17,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 25 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "Block",
    "children" : [ 26 ]
  }, {
    "id" : 19,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 21, 22 ]
  }, {
    "id" : 21,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "tablelength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 27, 28, 29 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 30, 31 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 33, 34 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "Block",
    "children" : [ 35 ]
  }, {
    "id" : 30,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 32 ]
  }, {
    "id" : 31,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 36 ]
  }, {
    "id" : 36,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 37, 38 ]
  }, {
    "id" : 37,
    "token" : "word|decrypted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 40, 41, 42, 43 ]
  }, {
    "id" : 40,
    "token" : "word|decrypted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "replace|all",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "encryption|field",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "tableBuilder",
  "full_name" : "ColumnarTranspositionCipher.LongJavaFileProject.tableBuilder",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private static Object[][] tableBuilder(String word) {\n            Object[][] table = new Object[numberOfRows(word) + 1][keyword.length()];\n            char[] wordInChards = word.toCharArray();\n            //Fils in the respective numbers\n            table[0] = findElements();\n            int charElement = 0;\n            for (int i = 1; i < table.length; i++) {\n                for (int j = 0; j < table[i].length; j++) {\n                    if (charElement < wordInChards.length) {\n                        table[i][j] = wordInChards[charElement];\n                        charElement++;\n                    } else {\n                        table[i][j] = ENCRYPTION_FIELD_CHAR;\n                    }\n                }\n            }\n            return table;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 7, 8, 9 ]
  }, {
    "id" : 4,
    "token" : "table|builder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 14, 15, 16, 17, 18, 19 ]
  }, {
    "id" : 7,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 41, 42 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 49 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 55, 56 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 59, 60, 61, 62 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 113 ]
  }, {
    "id" : 20,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 22, 23, 24 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 22,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 25 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 28, 29, 30 ]
  }, {
    "id" : 28,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 31, 32, 33 ]
  }, {
    "id" : 29,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 35, 36 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 39, 40 ]
  }, {
    "id" : 31,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 34 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 37, 38 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "number|of|rows",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "keyword",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "char",
    "type" : "ArrayType",
    "children" : [ 43, 44 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 45, 46 ]
  }, {
    "id" : 43,
    "token" : "char",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "word|in|chards",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 47, 48 ]
  }, {
    "id" : 47,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "to|char|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 50, 51 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 52, 53 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 54 ]
  }, {
    "id" : 52,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "find|elements",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 57, 58 ]
  }, {
    "id" : 57,
    "token" : "char|element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 63, 64 ]
  }, {
    "id" : 60,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 67, 68 ]
  }, {
    "id" : 61,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 69 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "Block",
    "children" : [ 70 ]
  }, {
    "id" : 63,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 65, 66 ]
  }, {
    "id" : 65,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "tablelength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 71, 72, 73, 74 ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 75, 76 ]
  }, {
    "id" : 72,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 79, 80 ]
  }, {
    "id" : 73,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 85 ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "Block",
    "children" : [ 86 ]
  }, {
    "id" : 75,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 77, 78 ]
  }, {
    "id" : 77,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 81, 82 ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 83, 84 ]
  }, {
    "id" : 82,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 87, 88, 89 ]
  }, {
    "id" : 87,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 90, 91 ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "Block",
    "children" : [ 92, 93 ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "Block",
    "children" : [ 105 ]
  }, {
    "id" : 90,
    "token" : "char|element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "word|in|chardslength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 94 ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 103 ]
  }, {
    "id" : 94,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 95, 96 ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 97, 98 ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 101, 102 ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 99, 100 ]
  }, {
    "id" : 98,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "word|in|chards",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "char|element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 104 ]
  }, {
    "id" : 104,
    "token" : "char|element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 106 ]
  }, {
    "id" : 106,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 107, 108 ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 109, 110 ]
  }, {
    "id" : 108,
    "token" : "encryption|field|char",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 111, 112 ]
  }, {
    "id" : 110,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "numberOfRows",
  "full_name" : "ColumnarTranspositionCipher.LongJavaFileProject.numberOfRows",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private static int numberOfRows(String word) {\n            if ((double) word.length() / keyword.length() > word.length() / keyword.length()) {\n                return (word.length() / keyword.length()) + 1;\n            } else {\n                return word.length() / keyword.length();\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "number|of|rows",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 11, 12, 13 ]
  }, {
    "id" : 11,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 14, 15 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Block",
    "children" : [ 30 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "Block",
    "children" : [ 41 ]
  }, {
    "id" : 14,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 24, 25 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 22, 23 ]
  }, {
    "id" : 18,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "keyword",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 26, 27 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28, 29 ]
  }, {
    "id" : 26,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "keyword",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 31 ]
  }, {
    "id" : 31,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 32, 33 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 34 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 37, 38 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 39, 40 ]
  }, {
    "id" : 37,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "keyword",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 42 ]
  }, {
    "id" : 42,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 45, 46 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 47, 48 ]
  }, {
    "id" : 45,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "keyword",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "findElements",
  "full_name" : "ColumnarTranspositionCipher.LongJavaFileProject.findElements",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private static Object[] findElements() {\n            Object[] charValues = new Object[keyword.length()];\n            for (int i = 0; i < charValues.length; i++) {\n                int charValueIndex = abecedarium.indexOf(keyword.charAt(i));\n                charValues[i] = charValueIndex > -1 ? charValueIndex : null;\n            }\n            return charValues;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "find|elements",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10, 11 ]
  }, {
    "id" : 6,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 26, 27, 28, 29 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 60 ]
  }, {
    "id" : 12,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 14, 15 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 17, 18 ]
  }, {
    "id" : 14,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 16 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "char|values",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 24, 25 ]
  }, {
    "id" : 21,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 23 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "keyword",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 30, 31 ]
  }, {
    "id" : 27,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 34, 35 ]
  }, {
    "id" : 28,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 36 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "Block",
    "children" : [ 37, 38 ]
  }, {
    "id" : 30,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 32, 33 ]
  }, {
    "id" : 32,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "char|valueslength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 39, 40 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 49 ]
  }, {
    "id" : 39,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 41, 42 ]
  }, {
    "id" : 41,
    "token" : "char|value|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 43, 44, 45 ]
  }, {
    "id" : 43,
    "token" : "abecedarium",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "index|of",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 46, 47, 48 ]
  }, {
    "id" : 46,
    "token" : "keyword",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "char|at",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 50, 51 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 52, 53 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "ConditionalExpression",
    "children" : [ 54, 55, 56 ]
  }, {
    "id" : 52,
    "token" : "char|values",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 57, 58 ]
  }, {
    "id" : 55,
    "token" : "char|value|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "char|value|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 59 ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "char|values",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "sortTable",
  "full_name" : "ColumnarTranspositionCipher.LongJavaFileProject.sortTable",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private static Object[][] sortTable(Object[][] table) {\n            Object[][] tableSorted = new Object[table.length][table[0].length];\n            for (int i = 0; i < tableSorted.length; i++) {\n                System.arraycopy(table[i], 0, tableSorted[i], 0, tableSorted[i].length);\n            }\n            for (int i = 0; i < tableSorted[0].length; i++) {\n                for (int j = i + 1; j < tableSorted[0].length; j++) {\n                    if ((int) tableSorted[0][i] > (int) table[0][j]) {\n                        Object[] column = getColumn(tableSorted, tableSorted.length, i);\n                        switchColumns(tableSorted, j, i, column);\n                    }\n                }\n            }\n            return tableSorted;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 7, 8, 9 ]
  }, {
    "id" : 4,
    "token" : "sort|table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 17, 18, 19, 20 ]
  }, {
    "id" : 7,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 13, 14, 15 ]
  }, {
    "id" : 12,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 16 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 21, 22 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 40, 41, 42, 43 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 68, 69, 70, 71 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 137 ]
  }, {
    "id" : 21,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 23, 24, 25 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 27, 28 ]
  }, {
    "id" : 23,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 26 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "table|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 29, 30, 31 ]
  }, {
    "id" : 29,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 32, 33, 34 ]
  }, {
    "id" : 30,
    "token" : "tablelength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 36, 37 ]
  }, {
    "id" : 32,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 35 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 38, 39 ]
  }, {
    "id" : 37,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 44, 45 ]
  }, {
    "id" : 41,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 48, 49 ]
  }, {
    "id" : 42,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 50 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "Block",
    "children" : [ 51 ]
  }, {
    "id" : 44,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 46, 47 ]
  }, {
    "id" : 46,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "table|sortedlength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 52 ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 53, 54, 55, 56, 57, 58, 59 ]
  }, {
    "id" : 53,
    "token" : "system",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "arraycopy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 60, 61 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 62, 63 ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 64, 65 ]
  }, {
    "id" : 60,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "table|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 66, 67 ]
  }, {
    "id" : 65,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "table|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 72, 73 ]
  }, {
    "id" : 69,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 76, 77 ]
  }, {
    "id" : 70,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 82 ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "Block",
    "children" : [ 83 ]
  }, {
    "id" : 72,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 74, 75 ]
  }, {
    "id" : 74,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 78, 79 ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 80, 81 ]
  }, {
    "id" : 79,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "table|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 84, 85, 86, 87 ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 88, 89 ]
  }, {
    "id" : 85,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 94, 95 ]
  }, {
    "id" : 86,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 100 ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "Block",
    "children" : [ 101 ]
  }, {
    "id" : 88,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 90, 91 ]
  }, {
    "id" : 90,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 92, 93 ]
  }, {
    "id" : 92,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 96, 97 ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 98, 99 ]
  }, {
    "id" : 97,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "table|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 102, 103 ]
  }, {
    "id" : 102,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 104, 105 ]
  }, {
    "id" : 103,
    "token" : "",
    "type" : "Block",
    "children" : [ 118, 119 ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 106, 107 ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 112, 113 ]
  }, {
    "id" : 106,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 108, 109 ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 110, 111 ]
  }, {
    "id" : 109,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "table|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 114, 115 ]
  }, {
    "id" : 114,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 116, 117 ]
  }, {
    "id" : 115,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 120, 121 ]
  }, {
    "id" : 119,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 131 ]
  }, {
    "id" : 120,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 122, 123 ]
  }, {
    "id" : 121,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 125, 126 ]
  }, {
    "id" : 122,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 124 ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "column",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 127, 128, 129, 130 ]
  }, {
    "id" : 127,
    "token" : "get|column",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "table|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "table|sortedlength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 132, 133, 134, 135, 136 ]
  }, {
    "id" : 132,
    "token" : "switch|columns",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "table|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 134,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 135,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "column",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 137,
    "token" : "table|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "getColumn",
  "full_name" : "ColumnarTranspositionCipher.LongJavaFileProject.getColumn",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private static Object[] getColumn(Object[][] table, int rows, int column) {\n            Object[] columnArray = new Object[rows];\n            for (int i = 0; i < rows; i++) {\n                columnArray[i] = table[i][column];\n            }\n            return columnArray;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 4,
    "token" : "get|column",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 12, 13 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 18, 19 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 20, 21 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Block",
    "children" : [ 22, 23, 24 ]
  }, {
    "id" : 9,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 13,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 17 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "rows",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "column",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 25, 26 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 37, 38, 39, 40 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 58 ]
  }, {
    "id" : 25,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 27, 28 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 30, 31 ]
  }, {
    "id" : 27,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 29 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "column|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 32, 33 ]
  }, {
    "id" : 32,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 34, 35 ]
  }, {
    "id" : 33,
    "token" : "rows",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 36 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 41, 42 ]
  }, {
    "id" : 38,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 45, 46 ]
  }, {
    "id" : 39,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 47 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "Block",
    "children" : [ 48 ]
  }, {
    "id" : 41,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "rows",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 49 ]
  }, {
    "id" : 49,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 50, 51 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 52, 53 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 54, 55 ]
  }, {
    "id" : 52,
    "token" : "column|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 56, 57 ]
  }, {
    "id" : 55,
    "token" : "column",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "column|array",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "switchColumns",
  "full_name" : "ColumnarTranspositionCipher.LongJavaFileProject.switchColumns",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private static void switchColumns(Object[][] table, int firstColumnIndex,\n                                          int secondColumnIndex, Object[] columnToSwitch) {\n            for (int i = 0; i < table.length; i++) {\n                table[i][secondColumnIndex] = table[i][firstColumnIndex];\n                table[i][firstColumnIndex] = columnToSwitch[i];\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "switch|columns",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 16, 17 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 18, 19 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 20, 21 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Block",
    "children" : [ 25 ]
  }, {
    "id" : 10,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 11,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "first|column|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "second|column|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 22, 23 ]
  }, {
    "id" : 21,
    "token" : "column|to|switch",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 24 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 26, 27, 28, 29 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 30, 31 ]
  }, {
    "id" : 27,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 34, 35 ]
  }, {
    "id" : 28,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 36 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "Block",
    "children" : [ 37, 38 ]
  }, {
    "id" : 30,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 32, 33 ]
  }, {
    "id" : 32,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "tablelength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 39 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 50 ]
  }, {
    "id" : 39,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 46, 47 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 44, 45 ]
  }, {
    "id" : 43,
    "token" : "second|column|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 48, 49 ]
  }, {
    "id" : 47,
    "token" : "first|column|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 51, 52 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 53, 54 ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 57, 58 ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 55, 56 ]
  }, {
    "id" : 54,
    "token" : "first|column|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "column|to|switch",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "abecedariumBuilder",
  "full_name" : "ColumnarTranspositionCipher.LongJavaFileProject.abecedariumBuilder",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private static void abecedariumBuilder(int value) {\n            abecedarium = \"\";\n            for (int i = 0; i < value; i++) {\n                abecedarium += (char) i;\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "abecedarium|builder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10 ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 14, 15, 16, 17 ]
  }, {
    "id" : 11,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 12, 13 ]
  }, {
    "id" : 12,
    "token" : "abecedarium",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 18, 19 ]
  }, {
    "id" : 15,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 22, 23 ]
  }, {
    "id" : 16,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 24 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "Block",
    "children" : [ 25 ]
  }, {
    "id" : 18,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 26 ]
  }, {
    "id" : 26,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "abecedarium",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 29, 30 ]
  }, {
    "id" : 29,
    "token" : "char",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "showTable",
  "full_name" : "ColumnarTranspositionCipher.LongJavaFileProject.showTable",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private static void showTable() {\n            for (Object[] table1 : table) {\n                for (Object item : table1) {\n                    System.out.print(item + \" \");\n                }\n                System.out.println();\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "show|table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 7, 8, 9 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 8,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Block",
    "children" : [ 15, 16 ]
  }, {
    "id" : 10,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 12, 13 ]
  }, {
    "id" : 11,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 30 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 20, 21 ]
  }, {
    "id" : 18,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Block",
    "children" : [ 23 ]
  }, {
    "id" : 20,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 22 ]
  }, {
    "id" : 21,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 24 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 25, 26, 27 ]
  }, {
    "id" : 25,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "ColumnarTranspositionCipher.LongJavaFileProject.main",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void main(String[] args) {\n            String keywordForExample = \"asd215\";\n            String wordBeingEncrypted = \"This is a test of the Columnar Transposition Cipher\";\n            System.out.println(\"### Example of Columnar Transposition Cipher ###\\n\");\n            System.out.println(\"Word being encryped ->>> \" + wordBeingEncrypted);\n            System.out.println(\"Word encrypted ->>> \" + ColumnarTranspositionCipher\n                    .encrpyter(wordBeingEncrypted, keywordForExample));\n            System.out.println(\"Word decryped ->>> \" + ColumnarTranspositionCipher\n                    .decrypter());\n            System.out.println(\"\\n### Encrypted Table ###\");\n            showTable();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13, 14, 15, 16, 17, 18 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 19, 20 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 29 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 33 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 39 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 49 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 57 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 61 ]
  }, {
    "id" : 19,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 21 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 21,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "keyword|for|example",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "asd",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 26 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 27, 28 ]
  }, {
    "id" : 26,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "word|being|encrypted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "this|is|a|test|of|the|columnar|transposition|cipher",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 30, 31, 32 ]
  }, {
    "id" : 30,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "###|example|of|columnar|transposition|cipher|###",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 34, 35, 36 ]
  }, {
    "id" : 34,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 37, 38 ]
  }, {
    "id" : 37,
    "token" : "word|being|encryped|->>>",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "word|being|encrypted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 40, 41, 42 ]
  }, {
    "id" : 40,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "word|encrypted|->>>",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 45, 46, 47, 48 ]
  }, {
    "id" : 45,
    "token" : "columnar|transposition|cipher",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "encrpyter",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "word|being|encrypted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "keyword|for|example",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 50, 51, 52 ]
  }, {
    "id" : 50,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 53, 54 ]
  }, {
    "id" : 53,
    "token" : "word|decryped|->>>",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 55, 56 ]
  }, {
    "id" : 55,
    "token" : "columnar|transposition|cipher",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "decrypter",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 58, 59, 60 ]
  }, {
    "id" : 58,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "###|encrypted|table|###",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 62 ]
  }, {
    "id" : 62,
    "token" : "show|table",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "ClosestPairs",
  "full_name" : "ClosestPairs.LongJavaFileProject.ClosestPairs",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "ClosestPairs(int points) {\n            numberPoints = points;\n            array = new Location[numberPoints];\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "closest|pairs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 4, 5 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "points",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 11 ]
  }, {
    "id" : 8,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 9, 10 ]
  }, {
    "id" : 9,
    "token" : "number|points",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "points",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 12, 13 ]
  }, {
    "id" : 12,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "number|points",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "Location",
  "full_name" : "Location.ClosestPairs.LongJavaFileProject.Location",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "Location(final double xpar, final double ypar) { //Save x, y coordinates\n                this.x = xpar;\n                this.y = ypar;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6, 7 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9, 10 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "xpar",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "ypar",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 18 ]
  }, {
    "id" : 13,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "xpar",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "ypar",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "createLocation",
  "full_name" : "ClosestPairs.LongJavaFileProject.createLocation",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Location[] createLocation(int numberValues) {\n            return new Location[numberValues];\n\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 6, 7 ]
  }, {
    "id" : 3,
    "token" : "create|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11 ]
  }, {
    "id" : 6,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "number|values",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 12 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 13, 14 ]
  }, {
    "id" : 13,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "number|values",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 17 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "buildLocation",
  "full_name" : "ClosestPairs.LongJavaFileProject.buildLocation",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Location buildLocation(double x, double y) {\n            return new Location(x, y);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 3,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 12 ]
  }, {
    "id" : 7,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 13 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 14,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 17 ]
  }, {
    "id" : 15,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "xPartition",
  "full_name" : "ClosestPairs.LongJavaFileProject.xPartition",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int xPartition(\n                final Location[] a, final int first, final int last) {\n\n            Location pivot = a[last]; // pivot\n            int pIndex = last;\n            int i = first - 1;\n            Location temp; // Temporarily store value for position transformation\n            for (int j = first; j <= last - 1; j++) {\n                if (a[j].x <= pivot.x) { // Less than or less than pivot\n                    i++;\n                    temp = a[i]; // array[i] <-> array[j]\n                    a[i] = a[j];\n                    a[j] = temp;\n                }\n            }\n            i++;\n            temp = a[i]; // array[pivot] <-> array[i]\n            a[i] = a[pIndex];\n            a[pIndex] = temp;\n            return i; // pivot index\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "x|partition",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9, 10 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 ]
  }, {
    "id" : 8,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 11, 12 ]
  }, {
    "id" : 10,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 30, 31 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 37, 38 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 41, 42 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 47, 48 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 51, 52, 53, 54 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 96 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 98 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 103 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 110 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 115 ]
  }, {
    "id" : 30,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 32 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 32,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "pivot",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 39, 40 ]
  }, {
    "id" : 39,
    "token" : "p|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 45, 46 ]
  }, {
    "id" : 45,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 49 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 50 ]
  }, {
    "id" : 49,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 55, 56 ]
  }, {
    "id" : 52,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 59, 60 ]
  }, {
    "id" : 53,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 63 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "Block",
    "children" : [ 64 ]
  }, {
    "id" : 55,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 57, 58 ]
  }, {
    "id" : 57,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 61, 62 ]
  }, {
    "id" : 61,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 65, 66 ]
  }, {
    "id" : 65,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 67, 68 ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "Block",
    "children" : [ 73, 74, 75, 76 ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 69, 70 ]
  }, {
    "id" : 68,
    "token" : "pivotx",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 71, 72 ]
  }, {
    "id" : 70,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 77 ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 79 ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 84 ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 91 ]
  }, {
    "id" : 77,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 78 ]
  }, {
    "id" : 78,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 80, 81 ]
  }, {
    "id" : 80,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 82, 83 ]
  }, {
    "id" : 82,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 85, 86 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 87, 88 ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 89, 90 ]
  }, {
    "id" : 87,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 92, 93 ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 94, 95 ]
  }, {
    "id" : 93,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 97 ]
  }, {
    "id" : 97,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 99, 100 ]
  }, {
    "id" : 99,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 101, 102 ]
  }, {
    "id" : 101,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 104, 105 ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 106, 107 ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 108, 109 ]
  }, {
    "id" : 106,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "p|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 111, 112 ]
  }, {
    "id" : 111,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 113, 114 ]
  }, {
    "id" : 112,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "p|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "yPartition",
  "full_name" : "ClosestPairs.LongJavaFileProject.yPartition",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int yPartition(\n                final Location[] a, final int first, final int last) {\n\n            Location pivot = a[last]; // pivot\n            int pIndex = last;\n            int i = first - 1;\n            Location temp; // Temporarily store value for position transformation\n            for (int j = first; j <= last - 1; j++) {\n                if (a[j].y <= pivot.y) { // Less than or less than pivot\n                    i++;\n                    temp = a[i]; // array[i] <-> array[j]\n                    a[i] = a[j];\n                    a[j] = temp;\n                }\n            }\n            i++;\n            temp = a[i]; // array[pivot] <-> array[i]\n            a[i] = a[pIndex];\n            a[pIndex] = temp;\n            return i; // pivot index\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "y|partition",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9, 10 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 ]
  }, {
    "id" : 8,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 11, 12 ]
  }, {
    "id" : 10,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 30, 31 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 37, 38 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 41, 42 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 47, 48 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 51, 52, 53, 54 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 96 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 98 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 103 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 110 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 115 ]
  }, {
    "id" : 30,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 32 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 32,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "pivot",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 39, 40 ]
  }, {
    "id" : 39,
    "token" : "p|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 45, 46 ]
  }, {
    "id" : 45,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 49 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 50 ]
  }, {
    "id" : 49,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 55, 56 ]
  }, {
    "id" : 52,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 59, 60 ]
  }, {
    "id" : 53,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 63 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "Block",
    "children" : [ 64 ]
  }, {
    "id" : 55,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 57, 58 ]
  }, {
    "id" : 57,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 61, 62 ]
  }, {
    "id" : 61,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 65, 66 ]
  }, {
    "id" : 65,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 67, 68 ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "Block",
    "children" : [ 73, 74, 75, 76 ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 69, 70 ]
  }, {
    "id" : 68,
    "token" : "pivoty",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 71, 72 ]
  }, {
    "id" : 70,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 77 ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 79 ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 84 ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 91 ]
  }, {
    "id" : 77,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 78 ]
  }, {
    "id" : 78,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 80, 81 ]
  }, {
    "id" : 80,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 82, 83 ]
  }, {
    "id" : 82,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 85, 86 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 87, 88 ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 89, 90 ]
  }, {
    "id" : 87,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 92, 93 ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 94, 95 ]
  }, {
    "id" : 93,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 97 ]
  }, {
    "id" : 97,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 99, 100 ]
  }, {
    "id" : 99,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 101, 102 ]
  }, {
    "id" : 101,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 104, 105 ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 106, 107 ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 108, 109 ]
  }, {
    "id" : 106,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "p|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 111, 112 ]
  }, {
    "id" : 111,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 113, 114 ]
  }, {
    "id" : 112,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "p|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "xQuickSort",
  "full_name" : "ClosestPairs.LongJavaFileProject.xQuickSort",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void xQuickSort(\n                final Location[] a, final int first, final int last) {\n\n            if (first < last) {\n                int q = xPartition(a, first, last); // pivot\n                xQuickSort(a, first, q - 1); // Left\n                xQuickSort(a, q + 1, last); // Right\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "x|quick|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9, 10 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 20 ]
  }, {
    "id" : 8,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 11, 12 ]
  }, {
    "id" : 10,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 21, 22 ]
  }, {
    "id" : 21,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "Block",
    "children" : [ 25, 26, 27 ]
  }, {
    "id" : 23,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 28, 29 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 36 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 43 ]
  }, {
    "id" : 28,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 32, 33, 34, 35 ]
  }, {
    "id" : 32,
    "token" : "x|partition",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 37, 38, 39, 40 ]
  }, {
    "id" : 37,
    "token" : "x|quick|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 41, 42 ]
  }, {
    "id" : 41,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 44, 45, 46, 47 ]
  }, {
    "id" : 44,
    "token" : "x|quick|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 48, 49 ]
  }, {
    "id" : 47,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "yQuickSort",
  "full_name" : "ClosestPairs.LongJavaFileProject.yQuickSort",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void yQuickSort(\n                final Location[] a, final int first, final int last) {\n\n            if (first < last) {\n                int q = yPartition(a, first, last); // pivot\n                yQuickSort(a, first, q - 1); // Left\n                yQuickSort(a, q + 1, last); // Right\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "y|quick|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9, 10 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 20 ]
  }, {
    "id" : 8,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 11, 12 ]
  }, {
    "id" : 10,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 21, 22 ]
  }, {
    "id" : 21,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "Block",
    "children" : [ 25, 26, 27 ]
  }, {
    "id" : 23,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 28, 29 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 36 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 43 ]
  }, {
    "id" : 28,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 32, 33, 34, 35 ]
  }, {
    "id" : 32,
    "token" : "y|partition",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 37, 38, 39, 40 ]
  }, {
    "id" : 37,
    "token" : "y|quick|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "first",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 41, 42 ]
  }, {
    "id" : 41,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 44, 45, 46, 47 ]
  }, {
    "id" : 44,
    "token" : "y|quick|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 48, 49 ]
  }, {
    "id" : 47,
    "token" : "last",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "closestPair",
  "full_name" : "ClosestPairs.LongJavaFileProject.closestPair",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public double closestPair(final Location[] a, final int indexNum) {\n\n            Location[] divideArray = new Location[indexNum];\n            System.arraycopy(a, 0, divideArray, 0, indexNum); // Copy previous array\n            int totalNum = indexNum; // number of coordinates in the divideArray\n            int divideX = indexNum / 2; // Intermediate value for divide\n            Location[] leftArray = new Location[divideX]; //divide - left array\n            //divide-right array\n            Location[] rightArray = new Location[totalNum - divideX];\n            if (indexNum <= 3) { // If the number of coordinates is 3 or less\n                return bruteForce(divideArray);\n            }\n            //divide-left array\n            System.arraycopy(divideArray, 0, leftArray, 0, divideX);\n            //divide-right array\n            System.arraycopy(\n                    divideArray, divideX, rightArray, 0, totalNum - divideX);\n\n            double minLeftArea = 0; //Minimum length of left array\n            double minRightArea = 0; //Minimum length of right array\n            double minValue = 0; //Minimum lengt\n\n            minLeftArea = closestPair(leftArray, divideX); // recursive closestPair\n            minRightArea = closestPair(rightArray, totalNum - divideX);\n            // window size (= minimum length)\n            minValue = Math.min(minLeftArea, minRightArea);\n\n            // Create window.  Set the size for creating a window\n            // and creating a new array for the coordinates in the window\n            for (int i = 0; i < totalNum; i++) {\n                double xGap = Math.abs(divideArray[divideX].x - divideArray[i].x);\n                if (xGap < minValue) {\n                    secondCount++; // size of the array\n                } else {\n                    if (divideArray[i].x > divideArray[divideX].x) {\n                        break;\n                    }\n                }\n            }\n            // new array for coordinates in window\n            Location[] firstWindow = new Location[secondCount];\n            int k = 0;\n            for (int i = 0; i < totalNum; i++) {\n                double xGap = Math.abs(divideArray[divideX].x - divideArray[i].x);\n                if (xGap < minValue) { // if it's inside a window\n                    firstWindow[k] = divideArray[i]; // put in an array\n                    k++;\n                } else {\n                    if (divideArray[i].x > divideArray[divideX].x) {\n                        break;\n                    }\n                }\n            }\n            yQuickSort(firstWindow, 0, secondCount - 1); // Sort by y coordinates\n            /* Coordinates in Window */\n            double length = 0;\n            // size comparison within window\n            for (int i = 0; i < secondCount - 1; i++) {\n                for (int j = (i + 1); j < secondCount; j++) {\n                    double xGap = Math.abs(firstWindow[i].x - firstWindow[j].x);\n                    double yGap = Math.abs(firstWindow[i].y - firstWindow[j].y);\n                    if (yGap < minValue) {\n                        length = Math.sqrt(Math.pow(xGap, 2) + Math.pow(yGap, 2));\n                        // If measured distance is less than current min distance\n                        if (length < minValue) {\n                            // Change minimum distance to current distance\n                            minValue = length;\n                            // Conditional for registering final coordinate\n                            if (length < minNum) {\n                                minNum = length;\n                                point1 = firstWindow[i];\n                                point2 = firstWindow[j];\n                            }\n                        }\n                    } else {\n                        break;\n                    }\n                }\n            }\n            secondCount = 0;\n            return minValue;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "closest|pair",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 13, 14, 15 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 ]
  }, {
    "id" : 7,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 10, 11 ]
  }, {
    "id" : 9,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "index|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 40, 41 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 52 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 60, 61 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 64, 65 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 70, 71 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 82, 83 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 96, 97 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 104 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 112 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 122, 123 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 126, 127 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 130, 131 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 134 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 140 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 148 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 155, 156, 157, 158 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 207, 208 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 219, 220 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 223, 224, 225, 226 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 283 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 290, 291 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 294, 295, 296, 297 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 412 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 415 ]
  }, {
    "id" : 40,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 45, 46 ]
  }, {
    "id" : 42,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 44 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 47, 48 ]
  }, {
    "id" : 47,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 49, 50 ]
  }, {
    "id" : 48,
    "token" : "index|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 51 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 53, 54, 55, 56, 57, 58, 59 ]
  }, {
    "id" : 53,
    "token" : "system",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "arraycopy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "index|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 62, 63 ]
  }, {
    "id" : 62,
    "token" : "total|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "index|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 66, 67 ]
  }, {
    "id" : 66,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 68, 69 ]
  }, {
    "id" : 68,
    "token" : "index|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 72, 73 ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 75, 76 ]
  }, {
    "id" : 72,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 74 ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "left|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 77, 78 ]
  }, {
    "id" : 77,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 79, 80 ]
  }, {
    "id" : 78,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 81 ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 84, 85 ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 87, 88 ]
  }, {
    "id" : 84,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 86 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "right|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 89, 90 ]
  }, {
    "id" : 89,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 91, 92 ]
  }, {
    "id" : 90,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 94, 95 ]
  }, {
    "id" : 91,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 93 ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "total|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 98, 99 ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "Block",
    "children" : [ 100 ]
  }, {
    "id" : 98,
    "token" : "index|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 101 ]
  }, {
    "id" : 101,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 102, 103 ]
  }, {
    "id" : 102,
    "token" : "brute|force",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 105, 106, 107, 108, 109, 110, 111 ]
  }, {
    "id" : 105,
    "token" : "system",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "arraycopy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "left|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 113, 114, 115, 116, 117, 118, 119 ]
  }, {
    "id" : 113,
    "token" : "system",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "arraycopy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "right|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 120, 121 ]
  }, {
    "id" : 120,
    "token" : "total|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 124, 125 ]
  }, {
    "id" : 124,
    "token" : "min|left|area",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 128, 129 ]
  }, {
    "id" : 128,
    "token" : "min|right|area",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 132, 133 ]
  }, {
    "id" : 132,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 134,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 135, 136 ]
  }, {
    "id" : 135,
    "token" : "min|left|area",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 137, 138, 139 ]
  }, {
    "id" : 137,
    "token" : "closest|pair",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 138,
    "token" : "left|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 139,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 140,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 141, 142 ]
  }, {
    "id" : 141,
    "token" : "min|right|area",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 143, 144, 145 ]
  }, {
    "id" : 143,
    "token" : "closest|pair",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 144,
    "token" : "right|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 146, 147 ]
  }, {
    "id" : 146,
    "token" : "total|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 149, 150 ]
  }, {
    "id" : 149,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 151, 152, 153, 154 ]
  }, {
    "id" : 151,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 152,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 153,
    "token" : "min|left|area",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 154,
    "token" : "min|right|area",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 155,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 159, 160 ]
  }, {
    "id" : 156,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 163, 164 ]
  }, {
    "id" : 157,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 165 ]
  }, {
    "id" : 158,
    "token" : "",
    "type" : "Block",
    "children" : [ 166, 167 ]
  }, {
    "id" : 159,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 160,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 161, 162 ]
  }, {
    "id" : 161,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 162,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 163,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 164,
    "token" : "total|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 165,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 166,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 168, 169 ]
  }, {
    "id" : 167,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 185, 186, 187 ]
  }, {
    "id" : 168,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 169,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 170, 171 ]
  }, {
    "id" : 170,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 171,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 172, 173, 174 ]
  }, {
    "id" : 172,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 173,
    "token" : "abs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 174,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 175, 176 ]
  }, {
    "id" : 175,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 177, 178 ]
  }, {
    "id" : 176,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 181, 182 ]
  }, {
    "id" : 177,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 179, 180 ]
  }, {
    "id" : 178,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 179,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 180,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 181,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 183, 184 ]
  }, {
    "id" : 182,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 183,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 184,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 185,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 188, 189 ]
  }, {
    "id" : 186,
    "token" : "",
    "type" : "Block",
    "children" : [ 190 ]
  }, {
    "id" : 187,
    "token" : "",
    "type" : "Block",
    "children" : [ 193 ]
  }, {
    "id" : 188,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 189,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 190,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 191 ]
  }, {
    "id" : 191,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 192 ]
  }, {
    "id" : 192,
    "token" : "second|count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 193,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 194, 195 ]
  }, {
    "id" : 194,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 196, 197 ]
  }, {
    "id" : 195,
    "token" : "",
    "type" : "Block",
    "children" : [ 206 ]
  }, {
    "id" : 196,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 198, 199 ]
  }, {
    "id" : 197,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 202, 203 ]
  }, {
    "id" : 198,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 200, 201 ]
  }, {
    "id" : 199,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 200,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 201,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 202,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 204, 205 ]
  }, {
    "id" : 203,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 204,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 205,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 206,
    "token" : "",
    "type" : "BreakStatement",
    "children" : [ ]
  }, {
    "id" : 207,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 209, 210 ]
  }, {
    "id" : 208,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 212, 213 ]
  }, {
    "id" : 209,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 211 ]
  }, {
    "id" : 210,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 211,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 212,
    "token" : "first|window",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 213,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 214, 215 ]
  }, {
    "id" : 214,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 216, 217 ]
  }, {
    "id" : 215,
    "token" : "second|count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 216,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 218 ]
  }, {
    "id" : 217,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 218,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 219,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 220,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 221, 222 ]
  }, {
    "id" : 221,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 222,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 223,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 227, 228 ]
  }, {
    "id" : 224,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 231, 232 ]
  }, {
    "id" : 225,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 233 ]
  }, {
    "id" : 226,
    "token" : "",
    "type" : "Block",
    "children" : [ 234, 235 ]
  }, {
    "id" : 227,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 228,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 229, 230 ]
  }, {
    "id" : 229,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 230,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 231,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 232,
    "token" : "total|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 233,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 234,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 236, 237 ]
  }, {
    "id" : 235,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 253, 254, 255 ]
  }, {
    "id" : 236,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 237,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 238, 239 ]
  }, {
    "id" : 238,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 239,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 240, 241, 242 ]
  }, {
    "id" : 240,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 241,
    "token" : "abs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 242,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 243, 244 ]
  }, {
    "id" : 243,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 245, 246 ]
  }, {
    "id" : 244,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 249, 250 ]
  }, {
    "id" : 245,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 247, 248 ]
  }, {
    "id" : 246,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 247,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 248,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 249,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 251, 252 ]
  }, {
    "id" : 250,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 251,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 252,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 253,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 256, 257 ]
  }, {
    "id" : 254,
    "token" : "",
    "type" : "Block",
    "children" : [ 258, 259 ]
  }, {
    "id" : 255,
    "token" : "",
    "type" : "Block",
    "children" : [ 269 ]
  }, {
    "id" : 256,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 257,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 258,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 260 ]
  }, {
    "id" : 259,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 267 ]
  }, {
    "id" : 260,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 261, 262 ]
  }, {
    "id" : 261,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 263, 264 ]
  }, {
    "id" : 262,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 265, 266 ]
  }, {
    "id" : 263,
    "token" : "first|window",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 264,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 265,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 266,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 267,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 268 ]
  }, {
    "id" : 268,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 269,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 270, 271 ]
  }, {
    "id" : 270,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 272, 273 ]
  }, {
    "id" : 271,
    "token" : "",
    "type" : "Block",
    "children" : [ 282 ]
  }, {
    "id" : 272,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 274, 275 ]
  }, {
    "id" : 273,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 278, 279 ]
  }, {
    "id" : 274,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 276, 277 ]
  }, {
    "id" : 275,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 276,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 277,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 278,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 280, 281 ]
  }, {
    "id" : 279,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 280,
    "token" : "divide|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 281,
    "token" : "divide|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 282,
    "token" : "",
    "type" : "BreakStatement",
    "children" : [ ]
  }, {
    "id" : 283,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 284, 285, 286, 287 ]
  }, {
    "id" : 284,
    "token" : "y|quick|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 285,
    "token" : "first|window",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 286,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 287,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 288, 289 ]
  }, {
    "id" : 288,
    "token" : "second|count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 289,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 290,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 291,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 292, 293 ]
  }, {
    "id" : 292,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 293,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 294,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 298, 299 ]
  }, {
    "id" : 295,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 302, 303 ]
  }, {
    "id" : 296,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 306 ]
  }, {
    "id" : 297,
    "token" : "",
    "type" : "Block",
    "children" : [ 307 ]
  }, {
    "id" : 298,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 299,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 300, 301 ]
  }, {
    "id" : 300,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 301,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 302,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 303,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 304, 305 ]
  }, {
    "id" : 304,
    "token" : "second|count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 305,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 306,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 307,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 308, 309, 310, 311 ]
  }, {
    "id" : 308,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 312, 313 ]
  }, {
    "id" : 309,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 319, 320 ]
  }, {
    "id" : 310,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 321 ]
  }, {
    "id" : 311,
    "token" : "",
    "type" : "Block",
    "children" : [ 322, 323, 324 ]
  }, {
    "id" : 312,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 313,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 314, 315 ]
  }, {
    "id" : 314,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 315,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 316 ]
  }, {
    "id" : 316,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 317, 318 ]
  }, {
    "id" : 317,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 318,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 319,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 320,
    "token" : "second|count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 321,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 322,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 325, 326 ]
  }, {
    "id" : 323,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 342, 343 ]
  }, {
    "id" : 324,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 359, 360, 361 ]
  }, {
    "id" : 325,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 326,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 327, 328 ]
  }, {
    "id" : 327,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 328,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 329, 330, 331 ]
  }, {
    "id" : 329,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 330,
    "token" : "abs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 331,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 332, 333 ]
  }, {
    "id" : 332,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 334, 335 ]
  }, {
    "id" : 333,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 338, 339 ]
  }, {
    "id" : 334,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 336, 337 ]
  }, {
    "id" : 335,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 336,
    "token" : "first|window",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 337,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 338,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 340, 341 ]
  }, {
    "id" : 339,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 340,
    "token" : "first|window",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 341,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 342,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 343,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 344, 345 ]
  }, {
    "id" : 344,
    "token" : "y|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 345,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 346, 347, 348 ]
  }, {
    "id" : 346,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 347,
    "token" : "abs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 348,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 349, 350 ]
  }, {
    "id" : 349,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 351, 352 ]
  }, {
    "id" : 350,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 355, 356 ]
  }, {
    "id" : 351,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 353, 354 ]
  }, {
    "id" : 352,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 353,
    "token" : "first|window",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 354,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 355,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 357, 358 ]
  }, {
    "id" : 356,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 357,
    "token" : "first|window",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 358,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 359,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 362, 363 ]
  }, {
    "id" : 360,
    "token" : "",
    "type" : "Block",
    "children" : [ 364, 365 ]
  }, {
    "id" : 361,
    "token" : "",
    "type" : "Block",
    "children" : [ 411 ]
  }, {
    "id" : 362,
    "token" : "y|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 363,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 364,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 366 ]
  }, {
    "id" : 365,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 382, 383 ]
  }, {
    "id" : 366,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 367, 368 ]
  }, {
    "id" : 367,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 368,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 369, 370, 371 ]
  }, {
    "id" : 369,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 370,
    "token" : "sqrt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 371,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 372, 373 ]
  }, {
    "id" : 372,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 374, 375, 376, 377 ]
  }, {
    "id" : 373,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 378, 379, 380, 381 ]
  }, {
    "id" : 374,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 375,
    "token" : "pow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 376,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 377,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 378,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 379,
    "token" : "pow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 380,
    "token" : "y|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 381,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 382,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 384, 385 ]
  }, {
    "id" : 383,
    "token" : "",
    "type" : "Block",
    "children" : [ 386, 387 ]
  }, {
    "id" : 384,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 385,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 386,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 388 ]
  }, {
    "id" : 387,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 391, 392 ]
  }, {
    "id" : 388,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 389, 390 ]
  }, {
    "id" : 389,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 390,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 391,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 393, 394 ]
  }, {
    "id" : 392,
    "token" : "",
    "type" : "Block",
    "children" : [ 395, 396, 397 ]
  }, {
    "id" : 393,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 394,
    "token" : "min|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 395,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 398 ]
  }, {
    "id" : 396,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 401 ]
  }, {
    "id" : 397,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 406 ]
  }, {
    "id" : 398,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 399, 400 ]
  }, {
    "id" : 399,
    "token" : "min|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 400,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 401,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 402, 403 ]
  }, {
    "id" : 402,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 403,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 404, 405 ]
  }, {
    "id" : 404,
    "token" : "first|window",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 405,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 406,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 407, 408 ]
  }, {
    "id" : 407,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 408,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 409, 410 ]
  }, {
    "id" : 409,
    "token" : "first|window",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 410,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 411,
    "token" : "",
    "type" : "BreakStatement",
    "children" : [ ]
  }, {
    "id" : 412,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 413, 414 ]
  }, {
    "id" : 413,
    "token" : "second|count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 414,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 415,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "bruteForce",
  "full_name" : "ClosestPairs.LongJavaFileProject.bruteForce",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public double bruteForce(final Location[] arrayParam) {\n\n            double minValue = Double.MAX_VALUE; // minimum distance\n            double length = 0;\n            double xGap = 0; // Difference between x coordinates\n            double yGap = 0; // Difference between y coordinates\n            double result = 0;\n\n            if (arrayParam.length == 2) {\n                // Difference between x coordinates\n                xGap = (arrayParam[0].x - arrayParam[1].x);\n                // Difference between y coordinates\n                yGap = (arrayParam[0].y - arrayParam[1].y);\n                // distance between coordinates\n                length = Math.sqrt(Math.pow(xGap, 2) + Math.pow(yGap, 2));\n                // Conditional statement for registering final coordinate\n                if (length < minNum) {\n                    minNum = length;\n\n                }\n                point1 = arrayParam[0];\n                point2 = arrayParam[1];\n                result = length;\n            }\n            if (arrayParam.length == 3) {\n                for (int i = 0; i < arrayParam.length - 1; i++) {\n                    for (int j = (i + 1); j < arrayParam.length; j++) {\n                        // Difference between x coordinates\n                        xGap = (arrayParam[i].x - arrayParam[j].x);\n                        // Difference between y coordinates\n                        yGap = (arrayParam[i].y - arrayParam[j].y);\n                        // distance between coordinates\n                        length =\n                                Math.sqrt(Math.pow(xGap, 2) + Math.pow(yGap, 2));\n                        // If measured distance is less than current min distance\n                        if (length < minValue) {\n                            // Change minimum distance to current distance\n                            minValue = length;\n                            if (length < minNum) {\n                                // Registering final coordinate\n                                minNum = length;\n                                point1 = arrayParam[i];\n                                point2 = arrayParam[j];\n                            }\n                        }\n                    }\n                }\n                result = minValue;\n\n            }\n            return result; // If only one point returns 0.\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "brute|force",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 12, 13, 14, 15, 16, 17, 18, 19 ]
  }, {
    "id" : 6,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "location",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "location",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 28, 29 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 32, 33 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 36, 37 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 40, 41 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 116, 117 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 230 ]
  }, {
    "id" : 20,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "doublemax|value",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "y|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 38, 39 ]
  }, {
    "id" : 38,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "Block",
    "children" : [ 44, 45, 46, 47, 48, 49, 50 ]
  }, {
    "id" : 42,
    "token" : "array|paramlength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 51 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 65 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 79 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 95, 96 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 103 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 108 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 113 ]
  }, {
    "id" : 51,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 52, 53 ]
  }, {
    "id" : 52,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 54 ]
  }, {
    "id" : 54,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 55, 56 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 57, 58 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 61, 62 ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 59, 60 ]
  }, {
    "id" : 58,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 63, 64 ]
  }, {
    "id" : 62,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 66, 67 ]
  }, {
    "id" : 66,
    "token" : "y|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 68 ]
  }, {
    "id" : 68,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 69, 70 ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 71, 72 ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 75, 76 ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 73, 74 ]
  }, {
    "id" : 72,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 77, 78 ]
  }, {
    "id" : 76,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 80, 81 ]
  }, {
    "id" : 80,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 82, 83, 84 ]
  }, {
    "id" : 82,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "sqrt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 85, 86 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 87, 88, 89, 90 ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 91, 92, 93, 94 ]
  }, {
    "id" : 87,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "pow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "pow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "y|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 97, 98 ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "Block",
    "children" : [ 99 ]
  }, {
    "id" : 97,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "min|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 100 ]
  }, {
    "id" : 100,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 101, 102 ]
  }, {
    "id" : 101,
    "token" : "min|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 104, 105 ]
  }, {
    "id" : 104,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 106, 107 ]
  }, {
    "id" : 106,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 109, 110 ]
  }, {
    "id" : 109,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 111, 112 ]
  }, {
    "id" : 111,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 114, 115 ]
  }, {
    "id" : 114,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 118, 119 ]
  }, {
    "id" : 117,
    "token" : "",
    "type" : "Block",
    "children" : [ 120, 121 ]
  }, {
    "id" : 118,
    "token" : "array|paramlength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 122, 123, 124, 125 ]
  }, {
    "id" : 121,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 227 ]
  }, {
    "id" : 122,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 126, 127 ]
  }, {
    "id" : 123,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 130, 131 ]
  }, {
    "id" : 124,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 134 ]
  }, {
    "id" : 125,
    "token" : "",
    "type" : "Block",
    "children" : [ 135 ]
  }, {
    "id" : 126,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 128, 129 ]
  }, {
    "id" : 128,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 132, 133 ]
  }, {
    "id" : 132,
    "token" : "array|paramlength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 134,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 135,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 136, 137, 138, 139 ]
  }, {
    "id" : 136,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 140, 141 ]
  }, {
    "id" : 137,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 147, 148 ]
  }, {
    "id" : 138,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 149 ]
  }, {
    "id" : 139,
    "token" : "",
    "type" : "Block",
    "children" : [ 150, 151, 152, 153 ]
  }, {
    "id" : 140,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 141,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 142, 143 ]
  }, {
    "id" : 142,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 143,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 144 ]
  }, {
    "id" : 144,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 145, 146 ]
  }, {
    "id" : 145,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 146,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "array|paramlength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 154 ]
  }, {
    "id" : 151,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 168 ]
  }, {
    "id" : 152,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 182 ]
  }, {
    "id" : 153,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 198, 199 ]
  }, {
    "id" : 154,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 155, 156 ]
  }, {
    "id" : 155,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 157 ]
  }, {
    "id" : 157,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 158, 159 ]
  }, {
    "id" : 158,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 160, 161 ]
  }, {
    "id" : 159,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 164, 165 ]
  }, {
    "id" : 160,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 162, 163 ]
  }, {
    "id" : 161,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 162,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 163,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 164,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 166, 167 ]
  }, {
    "id" : 165,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 166,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 167,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 168,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 169, 170 ]
  }, {
    "id" : 169,
    "token" : "y|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 170,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 171 ]
  }, {
    "id" : 171,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 172, 173 ]
  }, {
    "id" : 172,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 174, 175 ]
  }, {
    "id" : 173,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 178, 179 ]
  }, {
    "id" : 174,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 176, 177 ]
  }, {
    "id" : 175,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 176,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 177,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 178,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 180, 181 ]
  }, {
    "id" : 179,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 180,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 181,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 182,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 183, 184 ]
  }, {
    "id" : 183,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 184,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 185, 186, 187 ]
  }, {
    "id" : 185,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 186,
    "token" : "sqrt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 187,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 188, 189 ]
  }, {
    "id" : 188,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 190, 191, 192, 193 ]
  }, {
    "id" : 189,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 194, 195, 196, 197 ]
  }, {
    "id" : 190,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 191,
    "token" : "pow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 192,
    "token" : "x|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 193,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 194,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 195,
    "token" : "pow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 196,
    "token" : "y|gap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 197,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 198,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 200, 201 ]
  }, {
    "id" : 199,
    "token" : "",
    "type" : "Block",
    "children" : [ 202, 203 ]
  }, {
    "id" : 200,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 201,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 202,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 204 ]
  }, {
    "id" : 203,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 207, 208 ]
  }, {
    "id" : 204,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 205, 206 ]
  }, {
    "id" : 205,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 206,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 207,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 209, 210 ]
  }, {
    "id" : 208,
    "token" : "",
    "type" : "Block",
    "children" : [ 211, 212, 213 ]
  }, {
    "id" : 209,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 210,
    "token" : "min|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 211,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 214 ]
  }, {
    "id" : 212,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 217 ]
  }, {
    "id" : 213,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 222 ]
  }, {
    "id" : 214,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 215, 216 ]
  }, {
    "id" : 215,
    "token" : "min|num",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 216,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 217,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 218, 219 ]
  }, {
    "id" : 218,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 219,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 220, 221 ]
  }, {
    "id" : 220,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 221,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 222,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 223, 224 ]
  }, {
    "id" : 223,
    "token" : "point",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 224,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 225, 226 ]
  }, {
    "id" : 225,
    "token" : "array|param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 226,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 227,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 228, 229 ]
  }, {
    "id" : 228,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 229,
    "token" : "min|value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 230,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "ClosestPairs.LongJavaFileProject.main",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void main(final String[] args) {\n\n            //Input data consists of one x-coordinate and one y-coordinate\n\n            ClosestPair cp = new ClosestPair(12);\n            cp.array[0] = cp.buildLocation(2, 3);\n            cp.array[1] = cp.buildLocation(2, 16);\n            cp.array[2] = cp.buildLocation(3, 9);\n            cp.array[3] = cp.buildLocation(6, 3);\n            cp.array[4] = cp.buildLocation(7, 7);\n            cp.array[5] = cp.buildLocation(19, 4);\n            cp.array[6] = cp.buildLocation(10, 11);\n            cp.array[7] = cp.buildLocation(15, 2);\n            cp.array[8] = cp.buildLocation(15, 19);\n            cp.array[9] = cp.buildLocation(16, 11);\n            cp.array[10] = cp.buildLocation(17, 13);\n            cp.array[11] = cp.buildLocation(9, 12);\n\n            System.out.println(\"Input data\");\n            System.out.println(\"Number of points: \" + cp.array.length);\n            for (int i = 0; i < cp.array.length; i++) {\n                System.out.println(\"x: \" + cp.array[i].x + \", y: \" + cp.array[i].y);\n            }\n\n            cp.xQuickSort(cp.array, 0, cp.array.length - 1); // Sorting by x value\n\n            double result; // minimum distance\n\n            result = cp.closestPair(cp.array, cp.array.length);\n            // ClosestPair start\n            // minimum distance coordinates and distance output\n            System.out.println(\"Output Data\");\n            System.out.println(\"(\" + cp.point1.x + \", \" + cp.point1.y + \")\");\n            System.out.println(\"(\" + cp.point2.x + \", \" + cp.point2.y + \")\");\n            System.out.println(\"Minimum Distance : \" + result);\n\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 ]
  }, {
    "id" : 6,
    "token" : "final",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 35, 36 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 43 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 52 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 61 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 70 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 79 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 88 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 97 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 106 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 115 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 124 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 133 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 142 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 151 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 155 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 161, 162, 163, 164 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 189 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 197, 198 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 200 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 207 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 211 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 220 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 229 ]
  }, {
    "id" : 35,
    "token" : "closest|pair",
    "type" : "SimpleType",
    "children" : [ 37 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 38, 39 ]
  }, {
    "id" : 37,
    "token" : "closest|pair",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "closest|pair",
    "type" : "SimpleType",
    "children" : [ 42 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "closest|pair",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 44, 45 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 46, 47 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 48, 49, 50, 51 ]
  }, {
    "id" : 46,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 53, 54 ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 55, 56 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 57, 58, 59, 60 ]
  }, {
    "id" : 55,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 62, 63 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 64, 65 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 66, 67, 68, 69 ]
  }, {
    "id" : 64,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 71, 72 ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 73, 74 ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 75, 76, 77, 78 ]
  }, {
    "id" : 73,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 80, 81 ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 82, 83 ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 84, 85, 86, 87 ]
  }, {
    "id" : 82,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 89, 90 ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 91, 92 ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 93, 94, 95, 96 ]
  }, {
    "id" : 91,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 98, 99 ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 100, 101 ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 102, 103, 104, 105 ]
  }, {
    "id" : 100,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 107, 108 ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 109, 110 ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 111, 112, 113, 114 ]
  }, {
    "id" : 109,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 116, 117 ]
  }, {
    "id" : 116,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 118, 119 ]
  }, {
    "id" : 117,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 120, 121, 122, 123 ]
  }, {
    "id" : 118,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 125, 126 ]
  }, {
    "id" : 125,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 127, 128 ]
  }, {
    "id" : 126,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 129, 130, 131, 132 ]
  }, {
    "id" : 127,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 132,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 134, 135 ]
  }, {
    "id" : 134,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 136, 137 ]
  }, {
    "id" : 135,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 138, 139, 140, 141 ]
  }, {
    "id" : 136,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 137,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 138,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 139,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 140,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 141,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 143, 144 ]
  }, {
    "id" : 143,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 145, 146 ]
  }, {
    "id" : 144,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 147, 148, 149, 150 ]
  }, {
    "id" : 145,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 146,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "build|location",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 151,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 152, 153, 154 ]
  }, {
    "id" : 152,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 153,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 154,
    "token" : "input|data",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 155,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 156, 157, 158 ]
  }, {
    "id" : 156,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 157,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 158,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 159, 160 ]
  }, {
    "id" : 159,
    "token" : "number|of|points",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 160,
    "token" : "cparraylength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 165, 166 ]
  }, {
    "id" : 162,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 169, 170 ]
  }, {
    "id" : 163,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 171 ]
  }, {
    "id" : 164,
    "token" : "",
    "type" : "Block",
    "children" : [ 172 ]
  }, {
    "id" : 165,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 166,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 167, 168 ]
  }, {
    "id" : 167,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 168,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 169,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 170,
    "token" : "cparraylength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 171,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 172,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 173 ]
  }, {
    "id" : 173,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 174, 175, 176 ]
  }, {
    "id" : 174,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 175,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 176,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 177, 178, 179, 180 ]
  }, {
    "id" : 177,
    "token" : "x",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 178,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 181, 182 ]
  }, {
    "id" : 179,
    "token" : "y",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 180,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 185, 186 ]
  }, {
    "id" : 181,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 183, 184 ]
  }, {
    "id" : 182,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 183,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 184,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 185,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 187, 188 ]
  }, {
    "id" : 186,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 187,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 188,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 189,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 190, 191, 192, 193, 194 ]
  }, {
    "id" : 190,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 191,
    "token" : "x|quick|sort",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 192,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 193,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 194,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 195, 196 ]
  }, {
    "id" : 195,
    "token" : "cparraylength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 196,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 197,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 198,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 199 ]
  }, {
    "id" : 199,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 200,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 201, 202 ]
  }, {
    "id" : 201,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 202,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 203, 204, 205, 206 ]
  }, {
    "id" : 203,
    "token" : "cp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 204,
    "token" : "closest|pair",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 205,
    "token" : "cparray",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 206,
    "token" : "cparraylength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 207,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 208, 209, 210 ]
  }, {
    "id" : 208,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 209,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 210,
    "token" : "output|data",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 211,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 212, 213, 214 ]
  }, {
    "id" : 212,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 213,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 214,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 215, 216, 217, 218, 219 ]
  }, {
    "id" : 215,
    "token" : "(",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 216,
    "token" : "cppoint|x",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 217,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 218,
    "token" : "cppoint|y",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 219,
    "token" : ")",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 220,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 221, 222, 223 ]
  }, {
    "id" : 221,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 222,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 223,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 224, 225, 226, 227, 228 ]
  }, {
    "id" : 224,
    "token" : "(",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 225,
    "token" : "cppoint|x",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 226,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 227,
    "token" : "cppoint|y",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 228,
    "token" : ")",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 229,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 230, 231, 232 ]
  }, {
    "id" : 230,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 231,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 232,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 233, 234 ]
  }, {
    "id" : 233,
    "token" : "minimum|distance|:",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 234,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "encrpyter",
  "full_name" : "ColumnarTranspositionCiphers.LongJavaFileProject.encrpyter",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public String encrpyter(String word, String keyword) {\n            ColumnarTranspositionCipher.keyword = keyword;\n            abecedariumBuilder(500);\n            table = tableBuilder(word);\n            Object[][] sortedTable = sortTable(table);\n            String wordEncrypted = \"\";\n            for (int i = 0; i < sortedTable[i].length; i++) {\n                for (int j = 1; j < sortedTable.length; j++) {\n                    wordEncrypted += sortedTable[j][i];\n                }\n            }\n            return wordEncrypted;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 3,
    "token" : "encrpyter",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 14, 15, 16, 17, 18, 19, 20 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "keyword",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 21 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 24 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 27 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 32, 33 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 42, 43 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 47, 48, 49, 50 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 82 ]
  }, {
    "id" : 21,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "columnar|transposition|cipherkeyword",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "keyword",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 25, 26 ]
  }, {
    "id" : 25,
    "token" : "abecedarium|builder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "table|builder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 34, 35, 36 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 38, 39 ]
  }, {
    "id" : 34,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 37 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "sorted|table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "sort|table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 44 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 45, 46 ]
  }, {
    "id" : 44,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "word|encrypted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 51, 52 ]
  }, {
    "id" : 48,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 55, 56 ]
  }, {
    "id" : 49,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 61 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "Block",
    "children" : [ 62 ]
  }, {
    "id" : 51,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 53, 54 ]
  }, {
    "id" : 53,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 57, 58 ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 59, 60 ]
  }, {
    "id" : 58,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "sorted|table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 63, 64, 65, 66 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 67, 68 ]
  }, {
    "id" : 64,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 71, 72 ]
  }, {
    "id" : 65,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 73 ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "Block",
    "children" : [ 74 ]
  }, {
    "id" : 67,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 69, 70 ]
  }, {
    "id" : 69,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "sorted|tablelength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 75 ]
  }, {
    "id" : 75,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 76, 77 ]
  }, {
    "id" : 76,
    "token" : "word|encrypted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 78, 79 ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 80, 81 ]
  }, {
    "id" : 79,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "sorted|table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "word|encrypted",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "decrypter",
  "full_name" : "ColumnarTranspositionCiphers.LongJavaFileProject.decrypter",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public String decrypter() {\n            String wordDecrypted = \"\";\n            for (int i = 1; i < table.length; i++) {\n                for (Object item : table[i]) {\n                    wordDecrypted += item;\n                }\n            }\n            return wordDecrypted.replaceAll(ENCRYPTION_FIELD, \"\");\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 5 ]
  }, {
    "id" : 3,
    "token" : "decrypter",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 6, 7, 8 ]
  }, {
    "id" : 5,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 9, 10 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 14, 15, 16, 17 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 38 ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 12, 13 ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "word|decrypted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 18, 19 ]
  }, {
    "id" : 15,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 22, 23 ]
  }, {
    "id" : 16,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 24 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "Block",
    "children" : [ 25 ]
  }, {
    "id" : 18,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "tablelength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 26, 27, 28 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 29, 30 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 32, 33 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "Block",
    "children" : [ 34 ]
  }, {
    "id" : 29,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 31 ]
  }, {
    "id" : 30,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 35 ]
  }, {
    "id" : 35,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "word|decrypted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 39, 40, 41, 42 ]
  }, {
    "id" : 39,
    "token" : "word|decrypted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "replace|all",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "encryption|field",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "tableBuilder",
  "full_name" : "ColumnarTranspositionCiphers.LongJavaFileProject.tableBuilder",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private Object[][] tableBuilder(String word) {\n            Object[][] table = new Object[numberOfRows(word) + 1][keyword.length()];\n            char[] wordInChards = word.toCharArray();\n            //Fils in the respective numbers\n            table[0] = findElements();\n            int charElement = 0;\n            for (int i = 1; i < table.length; i++) {\n                for (int j = 0; j < table[i].length; j++) {\n                    if (charElement < wordInChards.length) {\n                        table[i][j] = wordInChards[charElement];\n                        charElement++;\n                    } else {\n                        table[i][j] = ENCRYPTION_FIELD_CHAR;\n                    }\n                }\n            }\n            return table;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 6, 7, 8 ]
  }, {
    "id" : 3,
    "token" : "table|builder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 13, 14, 15, 16, 17, 18 ]
  }, {
    "id" : 6,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 19, 20 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 40, 41 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 48 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 54, 55 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 58, 59, 60, 61 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 112 ]
  }, {
    "id" : 19,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 21, 22, 23 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 25, 26 ]
  }, {
    "id" : 21,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 24 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 27, 28, 29 ]
  }, {
    "id" : 27,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 30, 31, 32 ]
  }, {
    "id" : 28,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 34, 35 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39 ]
  }, {
    "id" : 30,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 33 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 36, 37 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "number|of|rows",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "keyword",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "char",
    "type" : "ArrayType",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 44, 45 ]
  }, {
    "id" : 42,
    "token" : "char",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "word|in|chards",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 46, 47 ]
  }, {
    "id" : 46,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "to|char|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 49, 50 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 51, 52 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 53 ]
  }, {
    "id" : 51,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "find|elements",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 56, 57 ]
  }, {
    "id" : 56,
    "token" : "char|element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 62, 63 ]
  }, {
    "id" : 59,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 66, 67 ]
  }, {
    "id" : 60,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 68 ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "Block",
    "children" : [ 69 ]
  }, {
    "id" : 62,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 64, 65 ]
  }, {
    "id" : 64,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "tablelength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 70, 71, 72, 73 ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 74, 75 ]
  }, {
    "id" : 71,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 78, 79 ]
  }, {
    "id" : 72,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 84 ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "Block",
    "children" : [ 85 ]
  }, {
    "id" : 74,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 76, 77 ]
  }, {
    "id" : 76,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 80, 81 ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 82, 83 ]
  }, {
    "id" : 81,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 86, 87, 88 ]
  }, {
    "id" : 86,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 89, 90 ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "Block",
    "children" : [ 91, 92 ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "Block",
    "children" : [ 104 ]
  }, {
    "id" : 89,
    "token" : "char|element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "word|in|chardslength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 93 ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 102 ]
  }, {
    "id" : 93,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 94, 95 ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 96, 97 ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 100, 101 ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 98, 99 ]
  }, {
    "id" : 97,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "word|in|chards",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "char|element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 103 ]
  }, {
    "id" : 103,
    "token" : "char|element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 105 ]
  }, {
    "id" : 105,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 106, 107 ]
  }, {
    "id" : 106,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 108, 109 ]
  }, {
    "id" : 107,
    "token" : "encryption|field|char",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 110, 111 ]
  }, {
    "id" : 109,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "numberOfRows",
  "full_name" : "ColumnarTranspositionCiphers.LongJavaFileProject.numberOfRows",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private int numberOfRows(String word) {\n            if ((double) word.length() / keyword.length() > word.length() / keyword.length()) {\n                return (word.length() / keyword.length()) + 1;\n            } else {\n                return word.length() / keyword.length();\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "number|of|rows",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 10, 11, 12 ]
  }, {
    "id" : 10,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 13, 14 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "Block",
    "children" : [ 29 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Block",
    "children" : [ 40 ]
  }, {
    "id" : 13,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 17, 18 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 21, 22 ]
  }, {
    "id" : 17,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "keyword",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 25, 26 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 27, 28 ]
  }, {
    "id" : 25,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "keyword",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 30 ]
  }, {
    "id" : 30,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 33 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 36, 37 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39 ]
  }, {
    "id" : 36,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "keyword",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 41 ]
  }, {
    "id" : 41,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 44, 45 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 46, 47 ]
  }, {
    "id" : 44,
    "token" : "word",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "keyword",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "findElements",
  "full_name" : "ColumnarTranspositionCiphers.LongJavaFileProject.findElements",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         *\n         * @return charValues\n         */",
  "comment" : null,
  "body" : "private Object[] findElements() {\n            Object[] charValues = new Object[keyword.length()];\n            for (int i = 0; i < charValues.length; i++) {\n                int charValueIndex = abecedarium.indexOf(keyword.charAt(i));\n                charValues[i] = charValueIndex > -1 ? charValueIndex : null;\n            }\n            return charValues;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 6 ]
  }, {
    "id" : 2,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 4,
    "token" : "find|elements",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13 ]
  }, {
    "id" : 6,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 7 ]
  }, {
    "id" : 7,
    "token" : "char|values",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 28, 29, 30, 31 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 62 ]
  }, {
    "id" : 14,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 19, 20 ]
  }, {
    "id" : 16,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "char|values",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 21, 22 ]
  }, {
    "id" : 21,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 23, 24 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 26, 27 ]
  }, {
    "id" : 23,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 25 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "keyword",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 32, 33 ]
  }, {
    "id" : 29,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 36, 37 ]
  }, {
    "id" : 30,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 38 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "Block",
    "children" : [ 39, 40 ]
  }, {
    "id" : 32,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "char|valueslength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 41, 42 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 51 ]
  }, {
    "id" : 41,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "char|value|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 45, 46, 47 ]
  }, {
    "id" : 45,
    "token" : "abecedarium",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "index|of",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 48, 49, 50 ]
  }, {
    "id" : 48,
    "token" : "keyword",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "char|at",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 52, 53 ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 54, 55 ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "ConditionalExpression",
    "children" : [ 56, 57, 58 ]
  }, {
    "id" : 54,
    "token" : "char|values",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 59, 60 ]
  }, {
    "id" : 57,
    "token" : "char|value|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "char|value|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 61 ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "char|values",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "sortTable",
  "full_name" : "ColumnarTranspositionCiphers.LongJavaFileProject.sortTable",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private Object[][] sortTable(Object[][] table) {\n            Object[][] tableSorted = new Object[table.length][table[0].length];\n            for (int i = 0; i < tableSorted.length; i++) {\n                System.arraycopy(table[i], 0, tableSorted[i], 0, tableSorted[i].length);\n            }\n            for (int i = 0; i < tableSorted[0].length; i++) {\n                for (int j = i + 1; j < tableSorted[0].length; j++) {\n                    if ((int) tableSorted[0][i] > (int) table[0][j]) {\n                        Object[] column = getColumn(tableSorted, tableSorted.length, i);\n                        switchColumns(tableSorted, j, i, column);\n                    }\n                }\n            }\n            return tableSorted;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 6, 7, 8 ]
  }, {
    "id" : 3,
    "token" : "sort|table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 16, 17, 18, 19 ]
  }, {
    "id" : 6,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 11,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 39, 40, 41, 42 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 67, 68, 69, 70 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 136 ]
  }, {
    "id" : 20,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 22, 23, 24 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 22,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 25 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "table|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 28, 29, 30 ]
  }, {
    "id" : 28,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 31, 32, 33 ]
  }, {
    "id" : 29,
    "token" : "tablelength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 35, 36 ]
  }, {
    "id" : 31,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 34 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 37, 38 ]
  }, {
    "id" : 36,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 43, 44 ]
  }, {
    "id" : 40,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 47, 48 ]
  }, {
    "id" : 41,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 49 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "Block",
    "children" : [ 50 ]
  }, {
    "id" : 43,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 45, 46 ]
  }, {
    "id" : 45,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "table|sortedlength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 51 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 52, 53, 54, 55, 56, 57, 58 ]
  }, {
    "id" : 52,
    "token" : "system",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "arraycopy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 59, 60 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 61, 62 ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 63, 64 ]
  }, {
    "id" : 59,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "table|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 65, 66 ]
  }, {
    "id" : 64,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "table|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 71, 72 ]
  }, {
    "id" : 68,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 75, 76 ]
  }, {
    "id" : 69,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 81 ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "Block",
    "children" : [ 82 ]
  }, {
    "id" : 71,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 73, 74 ]
  }, {
    "id" : 73,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 77, 78 ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 79, 80 ]
  }, {
    "id" : 78,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "table|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 83, 84, 85, 86 ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 87, 88 ]
  }, {
    "id" : 84,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 93, 94 ]
  }, {
    "id" : 85,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 99 ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "Block",
    "children" : [ 100 ]
  }, {
    "id" : 87,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 89, 90 ]
  }, {
    "id" : 89,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 91, 92 ]
  }, {
    "id" : 91,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 95, 96 ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 97, 98 ]
  }, {
    "id" : 96,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "table|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 101, 102 ]
  }, {
    "id" : 101,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 103, 104 ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "Block",
    "children" : [ 117, 118 ]
  }, {
    "id" : 103,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 105, 106 ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 111, 112 ]
  }, {
    "id" : 105,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 107, 108 ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 109, 110 ]
  }, {
    "id" : 108,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "table|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 113, 114 ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 115, 116 ]
  }, {
    "id" : 114,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 119, 120 ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 130 ]
  }, {
    "id" : 119,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 121, 122 ]
  }, {
    "id" : 120,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 124, 125 ]
  }, {
    "id" : 121,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 123 ]
  }, {
    "id" : 122,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "column",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 126, 127, 128, 129 ]
  }, {
    "id" : 126,
    "token" : "get|column",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "table|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "table|sortedlength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 131, 132, 133, 134, 135 ]
  }, {
    "id" : 131,
    "token" : "switch|columns",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 132,
    "token" : "table|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 134,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 135,
    "token" : "column",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "table|sorted",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "getColumn",
  "full_name" : "ColumnarTranspositionCiphers.LongJavaFileProject.getColumn",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private Object[] getColumn(Object[][] table, int rows, int column) {\n            Object[] columnArray = new Object[rows];\n            for (int i = 0; i < rows; i++) {\n                columnArray[i] = table[i][column];\n            }\n            return columnArray;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 3,
    "token" : "get|column",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 17, 18 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 19, 20 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 21, 22, 23 ]
  }, {
    "id" : 8,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 13, 14, 15 ]
  }, {
    "id" : 12,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 16 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "rows",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "column",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 36, 37, 38, 39 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 57 ]
  }, {
    "id" : 24,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 26, 27 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 29, 30 ]
  }, {
    "id" : 26,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 28 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "column|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 33, 34 ]
  }, {
    "id" : 32,
    "token" : "rows",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 35 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 40, 41 ]
  }, {
    "id" : 37,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 44, 45 ]
  }, {
    "id" : 38,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 46 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "Block",
    "children" : [ 47 ]
  }, {
    "id" : 40,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "rows",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 48 ]
  }, {
    "id" : 48,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 49, 50 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 51, 52 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 53, 54 ]
  }, {
    "id" : 51,
    "token" : "column|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 55, 56 ]
  }, {
    "id" : 54,
    "token" : "column",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "column|array",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "switchColumns",
  "full_name" : "ColumnarTranspositionCiphers.LongJavaFileProject.switchColumns",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void switchColumns(Object[][] table, int firstColumnIndex,\n                                          int secondColumnIndex, Object[] columnToSwitch) {\n            for (int i = 0; i < table.length; i++) {\n                table[i][secondColumnIndex] = table[i][firstColumnIndex];\n                table[i][firstColumnIndex] = columnToSwitch[i];\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "switch|columns",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 15, 16 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 17, 18 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 19, 20 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Block",
    "children" : [ 24 ]
  }, {
    "id" : 9,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 11, 12, 13 ]
  }, {
    "id" : 10,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "first|column|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "second|column|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "column|to|switch",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 23 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 25, 26, 27, 28 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 29, 30 ]
  }, {
    "id" : 26,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 33, 34 ]
  }, {
    "id" : 27,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 35 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "Block",
    "children" : [ 36, 37 ]
  }, {
    "id" : 29,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "tablelength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 38 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 49 ]
  }, {
    "id" : 38,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 39, 40 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 41, 42 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 45, 46 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 43, 44 ]
  }, {
    "id" : 42,
    "token" : "second|column|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 47, 48 ]
  }, {
    "id" : 46,
    "token" : "first|column|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 50, 51 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 52, 53 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 56, 57 ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 54, 55 ]
  }, {
    "id" : 53,
    "token" : "first|column|index",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "column|to|switch",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "abecedariumBuilder",
  "full_name" : "ColumnarTranspositionCiphers.LongJavaFileProject.abecedariumBuilder",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void abecedariumBuilder(int value) {\n            abecedarium = \"\";\n            for (int i = 0; i < value; i++) {\n                abecedarium += (char) i;\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "abecedarium|builder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 8, 9 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 13, 14, 15, 16 ]
  }, {
    "id" : 10,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 11, 12 ]
  }, {
    "id" : 11,
    "token" : "abecedarium",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 17, 18 ]
  }, {
    "id" : 14,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 21, 22 ]
  }, {
    "id" : 15,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 23 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "Block",
    "children" : [ 24 ]
  }, {
    "id" : 17,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 25 ]
  }, {
    "id" : 25,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "abecedarium",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "char",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "showTable",
  "full_name" : "ColumnarTranspositionCiphers.LongJavaFileProject.showTable",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void showTable() {\n            for (Object[] table1 : table) {\n                for (Object item : table1) {\n                    System.out.print(item + \" \");\n                }\n                System.out.println();\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "show|table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 6, 7, 8 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 7,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Block",
    "children" : [ 14, 15 ]
  }, {
    "id" : 9,
    "token" : "object",
    "type" : "ArrayType",
    "children" : [ 11, 12 ]
  }, {
    "id" : 10,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 16, 17, 18 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 29 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 19, 20 ]
  }, {
    "id" : 17,
    "token" : "table",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "Block",
    "children" : [ 22 ]
  }, {
    "id" : 19,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 21 ]
  }, {
    "id" : 20,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 23 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 24, 25, 26 ]
  }, {
    "id" : 24,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "print",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "ColumnarTranspositionCiphers.LongJavaFileProject.main",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void main(String[] args) {\n            String keywordForExample = \"asd215\";\n            String wordBeingEncrypted = \"This is a test of the Columnar Transposition Cipher\";\n            System.out.println(\"### Example of Columnar Transposition Cipher ###\\n\");\n            System.out.println(\"Word being encryped ->>> \" + wordBeingEncrypted);\n            System.out.println(\"Word encrypted ->>> \" + ColumnarTranspositionCipher\n                    .encrpyter(wordBeingEncrypted, keywordForExample));\n            System.out.println(\"Word decryped ->>> \" + ColumnarTranspositionCipher\n                    .decrypter());\n            System.out.println(\"\\n### Encrypted Table ###\");\n            showTable();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13, 14, 15, 16, 17, 18 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 19, 20 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 29 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 33 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 39 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 49 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 57 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 61 ]
  }, {
    "id" : 19,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 21 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 21,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "keyword|for|example",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "asd",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 26 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 27, 28 ]
  }, {
    "id" : 26,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "word|being|encrypted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "this|is|a|test|of|the|columnar|transposition|cipher",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 30, 31, 32 ]
  }, {
    "id" : 30,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "###|example|of|columnar|transposition|cipher|###",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 34, 35, 36 ]
  }, {
    "id" : 34,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 37, 38 ]
  }, {
    "id" : 37,
    "token" : "word|being|encryped|->>>",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "word|being|encrypted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 40, 41, 42 ]
  }, {
    "id" : 40,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "word|encrypted|->>>",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 45, 46, 47, 48 ]
  }, {
    "id" : 45,
    "token" : "columnar|transposition|cipher",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "encrpyter",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "word|being|encrypted",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "keyword|for|example",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 50, 51, 52 ]
  }, {
    "id" : 50,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 53, 54 ]
  }, {
    "id" : 53,
    "token" : "word|decryped|->>>",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 55, 56 ]
  }, {
    "id" : 55,
    "token" : "columnar|transposition|cipher",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "decrypter",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 58, 59, 60 ]
  }, {
    "id" : 58,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "###|encrypted|table|###",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 62 ]
  }, {
    "id" : 62,
    "token" : "show|table",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "size",
  "full_name" : "BinarySearchTree.LongJavaFileProject.size",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * @return number of elements in the collection\n         */",
  "comment" : null,
  "body" : "@Override\n        public int size() {\n            return this.size;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 9 ]
  }, {
    "id" : 3,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 7,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "number|of|elements|in|the|collection",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 12, 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "isEmpty",
  "full_name" : "BinarySearchTree.LongJavaFileProject.isEmpty",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * @return if collection is empty\n         */",
  "comment" : null,
  "body" : "@Override\n        public boolean isEmpty() {\n            return size == 0;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 9 ]
  }, {
    "id" : 3,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 7,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "if|collection|is|empty",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 12, 13 ]
  }, {
    "id" : 12,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "contains",
  "full_name" : "BinarySearchTree.LongJavaFileProject.contains",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * @param element to check for contains\n         * @return if the object contains in collection\n         */",
  "comment" : null,
  "body" : "@Override\n        @SuppressWarnings(\"unchecked\")\n        public boolean contains(Object element) {\n            return !isEmpty() && root.contains((T) element);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 9, 10 ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 14 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleMemberAnnotation",
    "children" : [ 15, 16 ]
  }, {
    "id" : 4,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 17, 18 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Block",
    "children" : [ 20 ]
  }, {
    "id" : 9,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 11, 12 ]
  }, {
    "id" : 10,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 13 ]
  }, {
    "id" : 11,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "to|check|for|contains",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "if|the|object|contains|in|collection",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "suppress|warnings",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "unchecked",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 19 ]
  }, {
    "id" : 18,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 21 ]
  }, {
    "id" : 21,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 24 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 26, 27, 28 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 25 ]
  }, {
    "id" : 25,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 29, 30 ]
  }, {
    "id" : 29,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 31 ]
  }, {
    "id" : 30,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "iterator",
  "full_name" : "BinarySearchTree.LongJavaFileProject.iterator",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * @return tree iterator\n         */",
  "comment" : null,
  "body" : "@Override\n        public Iterator<T> iterator() {\n            return new BSTIterator();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 9 ]
  }, {
    "id" : 3,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "iteratort",
    "type" : "ParameterizedType",
    "children" : [ 10, 11 ]
  }, {
    "id" : 5,
    "token" : "iterator",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 14 ]
  }, {
    "id" : 7,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "tree|iterator",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "iterator",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "iterator",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 15 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 16 ]
  }, {
    "id" : 16,
    "token" : "bst|iterator",
    "type" : "SimpleType",
    "children" : [ 17 ]
  }, {
    "id" : 17,
    "token" : "bst|iterator",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "toArray",
  "full_name" : "BinarySearchTree.LongJavaFileProject.toArray",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Method adding elements from the collection to array\n         * @param array to add elements\n         * @param <T1> parameter of array elements\n         * @return array with elements from the collection\n         */",
  "comment" : null,
  "body" : "@Override\n        @SuppressWarnings(\"unchecked\")\n        public <T1>T1[] toArray(T1[] array) {\n            ArrayList<T1> result = new ArrayList<>();\n            for (T tmp : this) {\n                result.add((T1) tmp);\n            }\n            return result.toArray(array);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 10, 11, 12, 13 ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 22 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleMemberAnnotation",
    "children" : [ 23, 24 ]
  }, {
    "id" : 4,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "TypeParameter",
    "children" : [ 25 ]
  }, {
    "id" : 6,
    "token" : "t|[]",
    "type" : "ArrayType",
    "children" : [ 26, 27 ]
  }, {
    "id" : 7,
    "token" : "to|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 29, 30 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Block",
    "children" : [ 34, 35, 36 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 14 ]
  }, {
    "id" : 11,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 15, 16 ]
  }, {
    "id" : 12,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 17, 18, 19, 20 ]
  }, {
    "id" : 13,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 21 ]
  }, {
    "id" : 14,
    "token" : "method|adding|elements|from|the|collection|to|array",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "to|add|elements",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "<",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : ">",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "parameter|of|array|elements",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "array|with|elements|from|the|collection",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "suppress|warnings",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "unchecked",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 28 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "t|[]",
    "type" : "ArrayType",
    "children" : [ 31, 32 ]
  }, {
    "id" : 30,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 33 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 37, 38 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 48, 49, 50 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 62 ]
  }, {
    "id" : 37,
    "token" : "array|listt|>",
    "type" : "ParameterizedType",
    "children" : [ 39, 40 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 43, 44 ]
  }, {
    "id" : 39,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 41 ]
  }, {
    "id" : 40,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 42 ]
  }, {
    "id" : 41,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 45 ]
  }, {
    "id" : 45,
    "token" : "array|list",
    "type" : "ParameterizedType",
    "children" : [ 46 ]
  }, {
    "id" : 46,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 47 ]
  }, {
    "id" : 47,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 51, 52 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "Block",
    "children" : [ 54 ]
  }, {
    "id" : 51,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 53 ]
  }, {
    "id" : 52,
    "token" : "tmp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 55 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 56, 57, 58 ]
  }, {
    "id" : 56,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 59, 60 ]
  }, {
    "id" : 59,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 61 ]
  }, {
    "id" : 60,
    "token" : "tmp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 63, 64, 65 ]
  }, {
    "id" : 63,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "to|array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "add",
  "full_name" : "BinarySearchTree.LongJavaFileProject.add",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Method adding element to the collection\n         * @param value element to add\n         * @return if the element will be added\n         */",
  "comment" : null,
  "body" : "@Override\n        public boolean add(T value) {\n            if (root == null) {\n                root = new Node(value);\n                ++size;\n                return true;\n            }\n            return root.add(value);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 8, 9, 10 ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 15 ]
  }, {
    "id" : 3,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 16, 17 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 19, 20 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 11 ]
  }, {
    "id" : 9,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 10,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 14 ]
  }, {
    "id" : 11,
    "token" : "method|adding|element|to|the|collection",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "element|to|add",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "if|the|element|will|be|added",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 37 ]
  }, {
    "id" : 21,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "Block",
    "children" : [ 25, 26, 27 ]
  }, {
    "id" : 23,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 28 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 34 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 36 ]
  }, {
    "id" : 28,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 29, 30 ]
  }, {
    "id" : 29,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 33 ]
  }, {
    "id" : 32,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "++",
    "type" : "PrefixExpression",
    "children" : [ 35 ]
  }, {
    "id" : 35,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39, 40 ]
  }, {
    "id" : 38,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "remove",
  "full_name" : "BinarySearchTree.LongJavaFileProject.remove",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Method removing element from the collection\n         * @param value to remove from collection\n         * @return if the element will be removed\n         */",
  "comment" : null,
  "body" : "@Override\n        @SuppressWarnings(\"unchecked\")\n        public boolean remove(Object value) {\n            return !isEmpty() && root.remove((T) value);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 9, 10, 11 ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 16 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleMemberAnnotation",
    "children" : [ 17, 18 ]
  }, {
    "id" : 4,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "remove",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 19, 20 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Block",
    "children" : [ 22 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 12 ]
  }, {
    "id" : 10,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 13, 14 ]
  }, {
    "id" : 11,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 15 ]
  }, {
    "id" : 12,
    "token" : "method|removing|element|from|the|collection",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "to|remove|from|collection",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "if|the|element|will|be|removed",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "suppress|warnings",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "unchecked",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 21 ]
  }, {
    "id" : 20,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 23 ]
  }, {
    "id" : 23,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 26 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28, 29, 30 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 27 ]
  }, {
    "id" : 27,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "remove",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 33 ]
  }, {
    "id" : 32,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "containsAll",
  "full_name" : "BinarySearchTree.LongJavaFileProject.containsAll",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * @param collection to check for contains\n         * @return if Tree contains every element from the collection\n         */",
  "comment" : null,
  "body" : "@Override\n        public boolean containsAll(Collection<?> collection) {\n            boolean result = true;\n            for (Object tmp : collection) {\n                result &= contains(tmp);\n            }\n            return result;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 8, 9 ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 13 ]
  }, {
    "id" : 3,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "contains|all",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 19, 20, 21 ]
  }, {
    "id" : 8,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 10, 11 ]
  }, {
    "id" : 9,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 12 ]
  }, {
    "id" : 10,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "to|check|for|contains",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "if|tree|contains|every|element|from|the|collection",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "collection",
    "type" : "ParameterizedType",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "collection",
    "type" : "SimpleType",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "?",
    "type" : "WildcardType",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 26, 27, 28 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 38 ]
  }, {
    "id" : 22,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 29, 30 ]
  }, {
    "id" : 27,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "Block",
    "children" : [ 32 ]
  }, {
    "id" : 29,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 31 ]
  }, {
    "id" : 30,
    "token" : "tmp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 33 ]
  }, {
    "id" : 33,
    "token" : "&=",
    "type" : "Assignment",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "tmp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "addAll",
  "full_name" : "BinarySearchTree.LongJavaFileProject.addAll",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * @param collection with elements to add\n         * @return if all elements will be added\n         */",
  "comment" : null,
  "body" : "@Override\n        public boolean addAll(Collection<? extends T> collection) {\n            boolean result = true;\n            for (T tmp : collection) {\n                result &= add(tmp);\n            }\n            return result;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 8, 9 ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 13 ]
  }, {
    "id" : 3,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "add|all",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 21, 22, 23 ]
  }, {
    "id" : 8,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 10, 11 ]
  }, {
    "id" : 9,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 12 ]
  }, {
    "id" : 10,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "with|elements|to|add",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "if|all|elements|will|be|added",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "collection|extends|t",
    "type" : "ParameterizedType",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "collection",
    "type" : "SimpleType",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "?|extends|t",
    "type" : "WildcardType",
    "children" : [ 19 ]
  }, {
    "id" : 18,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 20,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 28, 29, 30 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 40 ]
  }, {
    "id" : 24,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 31, 32 ]
  }, {
    "id" : 29,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "Block",
    "children" : [ 34 ]
  }, {
    "id" : 31,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 33 ]
  }, {
    "id" : 32,
    "token" : "tmp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 35 ]
  }, {
    "id" : 35,
    "token" : "&=",
    "type" : "Assignment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39 ]
  }, {
    "id" : 38,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "tmp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "removeAll",
  "full_name" : "BinarySearchTree.LongJavaFileProject.removeAll",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * @param collection with elements to remove\n         * @return if all elements will be removed\n         */",
  "comment" : null,
  "body" : "@Override\n        public boolean removeAll(Collection<?> collection) {\n            boolean result = true;\n            for (Object tmp : collection) {\n                result &= remove(tmp);\n            }\n            return result;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 8, 9 ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 13 ]
  }, {
    "id" : 3,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "remove|all",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 19, 20, 21 ]
  }, {
    "id" : 8,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 10, 11 ]
  }, {
    "id" : 9,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 12 ]
  }, {
    "id" : 10,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "with|elements|to|remove",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "if|all|elements|will|be|removed",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "collection",
    "type" : "ParameterizedType",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "collection",
    "type" : "SimpleType",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "?",
    "type" : "WildcardType",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 26, 27, 28 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 38 ]
  }, {
    "id" : 22,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 29, 30 ]
  }, {
    "id" : 27,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "Block",
    "children" : [ 32 ]
  }, {
    "id" : 29,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 31 ]
  }, {
    "id" : 30,
    "token" : "tmp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 33 ]
  }, {
    "id" : 33,
    "token" : "&=",
    "type" : "Assignment",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "remove",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "tmp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "retainAll",
  "full_name" : "BinarySearchTree.LongJavaFileProject.retainAll",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * @param collection with elements to retain\n         * @return if this collection will be changed\n         */",
  "comment" : null,
  "body" : "@Override\n        public boolean retainAll(Collection<?> collection) {\n            boolean result = false;\n            for (Object tmp : collection) {\n                if (contains(tmp)) {\n                    remove(tmp);\n                    result = true;\n                }\n            }\n            return result;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 8, 9 ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 13 ]
  }, {
    "id" : 3,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "retain|all",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 19, 20, 21 ]
  }, {
    "id" : 8,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 10, 11 ]
  }, {
    "id" : 9,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 12 ]
  }, {
    "id" : 10,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "with|elements|to|retain",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "if|this|collection|will|be|changed",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "collection",
    "type" : "ParameterizedType",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "collection",
    "type" : "SimpleType",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "?",
    "type" : "WildcardType",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 26, 27, 28 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 45 ]
  }, {
    "id" : 22,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 29, 30 ]
  }, {
    "id" : 27,
    "token" : "collection",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "Block",
    "children" : [ 32 ]
  }, {
    "id" : 29,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 31 ]
  }, {
    "id" : 30,
    "token" : "tmp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 35, 36 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "Block",
    "children" : [ 37, 38 ]
  }, {
    "id" : 35,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "tmp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 39 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 42 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "remove",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "tmp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "clear",
  "full_name" : "BinarySearchTree.LongJavaFileProject.clear",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Clear the collection\n         */",
  "comment" : null,
  "body" : "@Override\n        public void clear() {\n            root = null;\n            size = 0;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 9 ]
  }, {
    "id" : 3,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "clear",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 10, 11 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "clear|the|collection",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 15 ]
  }, {
    "id" : 12,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 13, 14 ]
  }, {
    "id" : 13,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "toString",
  "full_name" : "BinarySearchTree.LongJavaFileProject.toString",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * @return String representation of the collection\n         */",
  "comment" : null,
  "body" : "@Override\n        public String toString() {\n            return isEmpty() ? \"null\" : root.toString();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 9 ]
  }, {
    "id" : 3,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 5,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 11 ]
  }, {
    "id" : 7,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "string|representation|of|the|collection",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 12 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ConditionalExpression",
    "children" : [ 13, 14, 15 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 16 ]
  }, {
    "id" : 14,
    "token" : "null",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 17, 18 ]
  }, {
    "id" : 16,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "getAll",
  "full_name" : "BinarySearchTree.LongJavaFileProject.getAll",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Methods gets all Nodes from current subtree to the List\n         * @param node subtree to get Nodes\n         * @param elements List to add elements\n         * @return List with elements\n         */",
  "comment" : null,
  "body" : "private ArrayList<Node> getAll(Node node, ArrayList<Node> elements) {\n            if (node.left != null) {\n                getAll(node.left, elements);\n            }\n            elements.add(node);\n            if (node.right != null) {\n                getAll(node.right, elements);\n            }\n            return elements;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 8, 9, 10, 11 ]
  }, {
    "id" : 2,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "array|listnode",
    "type" : "ParameterizedType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 4,
    "token" : "get|all",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 22, 23 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 25, 26 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 31, 32, 33, 34 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 12 ]
  }, {
    "id" : 9,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 13, 14 ]
  }, {
    "id" : 10,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 15, 16 ]
  }, {
    "id" : 11,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 17 ]
  }, {
    "id" : 12,
    "token" : "methods|gets|all|nodes|from|current|subtree|to|the|list",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "subtree|to|get|nodes",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "elements",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "list|to|add|elements",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "list|with|elements",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 21 ]
  }, {
    "id" : 20,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 24 ]
  }, {
    "id" : 23,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "array|listnode",
    "type" : "ParameterizedType",
    "children" : [ 27, 28 ]
  }, {
    "id" : 26,
    "token" : "elements",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "array|list",
    "type" : "SimpleType",
    "children" : [ 29 ]
  }, {
    "id" : 28,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 30 ]
  }, {
    "id" : 29,
    "token" : "array|list",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 35, 36 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 44 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 48, 49 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 57 ]
  }, {
    "id" : 35,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 37, 38 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "Block",
    "children" : [ 39 ]
  }, {
    "id" : 37,
    "token" : "nodeleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 40 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 41, 42, 43 ]
  }, {
    "id" : 41,
    "token" : "get|all",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "nodeleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "elements",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 45, 46, 47 ]
  }, {
    "id" : 45,
    "token" : "elements",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 50, 51 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "Block",
    "children" : [ 52 ]
  }, {
    "id" : 50,
    "token" : "noderight",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 53 ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 54, 55, 56 ]
  }, {
    "id" : 54,
    "token" : "get|all",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "noderight",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "elements",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "elements",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "BSTIterator",
  "full_name" : "BSTIterator.BinarySearchTree.LongJavaFileProject.BSTIterator",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private BSTIterator() {\n                if (!isEmpty()) {\n                    BinarySearchTree.this.getAll(root, elements);\n                }\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "bst|iterator",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 9 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 10 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 11, 12, 13, 14 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ 15 ]
  }, {
    "id" : 12,
    "token" : "get|all",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "elements",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "binary|search|tree",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "hasNext",
  "full_name" : "BSTIterator.BinarySearchTree.LongJavaFileProject.hasNext",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n             * @return if the next element exist\n             */",
  "comment" : null,
  "body" : "@Override\n            public boolean hasNext() {\n                return !elements.isEmpty() && treeContainsAtLeastOneElement();\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 9 ]
  }, {
    "id" : 3,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "has|next",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 7,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "if|the|next|element|exist",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 12, 13 ]
  }, {
    "id" : 12,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 17 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 15, 16 ]
  }, {
    "id" : 15,
    "token" : "elements",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "tree|contains|at|least|one|element",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "treeContainsAtLeastOneElement",
  "full_name" : "BSTIterator.BinarySearchTree.LongJavaFileProject.treeContainsAtLeastOneElement",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n             * @return if the List contains at least one element from the tree\n             */",
  "comment" : null,
  "body" : "private boolean treeContainsAtLeastOneElement() {\n                for (Node tmp : elements) {\n                    if (BinarySearchTree.this.contains(tmp.value)) {\n                        return true;\n                    }\n                }\n                return false;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 6 ]
  }, {
    "id" : 2,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "tree|contains|at|least|one|element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 8, 9 ]
  }, {
    "id" : 6,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 7 ]
  }, {
    "id" : 7,
    "token" : "if|the|list|contains|at|least|one|element|from|the|tree",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 10, 11, 12 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 25 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 13, 14 ]
  }, {
    "id" : 11,
    "token" : "elements",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Block",
    "children" : [ 16 ]
  }, {
    "id" : 13,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 14,
    "token" : "tmp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 17, 18 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 19, 20, 21 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "Block",
    "children" : [ 23 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ 22 ]
  }, {
    "id" : 20,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "tmpvalue",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "binary|search|tree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 24 ]
  }, {
    "id" : 24,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "next",
  "full_name" : "BSTIterator.BinarySearchTree.LongJavaFileProject.next",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n             * @return value of next element, null if it does not exist\n             */",
  "comment" : null,
  "body" : "@Override\n            public T next() {\n                if (elements.isEmpty()) {\n                    return null;\n                }\n                if (!root.contains(elements.get(0).value)) {\n                    elements.remove(0);\n                    return next();\n                }\n                return elements.remove(0).value;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 9 ]
  }, {
    "id" : 3,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 5,
    "token" : "next",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13 ]
  }, {
    "id" : 7,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "value|of|next|element|null|if|it|does|not|exist",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 39 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "Block",
    "children" : [ 18 ]
  }, {
    "id" : 16,
    "token" : "elements",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 19 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 22 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "Block",
    "children" : [ 31, 32 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 23, 24, 25 ]
  }, {
    "id" : 23,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28, 29, 30 ]
  }, {
    "id" : 27,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "elements",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 33 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 37 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 34, 35, 36 ]
  }, {
    "id" : 34,
    "token" : "elements",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "remove",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38 ]
  }, {
    "id" : 38,
    "token" : "next",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 42, 43, 44 ]
  }, {
    "id" : 41,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "elements",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "remove",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "Node",
  "full_name" : "Node.BinarySearchTree.LongJavaFileProject.Node",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private Node(T value) {\n                this.value = value;\n                this.parent = null;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 15 ]
  }, {
    "id" : 10,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 11, 12 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 13, 14 ]
  }, {
    "id" : 12,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "parent",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "add",
  "full_name" : "Node.BinarySearchTree.LongJavaFileProject.add",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n             * Method adds an element with a specified value\n             * @param value of new element\n             */",
  "comment" : null,
  "body" : "private boolean add(T value) {\n                if (value.compareTo(this.value) < 0) {\n                    if (left == null) {\n                        left = new Node(value, this);\n                        ++size;\n                        return true;\n                    }\n                    left.add(value);\n                } else  if (value.compareTo(this.value) > 0) {\n                    if (right == null) {\n                        right = new Node(value, this);\n                        ++size;\n                        return true;\n                    }\n                    right.add(value);\n                }\n                return false;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7, 8 ]
  }, {
    "id" : 2,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 12, 13 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 15, 16 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 10, 11 ]
  }, {
    "id" : 9,
    "token" : "method|adds|an|element|with|a|specified|value",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "of|new|element",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 82 ]
  }, {
    "id" : 17,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 20, 21 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "Block",
    "children" : [ 27, 28 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 50, 51 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 22, 23, 24 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "compare|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 25, 26 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 29, 30 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 46 ]
  }, {
    "id" : 29,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "Block",
    "children" : [ 33, 34, 35 ]
  }, {
    "id" : 31,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 36 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 43 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 45 ]
  }, {
    "id" : 36,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 37, 38 ]
  }, {
    "id" : 37,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 39, 40, 41 ]
  }, {
    "id" : 39,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 42 ]
  }, {
    "id" : 40,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "++",
    "type" : "PrefixExpression",
    "children" : [ 44 ]
  }, {
    "id" : 44,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 47, 48, 49 ]
  }, {
    "id" : 47,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 52, 53 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "Block",
    "children" : [ 59, 60 ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 54, 55, 56 ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "compare|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 57, 58 ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 61, 62 ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 78 ]
  }, {
    "id" : 61,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 63, 64 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "Block",
    "children" : [ 65, 66, 67 ]
  }, {
    "id" : 63,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 68 ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 75 ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 77 ]
  }, {
    "id" : 68,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 69, 70 ]
  }, {
    "id" : 69,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 71, 72, 73 ]
  }, {
    "id" : 71,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 74 ]
  }, {
    "id" : 72,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "++",
    "type" : "PrefixExpression",
    "children" : [ 76 ]
  }, {
    "id" : 76,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 79, 80, 81 ]
  }, {
    "id" : 79,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "add",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "remove",
  "full_name" : "Node.BinarySearchTree.LongJavaFileProject.remove",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n             * Method removes an element with a specified value\n             * @param value of element to remove\n             */",
  "comment" : null,
  "body" : "private boolean remove(T value) {\n                boolean result = false;\n                if (value.compareTo(this.value) < 0) {\n                    result = left != null && left.remove(value);\n                } else if (value.compareTo(this.value) > 0) {\n                    result = right != null && right.remove(value);\n                } else {\n                    --size;\n                    this.remove();\n                }\n                return result;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7, 8 ]
  }, {
    "id" : 2,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "remove",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 12, 13 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 10, 11 ]
  }, {
    "id" : 9,
    "token" : "method|removes|an|element|with|a|specified|value",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "of|element|to|remove",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 18, 19 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 22, 23, 24 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 71 ]
  }, {
    "id" : 18,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 25, 26 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "Block",
    "children" : [ 32 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 43, 44, 45 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 27, 28, 29 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "compare|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 33 ]
  }, {
    "id" : 33,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 38, 39 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 40, 41, 42 ]
  }, {
    "id" : 38,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "remove",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 46, 47 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "Block",
    "children" : [ 53 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "Block",
    "children" : [ 64, 65 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 48, 49, 50 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "compare|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 51, 52 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 54 ]
  }, {
    "id" : 54,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 55, 56 ]
  }, {
    "id" : 55,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 57, 58 ]
  }, {
    "id" : 57,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 59, 60 ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 61, 62, 63 ]
  }, {
    "id" : 59,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "remove",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 66 ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 68 ]
  }, {
    "id" : 66,
    "token" : "--",
    "type" : "PrefixExpression",
    "children" : [ 67 ]
  }, {
    "id" : 67,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 69, 70 ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "remove",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "findMinimalInRightSubtree",
  "full_name" : "Node.BinarySearchTree.LongJavaFileProject.findMinimalInRightSubtree",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n             * @return Node with minimum value in the subtree\n             */",
  "comment" : null,
  "body" : "private Node findMinimalInRightSubtree() {\n                Node current = this.right;\n                while (current.left != null) {\n                    current = current.left;\n                }\n                return current;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 6 ]
  }, {
    "id" : 2,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 4,
    "token" : "find|minimal|in|right|subtree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10, 11 ]
  }, {
    "id" : 6,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 7 ]
  }, {
    "id" : 7,
    "token" : "node|with|minimum|value|in|the|subtree",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 19, 20 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 27 ]
  }, {
    "id" : 12,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "current",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 17, 18 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "Block",
    "children" : [ 23 ]
  }, {
    "id" : 21,
    "token" : "currentleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 24 ]
  }, {
    "id" : 24,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 25, 26 ]
  }, {
    "id" : 25,
    "token" : "current",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "currentleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "current",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "changeNode",
  "full_name" : "Node.BinarySearchTree.LongJavaFileProject.changeNode",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void changeNode(Node newNode) {\n                if (newNode == null) {\n                    if (parent == null) {\n                        root = null;\n                    } else {\n                        if (equals(parent.left)) {\n                            parent.left = null;\n                        } else {\n                            parent.right = null;\n                        }\n                    }\n                    return;\n                }\n                value = newNode.value;\n                if (newNode.equals(newNode.parent.left)) {\n                    newNode.parent.left = newNode.left;\n                } else {\n                    newNode.parent.right = newNode.right;\n                }\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "change|node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10, 11 ]
  }, {
    "id" : 6,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "new|node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 41 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 44, 45, 46 ]
  }, {
    "id" : 12,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 14, 15 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "Block",
    "children" : [ 16, 17 ]
  }, {
    "id" : 14,
    "token" : "new|node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 18, 19, 20 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 21, 22 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Block",
    "children" : [ 23 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "Block",
    "children" : [ 27 ]
  }, {
    "id" : 21,
    "token" : "parent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 24 ]
  }, {
    "id" : 24,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 25, 26 ]
  }, {
    "id" : 25,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 28, 29, 30 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 31, 32 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "Block",
    "children" : [ 33 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "Block",
    "children" : [ 37 ]
  }, {
    "id" : 31,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "parentleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 34 ]
  }, {
    "id" : 34,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "parentleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 38 ]
  }, {
    "id" : 38,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 39, 40 ]
  }, {
    "id" : 39,
    "token" : "parentright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "new|nodevalue",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 47, 48, 49 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "Block",
    "children" : [ 50 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "Block",
    "children" : [ 54 ]
  }, {
    "id" : 47,
    "token" : "new|node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "new|nodeparentleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 51 ]
  }, {
    "id" : 51,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 52, 53 ]
  }, {
    "id" : 52,
    "token" : "new|nodeparentleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "new|nodeleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 55 ]
  }, {
    "id" : 55,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 56, 57 ]
  }, {
    "id" : 56,
    "token" : "new|nodeparentright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "new|noderight",
    "type" : "QualifiedName",
    "children" : [ ]
  } ]
}, {
  "name" : "contains",
  "full_name" : "Node.BinarySearchTree.LongJavaFileProject.contains",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n             * @param element to check for contains\n             * @return if the object contains in the subtree\n             */",
  "comment" : null,
  "body" : "private boolean contains(T element) {\n                if (value.equals(element)) {\n                    return true;\n                }\n                if (value.compareTo(element) > 0) {\n                    return left != null && left.contains(element);\n                }\n                return right != null && right.contains(element);\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7, 8 ]
  }, {
    "id" : 2,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 12, 13 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 7,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 11 ]
  }, {
    "id" : 9,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "to|check|for|contains",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "if|the|object|contains|in|the|subtree",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "t",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 18, 19 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 25, 26 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 41 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 20, 21, 22 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Block",
    "children" : [ 23 ]
  }, {
    "id" : 20,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 24 ]
  }, {
    "id" : 24,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 27, 28 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "Block",
    "children" : [ 32 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 29, 30, 31 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "compare|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 33 ]
  }, {
    "id" : 33,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 36, 37 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39, 40 ]
  }, {
    "id" : 36,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 44, 45 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 46, 47, 48 ]
  }, {
    "id" : 44,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "element",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "toString",
  "full_name" : "Node.BinarySearchTree.LongJavaFileProject.toString",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n             * @return String representation of the subtree\n             */",
  "comment" : null,
  "body" : "@Override\n            public String toString() {\n                StringBuilder result = new StringBuilder();\n                result.append(\"(\").append(value.toString()).append(\" \");\n                result.append(left == null ? \"null\" : left.toString()).append(\" \");\n                result.append(right == null ? \"null\" : right.toString()).append(\")\");\n                return result.toString();\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 9 ]
  }, {
    "id" : 3,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 5,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13, 14, 15 ]
  }, {
    "id" : 7,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "string|representation|of|the|subtree",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 23 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 35 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 49 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 63 ]
  }, {
    "id" : 16,
    "token" : "string|builder",
    "type" : "SimpleType",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 19, 20 ]
  }, {
    "id" : 18,
    "token" : "string|builder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 21 ]
  }, {
    "id" : 21,
    "token" : "string|builder",
    "type" : "SimpleType",
    "children" : [ 22 ]
  }, {
    "id" : 22,
    "token" : "string|builder",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 24, 25, 26 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 27, 28, 29 ]
  }, {
    "id" : 25,
    "token" : "append",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 30, 31, 32 ]
  }, {
    "id" : 28,
    "token" : "append",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 33, 34 ]
  }, {
    "id" : 30,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "append",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "(",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 36, 37, 38 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 39, 40, 41 ]
  }, {
    "id" : 37,
    "token" : "append",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "append",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "ConditionalExpression",
    "children" : [ 42, 43, 44 ]
  }, {
    "id" : 42,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 45, 46 ]
  }, {
    "id" : 43,
    "token" : "null",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 47, 48 ]
  }, {
    "id" : 45,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 50, 51, 52 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 53, 54, 55 ]
  }, {
    "id" : 51,
    "token" : "append",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : ")",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "append",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "ConditionalExpression",
    "children" : [ 56, 57, 58 ]
  }, {
    "id" : 56,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 59, 60 ]
  }, {
    "id" : 57,
    "token" : "null",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 61, 62 ]
  }, {
    "id" : 59,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 64, 65 ]
  }, {
    "id" : 64,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "Point2D",
  "full_name" : "Point2D.LongJavaFileProject.Point2D",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Initializes a new point (x, y).\n         * @param x the x-coordinate\n         * @param y the y-coordinate\n         * @throws IllegalArgumentException if either {@code x} or {@code y}\n         *    is {@code Double.NaN}, {@code Double.POSITIVE_INFINITY} or\n         *    {@code Double.NEGATIVE_INFINITY}\n         */",
  "comment" : null,
  "body" : "public Point2D(double x, double y) {\n            if (Double.isInfinite(x) || Double.isInfinite(y))\n                throw new IllegalArgumentException(\"Coordinates must be finite\");\n            if (Double.isNaN(x) || Double.isNaN(y))\n                throw new IllegalArgumentException(\"Coordinates cannot be NaN\");\n            if (x == 0.0) this.x = 0.0;  // convert -0.0 to +0.0\n            else          this.x = x;\n\n            if (y == 0.0) this.y = 0.0;  // convert -0.0 to +0.0\n            else          this.y = y;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7, 8, 9, 10 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 32, 33 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 34, 35 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 36, 37, 38, 39 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 11 ]
  }, {
    "id" : 8,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 9,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 10,
    "token" : "throws",
    "type" : "TagElement",
    "children" : [ 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 ]
  }, {
    "id" : 11,
    "token" : "initializes|a|new|point|x|y",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "the|xcoordinate",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "the|ycoordinate",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "if|either",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 27 ]
  }, {
    "id" : 19,
    "token" : "or",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 28 ]
  }, {
    "id" : 21,
    "token" : "is",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 29 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 30 ]
  }, {
    "id" : 25,
    "token" : "or",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 31 ]
  }, {
    "id" : 27,
    "token" : "x",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "y",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "doublena|n",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "doublepositive|infinity",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "doublenegative|infinity",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 40, 41 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 54, 55 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 68, 69, 70 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 83, 84, 85 ]
  }, {
    "id" : 40,
    "token" : "||",
    "type" : "InfixExpression",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 50 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 44, 45, 46 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 47, 48, 49 ]
  }, {
    "id" : 44,
    "token" : "double",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "is|infinite",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "double",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "is|infinite",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 51, 52 ]
  }, {
    "id" : 51,
    "token" : "illegal|argument|exception",
    "type" : "SimpleType",
    "children" : [ 53 ]
  }, {
    "id" : 52,
    "token" : "coordinates|must|be|finite",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "||",
    "type" : "InfixExpression",
    "children" : [ 56, 57 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 64 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 58, 59, 60 ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 61, 62, 63 ]
  }, {
    "id" : 58,
    "token" : "double",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "is|na|n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "double",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "is|na|n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 65, 66 ]
  }, {
    "id" : 65,
    "token" : "illegal|argument|exception",
    "type" : "SimpleType",
    "children" : [ 67 ]
  }, {
    "id" : 66,
    "token" : "coordinates|cannot|be|na|n",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 71, 72 ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 73 ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 78 ]
  }, {
    "id" : 71,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : ".",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 74, 75 ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 76, 77 ]
  }, {
    "id" : 75,
    "token" : ".",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 79, 80 ]
  }, {
    "id" : 79,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 81, 82 ]
  }, {
    "id" : 80,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 86, 87 ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 88 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 93 ]
  }, {
    "id" : 86,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : ".",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 89, 90 ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 91, 92 ]
  }, {
    "id" : 90,
    "token" : ".",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 94, 95 ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 96, 97 ]
  }, {
    "id" : 95,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "x",
  "full_name" : "Point2D.LongJavaFileProject.x",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Returns the x-coordinate.\n         * @return the x-coordinate\n         */",
  "comment" : null,
  "body" : "public double x() {\n            return x;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 6, 7 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "returns|the|xcoordinate",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "the|xcoordinate",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "y",
  "full_name" : "Point2D.LongJavaFileProject.y",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public double y() {\n            return y;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "r",
  "full_name" : "Point2D.LongJavaFileProject.r",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public double r() {\n            return Math.sqrt(x*x + y*y);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "r",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 7, 8, 9 ]
  }, {
    "id" : 7,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "sqrt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 10, 11 ]
  }, {
    "id" : 10,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 12, 13 ]
  }, {
    "id" : 11,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 14, 15 ]
  }, {
    "id" : 12,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "theta",
  "full_name" : "Point2D.LongJavaFileProject.theta",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public double theta() {\n            return Math.atan2(y, x);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "theta",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 7, 8, 9, 10 ]
  }, {
    "id" : 7,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "atan",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "angleTo",
  "full_name" : "Point2D.LongJavaFileProject.angleTo",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private double angleTo(Point2D that) {\n            double dx = that.x - this.x;\n            double dy = that.y - this.y;\n            return Math.atan2(dy, dx);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "angle|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10, 11 ]
  }, {
    "id" : 6,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "that",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 28 ]
  }, {
    "id" : 12,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "dx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "thatx",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 18, 19 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "dy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "thaty",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 29, 30, 31, 32 ]
  }, {
    "id" : 29,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "atan",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "dy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "dx",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "ccw",
  "full_name" : "Point2D.LongJavaFileProject.ccw",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int ccw(Point2D a, Point2D b, Point2D c) {\n            double area2 = (b.x-a.x)*(c.y-a.y) - (b.y-a.y)*(c.x-a.x);\n            if      (area2 < 0) return -1;\n            else if (area2 > 0) return +1;\n            else                return  0;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "ccw",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 17, 18 ]
  }, {
    "id" : 8,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 16 ]
  }, {
    "id" : 15,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 19, 20 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 41, 42, 43 ]
  }, {
    "id" : 19,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 21, 22 ]
  }, {
    "id" : 21,
    "token" : "area",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 23,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 25, 26 ]
  }, {
    "id" : 24,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 33, 34 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 27 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 30 ]
  }, {
    "id" : 27,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "bx",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "ax",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "cy",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "ay",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 35 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 38 ]
  }, {
    "id" : 35,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "by",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "ay",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 39, 40 ]
  }, {
    "id" : 39,
    "token" : "cx",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "ax",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 44, 45 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 46 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 48, 49, 50 ]
  }, {
    "id" : 44,
    "token" : "area",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 47 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 51, 52 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 53 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 55 ]
  }, {
    "id" : 51,
    "token" : "area",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "+",
    "type" : "PrefixExpression",
    "children" : [ 54 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "area2",
  "full_name" : "Point2D.LongJavaFileProject.area2",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public double area2(Point2D a, Point2D b, Point2D c) {\n            return (b.x-a.x)*(c.y-a.y) - (b.y-a.y)*(c.x-a.x);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "area",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 17 ]
  }, {
    "id" : 8,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 16 ]
  }, {
    "id" : 15,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 18 ]
  }, {
    "id" : 18,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 29, 30 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 23 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 26 ]
  }, {
    "id" : 23,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "bx",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "ax",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "cy",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "ay",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 31 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 34 ]
  }, {
    "id" : 31,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 32, 33 ]
  }, {
    "id" : 32,
    "token" : "by",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "ay",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "cx",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "ax",
    "type" : "QualifiedName",
    "children" : [ ]
  } ]
}, {
  "name" : "distanceTo",
  "full_name" : "Point2D.LongJavaFileProject.distanceTo",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public double distanceTo(Point2D that) {\n            double dx = this.x - that.x;\n            double dy = this.y - that.y;\n            return Math.sqrt(dx*dx + dy*dy);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "distance|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10, 11 ]
  }, {
    "id" : 6,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "that",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 28 ]
  }, {
    "id" : 12,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "dx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "thatx",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "dy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 26, 27 ]
  }, {
    "id" : 25,
    "token" : "thaty",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 29, 30, 31 ]
  }, {
    "id" : 29,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "sqrt",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 32, 33 ]
  }, {
    "id" : 32,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 34, 35 ]
  }, {
    "id" : 33,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 36, 37 ]
  }, {
    "id" : 34,
    "token" : "dx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "dx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "dy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "dy",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "distanceSquaredTo",
  "full_name" : "Point2D.LongJavaFileProject.distanceSquaredTo",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public double distanceSquaredTo(Point2D that) {\n            double dx = this.x - that.x;\n            double dy = this.y - that.y;\n            return dx*dx + dy*dy;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "distance|squared|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10, 11 ]
  }, {
    "id" : 6,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "that",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 28 ]
  }, {
    "id" : 12,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "dx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "thatx",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "dy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 26, 27 ]
  }, {
    "id" : 25,
    "token" : "thaty",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 29, 30 ]
  }, {
    "id" : 29,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 30,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 33, 34 ]
  }, {
    "id" : 31,
    "token" : "dx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "dx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "dy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "dy",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "compareTo",
  "full_name" : "Point2D.LongJavaFileProject.compareTo",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int compareTo(Point2D that) {\n            if (this.y < that.y) return -1;\n            if (this.y > that.y) return +1;\n            if (this.x < that.x) return -1;\n            if (this.x > that.x) return +1;\n            return 0;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "compare|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10, 11, 12, 13 ]
  }, {
    "id" : 6,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "that",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 30, 31 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 38, 39 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 46 ]
  }, {
    "id" : 14,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 20 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "thaty",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 21 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 24, 25 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 28 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 26, 27 ]
  }, {
    "id" : 25,
    "token" : "thaty",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "+",
    "type" : "PrefixExpression",
    "children" : [ 29 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 32, 33 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 36 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 34, 35 ]
  }, {
    "id" : 33,
    "token" : "thatx",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 37 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 40, 41 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 44 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "thatx",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "+",
    "type" : "PrefixExpression",
    "children" : [ 45 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "polarOrder",
  "full_name" : "Point2D.LongJavaFileProject.polarOrder",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Comparator<Point2D> polarOrder() {\n            return new PolarOrder();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "comparatorpoint|d",
    "type" : "ParameterizedType",
    "children" : [ 5, 6 ]
  }, {
    "id" : 3,
    "token" : "polar|order",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 9 ]
  }, {
    "id" : 5,
    "token" : "comparator",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "comparator",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 10 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "polar|order",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 12,
    "token" : "polar|order",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "atan2Order",
  "full_name" : "Point2D.LongJavaFileProject.atan2Order",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Comparator<Point2D> atan2Order() {\n            return new Atan2Order();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "comparatorpoint|d",
    "type" : "ParameterizedType",
    "children" : [ 5, 6 ]
  }, {
    "id" : 3,
    "token" : "atan|order",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 9 ]
  }, {
    "id" : 5,
    "token" : "comparator",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "comparator",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 10 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "atan|order",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 12,
    "token" : "atan|order",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "distanceToOrder",
  "full_name" : "Point2D.LongJavaFileProject.distanceToOrder",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Comparator<Point2D> distanceToOrder() {\n            return new DistanceToOrder();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "comparatorpoint|d",
    "type" : "ParameterizedType",
    "children" : [ 5, 6 ]
  }, {
    "id" : 3,
    "token" : "distance|to|order",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 9 ]
  }, {
    "id" : 5,
    "token" : "comparator",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "comparator",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 10 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "distance|to|order",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 12,
    "token" : "distance|to|order",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "compare",
  "full_name" : "XOrder.Point2D.LongJavaFileProject.compare",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int compare(Point2D p, Point2D q) {\n                if (p.x < q.x) return -1;\n                if (p.x > q.x) return +1;\n                return 0;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "compare",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 13, 14, 15 ]
  }, {
    "id" : 7,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 28 ]
  }, {
    "id" : 16,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 20 ]
  }, {
    "id" : 18,
    "token" : "px",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "qx",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 21 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 24, 25 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 26 ]
  }, {
    "id" : 24,
    "token" : "px",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "qx",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "+",
    "type" : "PrefixExpression",
    "children" : [ 27 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "compare",
  "full_name" : "YOrder.Point2D.LongJavaFileProject.compare",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int compare(Point2D p, Point2D q) {\n                if (p.y < q.y) return -1;\n                if (p.y > q.y) return +1;\n                return 0;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "compare",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 13, 14, 15 ]
  }, {
    "id" : 7,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 28 ]
  }, {
    "id" : 16,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 20 ]
  }, {
    "id" : 18,
    "token" : "py",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "qy",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 21 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 24, 25 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 26 ]
  }, {
    "id" : 24,
    "token" : "py",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "qy",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "+",
    "type" : "PrefixExpression",
    "children" : [ 27 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "compare",
  "full_name" : "ROrder.Point2D.LongJavaFileProject.compare",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int compare(Point2D p, Point2D q) {\n                double delta = (p.x*p.x + p.y*p.y) - (q.x*q.x + q.y*q.y);\n                if (delta < 0) return -1;\n                if (delta > 0) return +1;\n                return 0;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "compare",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 13, 14, 15, 16 ]
  }, {
    "id" : 7,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 17, 18 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 37, 38 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 43, 44 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 49 ]
  }, {
    "id" : 17,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "delta",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 21, 22 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 23 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 30 ]
  }, {
    "id" : 23,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 26, 27 ]
  }, {
    "id" : 25,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 28, 29 ]
  }, {
    "id" : 26,
    "token" : "px",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "px",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "py",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "py",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 33, 34 ]
  }, {
    "id" : 32,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 35, 36 ]
  }, {
    "id" : 33,
    "token" : "qx",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "qx",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "qy",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "qy",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 39, 40 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 41 ]
  }, {
    "id" : 39,
    "token" : "delta",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 42 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 45, 46 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 47 ]
  }, {
    "id" : 45,
    "token" : "delta",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "+",
    "type" : "PrefixExpression",
    "children" : [ 48 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "compare",
  "full_name" : "Atan2Order.Point2D.LongJavaFileProject.compare",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int compare(Point2D q1, Point2D q2) {\n                double angle1 = angleTo(q1);\n                double angle2 = angleTo(q2);\n                if      (angle1 < angle2) return -1;\n                else if (angle1 > angle2) return +1;\n                else                      return  0;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "compare",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 13, 14, 15 ]
  }, {
    "id" : 7,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 28, 29, 30 ]
  }, {
    "id" : 16,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 18, 19 ]
  }, {
    "id" : 18,
    "token" : "angle",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "angle|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "angle",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "angle|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 33 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 35, 36, 37 ]
  }, {
    "id" : 31,
    "token" : "angle",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "angle",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 34 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 38, 39 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 40 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 42 ]
  }, {
    "id" : 38,
    "token" : "angle",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "angle",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "+",
    "type" : "PrefixExpression",
    "children" : [ 41 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "compare",
  "full_name" : "PolarOrder.Point2D.LongJavaFileProject.compare",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int compare(Point2D q1, Point2D q2) {\n                double dx1 = q1.x - x;\n                double dy1 = q1.y - y;\n                double dx2 = q2.x - x;\n                double dy2 = q2.y - y;\n\n                if      (dy1 >= 0 && dy2 < 0) return -1;    // q1 above; q2 below\n                else if (dy2 >= 0 && dy1 < 0) return +1;    // q1 below; q2 above\n                else if (dy1 == 0 && dy2 == 0) {            // 3-collinear and horizontal\n                    if      (dx1 >= 0 && dx2 < 0) return -1;\n                    else if (dx2 >= 0 && dx1 < 0) return +1;\n                    else                          return  0;\n                }\n                else return -ccw(Point2D.this, q1, q2);     // both above or below\n\n                // Note: ccw() recomputes dx1, dy1, dx2, and dy2\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "compare",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 13, 14, 15, 16, 17 ]
  }, {
    "id" : 7,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 18, 19 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 30, 31 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 36, 37 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 42, 43, 44 ]
  }, {
    "id" : 18,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "dx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "q|x",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "dy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "q|y",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 32, 33 ]
  }, {
    "id" : 32,
    "token" : "dx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "q|x",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 38, 39 ]
  }, {
    "id" : 38,
    "token" : "dy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "q|y",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 45, 46 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 51 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 53, 54, 55 ]
  }, {
    "id" : 45,
    "token" : ">=",
    "type" : "InfixExpression",
    "children" : [ 47, 48 ]
  }, {
    "id" : 46,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 49, 50 ]
  }, {
    "id" : 47,
    "token" : "dy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "dy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 52 ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 56, 57 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 62 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 64, 65, 66 ]
  }, {
    "id" : 56,
    "token" : ">=",
    "type" : "InfixExpression",
    "children" : [ 58, 59 ]
  }, {
    "id" : 57,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 60, 61 ]
  }, {
    "id" : 58,
    "token" : "dy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "dy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "+",
    "type" : "PrefixExpression",
    "children" : [ 63 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 67, 68 ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "Block",
    "children" : [ 73 ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 97 ]
  }, {
    "id" : 67,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 69, 70 ]
  }, {
    "id" : 68,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 71, 72 ]
  }, {
    "id" : 69,
    "token" : "dy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "dy",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 74, 75, 76 ]
  }, {
    "id" : 74,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 77, 78 ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 83 ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 85, 86, 87 ]
  }, {
    "id" : 77,
    "token" : ">=",
    "type" : "InfixExpression",
    "children" : [ 79, 80 ]
  }, {
    "id" : 78,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 81, 82 ]
  }, {
    "id" : 79,
    "token" : "dx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "dx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 84 ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 88, 89 ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 94 ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 96 ]
  }, {
    "id" : 88,
    "token" : ">=",
    "type" : "InfixExpression",
    "children" : [ 90, 91 ]
  }, {
    "id" : 89,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 92, 93 ]
  }, {
    "id" : 90,
    "token" : "dx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "dx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "+",
    "type" : "PrefixExpression",
    "children" : [ 95 ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 98 ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 99, 100, 101, 102 ]
  }, {
    "id" : 99,
    "token" : "ccw",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ 103 ]
  }, {
    "id" : 101,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "compare",
  "full_name" : "DistanceToOrder.Point2D.LongJavaFileProject.compare",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int compare(Point2D p, Point2D q) {\n                double dist1 = distanceSquaredTo(p);\n                double dist2 = distanceSquaredTo(q);\n                if      (dist1 < dist2) return -1;\n                else if (dist1 > dist2) return +1;\n                else                    return  0;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "compare",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 13, 14, 15 ]
  }, {
    "id" : 7,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 28, 29, 30 ]
  }, {
    "id" : 16,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 18, 19 ]
  }, {
    "id" : 18,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "distance|squared|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "distance|squared|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 33 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 35, 36, 37 ]
  }, {
    "id" : 31,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 34 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 38, 39 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 40 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 42 ]
  }, {
    "id" : 38,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "dist",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "+",
    "type" : "PrefixExpression",
    "children" : [ 41 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "equals",
  "full_name" : "Point2D.LongJavaFileProject.equals",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "@Override\n        public boolean equals(Object other) {\n            if (other == this) return true;\n            if (other == null) return false;\n            if (other.getClass() != this.getClass()) return false;\n            Point2D that = (Point2D) other;\n            return this.x == that.x && this.y == that.y;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13, 14, 15 ]
  }, {
    "id" : 7,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "object",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "other",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "object",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 21, 22 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 26, 27 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 35, 36 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 43 ]
  }, {
    "id" : 16,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 20 ]
  }, {
    "id" : 18,
    "token" : "other",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 25 ]
  }, {
    "id" : 23,
    "token" : "other",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 28, 29 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 34 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 30, 31 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 32, 33 ]
  }, {
    "id" : 30,
    "token" : "other",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "get|class",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "get|class",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 37 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 38, 39 ]
  }, {
    "id" : 37,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "that",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "point|d",
    "type" : "SimpleType",
    "children" : [ 42 ]
  }, {
    "id" : 41,
    "token" : "other",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "point|d",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 44, 45 ]
  }, {
    "id" : 44,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 46, 47 ]
  }, {
    "id" : 45,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 50, 51 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 48, 49 ]
  }, {
    "id" : 47,
    "token" : "thatx",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 52, 53 ]
  }, {
    "id" : 51,
    "token" : "thaty",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "toString",
  "full_name" : "Point2D.LongJavaFileProject.toString",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "@Override\n        public String toString() {\n            return \"(\" + x + \", \" + y + \")\";\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 6 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 4,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 8 ]
  }, {
    "id" : 6,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 9 ]
  }, {
    "id" : 9,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 10, 11, 12, 13, 14 ]
  }, {
    "id" : 10,
    "token" : "(",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : ")",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "hashCode",
  "full_name" : "Point2D.LongJavaFileProject.hashCode",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "@Override\n        public int hashCode() {\n            int hashX = ((Double) x).hashCode();\n            int hashY = ((Double) y).hashCode();\n            return 31*hashX + hashY;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 6 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "hash|code",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 7, 8, 9 ]
  }, {
    "id" : 6,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 10, 11 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 30 ]
  }, {
    "id" : 10,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 12, 13 ]
  }, {
    "id" : 12,
    "token" : "hash|x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 16 ]
  }, {
    "id" : 15,
    "token" : "hash|code",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 17, 18 ]
  }, {
    "id" : 17,
    "token" : "double",
    "type" : "SimpleType",
    "children" : [ 19 ]
  }, {
    "id" : 18,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "double",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "hash|y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 26 ]
  }, {
    "id" : 25,
    "token" : "hash|code",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "double",
    "type" : "SimpleType",
    "children" : [ 29 ]
  }, {
    "id" : 28,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "double",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 33, 34 ]
  }, {
    "id" : 32,
    "token" : "hash|y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "hash|x",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "Node",
  "full_name" : "Node.RedBlackBST.LongJavaFileProject.Node",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Node(Key key, Value val, boolean color, int size) {\n                this.key = key;\n                this.val = val;\n                this.color = color;\n                this.size = size;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 14, 15 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 16, 17 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 18, 19, 20, 21 ]
  }, {
    "id" : 8,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "value",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "val",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "color",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 22 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 27 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 32 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 37 ]
  }, {
    "id" : 22,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 23, 24 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 25, 26 ]
  }, {
    "id" : 24,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 30, 31 ]
  }, {
    "id" : 29,
    "token" : "val",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "val",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 35, 36 ]
  }, {
    "id" : 34,
    "token" : "color",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "color",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 38, 39 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 40, 41 ]
  }, {
    "id" : 39,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "RedBlackBST",
  "full_name" : "RedBlackBST.LongJavaFileProject.RedBlackBST",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Initializes an empty symbol table.\n         */",
  "comment" : null,
  "body" : "public RedBlackBST() {\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 5 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "red|black|bst",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "initializes|an|empty|symbol|table",
    "type" : "TextElement",
    "children" : [ ]
  } ]
}, {
  "name" : "isRed",
  "full_name" : "RedBlackBST.LongJavaFileProject.isRed",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/***************************************************************************\n         *  Node helper methods.\n         ***************************************************************************/",
  "comment" : null,
  "body" : "// is node x red; false if x is null ?\n        private boolean isRed(Node x) {\n            if (x == null) return false;\n            return x.color == RED;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "is|red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 12, 13 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "node|helper|methods",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 19 ]
  }, {
    "id" : 14,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 18 ]
  }, {
    "id" : 16,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "xcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "red",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "size",
  "full_name" : "RedBlackBST.LongJavaFileProject.size",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private int size(Node x) {\n            if (x == null) return 0;\n            return x.size;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 11, 12 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 16 ]
  }, {
    "id" : 11,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 13, 14 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 15 ]
  }, {
    "id" : 13,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "xsize",
    "type" : "QualifiedName",
    "children" : [ ]
  } ]
}, {
  "name" : "isEmpty",
  "full_name" : "RedBlackBST.LongJavaFileProject.isEmpty",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Is this symbol table empty?\n         * @return {@code true} if this symbol table is empty and {@code false} otherwise\n         */",
  "comment" : null,
  "body" : "public boolean isEmpty() {\n            return root == null;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 6, 7 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 16 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 9, 10, 11, 12, 13 ]
  }, {
    "id" : 8,
    "token" : "is|this|symbol|table|empty",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 14 ]
  }, {
    "id" : 11,
    "token" : "if|this|symbol|table|is|empty|and",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 15 ]
  }, {
    "id" : 13,
    "token" : "otherwise",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "true",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "false",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 17 ]
  }, {
    "id" : 17,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 18, 19 ]
  }, {
    "id" : 18,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "get",
  "full_name" : "RedBlackBST.LongJavaFileProject.get",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Returns the value associated with the given key.\n         * @param key the key\n         * @return the value associated with the given key if the key is in the symbol table\n         *     and {@code null} if the key is not in the symbol table\n         * @throws IllegalArgumentException if {@code key} is {@code null}\n         */",
  "comment" : null,
  "body" : "public Value get(Key key) {\n            if (key == null) throw new IllegalArgumentException(\"argument to get() is null\");\n            return get(root, key);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7, 8, 9, 10 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "value",
    "type" : "SimpleType",
    "children" : [ 26 ]
  }, {
    "id" : 4,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 27, 28 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 30, 31 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 11 ]
  }, {
    "id" : 8,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 9,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 14, 15, 16, 17 ]
  }, {
    "id" : 10,
    "token" : "throws",
    "type" : "TagElement",
    "children" : [ 19, 20, 21, 22, 23 ]
  }, {
    "id" : 11,
    "token" : "returns|the|value|associated|with|the|given|key",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "the|key",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "the|value|associated|with|the|given|key|if|the|key|is|in|the|symbol|table",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "and",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "if|the|key|is|not|in|the|symbol|table",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "null",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "if",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 24 ]
  }, {
    "id" : 22,
    "token" : "is",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 25 ]
  }, {
    "id" : 24,
    "token" : "key",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "null",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 29 ]
  }, {
    "id" : 28,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 32, 33 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 40 ]
  }, {
    "id" : 32,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 34, 35 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 36 ]
  }, {
    "id" : 34,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 37, 38 ]
  }, {
    "id" : 37,
    "token" : "illegal|argument|exception",
    "type" : "SimpleType",
    "children" : [ 39 ]
  }, {
    "id" : 38,
    "token" : "argument|to|get|is|null",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 41, 42, 43 ]
  }, {
    "id" : 41,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "contains",
  "full_name" : "RedBlackBST.LongJavaFileProject.contains",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Does this symbol table contain the given key?\n         * @param key the key\n         * @return {@code true} if this symbol table contains {@code key} and\n         *     {@code false} otherwise\n         * @throws IllegalArgumentException if {@code key} is {@code null}\n         */",
  "comment" : null,
  "body" : "public boolean contains(Key key) {\n            return get(key) != null;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7, 8, 9, 10 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 31, 32 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 34 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 11 ]
  }, {
    "id" : 8,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 9,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 14, 15, 16, 17, 18, 19, 20 ]
  }, {
    "id" : 10,
    "token" : "throws",
    "type" : "TagElement",
    "children" : [ 24, 25, 26, 27, 28 ]
  }, {
    "id" : 11,
    "token" : "does|this|symbol|table|contain|the|given|key",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "the|key",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 21 ]
  }, {
    "id" : 16,
    "token" : "if|this|symbol|table|contains",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 22 ]
  }, {
    "id" : 18,
    "token" : "and",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 23 ]
  }, {
    "id" : 20,
    "token" : "otherwise",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "true",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "key",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "false",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "if",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 29 ]
  }, {
    "id" : 27,
    "token" : "is",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 30 ]
  }, {
    "id" : 29,
    "token" : "key",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "null",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 33 ]
  }, {
    "id" : 32,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 35 ]
  }, {
    "id" : 35,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "put",
  "full_name" : "RedBlackBST.LongJavaFileProject.put",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Inserts the specified key-value pair into the symbol table, overwriting the old\n         * value with the new value if the symbol table already contains the specified key.\n         * Deletes the specified key (and its associated value) from this symbol table\n         * if the specified value is {@code null}.\n         *\n         * @param key the key\n         * @param val the value\n         * @throws IllegalArgumentException if {@code key} is {@code null}\n         */",
  "comment" : null,
  "body" : "public void put(Key key, Value val) {\n            if (key == null) throw new IllegalArgumentException(\"first argument to put() is null\");\n            if (val == null) {\n                delete(key);\n                return;\n            }\n\n            root = put(root, key, val);\n            root.color = BLACK;\n            // assert check();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 8, 9, 10, 11 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "put",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 30, 31 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 33, 34 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 36, 37, 38, 39 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 12, 13, 14, 15, 16, 17 ]
  }, {
    "id" : 9,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 19, 20 ]
  }, {
    "id" : 10,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 21, 22 ]
  }, {
    "id" : 11,
    "token" : "throws",
    "type" : "TagElement",
    "children" : [ 23, 24, 25, 26, 27 ]
  }, {
    "id" : 12,
    "token" : "inserts|the|specified|keyvalue|pair|into|the|symbol|table|overwriting|the|old",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "value|with|the|new|value|if|the|symbol|table|already|contains|the|specified|key",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "deletes|the|specified|key|and|its|associated|value|from|this|symbol|table",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "if|the|specified|value|is",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : ".",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "null",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "the|key",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "val",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "the|value",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "if",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 28 ]
  }, {
    "id" : 26,
    "token" : "is",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 29 ]
  }, {
    "id" : 28,
    "token" : "key",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "null",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 32 ]
  }, {
    "id" : 31,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "value",
    "type" : "SimpleType",
    "children" : [ 35 ]
  }, {
    "id" : 34,
    "token" : "val",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 40, 41 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 48, 49 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 57 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 64 ]
  }, {
    "id" : 40,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 44 ]
  }, {
    "id" : 42,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 45, 46 ]
  }, {
    "id" : 45,
    "token" : "illegal|argument|exception",
    "type" : "SimpleType",
    "children" : [ 47 ]
  }, {
    "id" : 46,
    "token" : "first|argument|to|put|is|null",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 50, 51 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "Block",
    "children" : [ 52, 53 ]
  }, {
    "id" : 50,
    "token" : "val",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 54 ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 55, 56 ]
  }, {
    "id" : 55,
    "token" : "delete",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 58, 59 ]
  }, {
    "id" : 58,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 60, 61, 62, 63 ]
  }, {
    "id" : 60,
    "token" : "put",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "val",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 65, 66 ]
  }, {
    "id" : 65,
    "token" : "rootcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "black",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "deleteMin",
  "full_name" : "RedBlackBST.LongJavaFileProject.deleteMin",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Removes the smallest key and associated value from the symbol table.\n         * @throws NoSuchElementException if the symbol table is empty\n         */",
  "comment" : null,
  "body" : "public void deleteMin() {\n            if (isEmpty()) throw new NoSuchElementException(\"BST underflow\");\n\n            // if both children of root are black, set root to red\n            if (!isRed(root.left) && !isRed(root.right))\n                root.color = RED;\n\n            root = deleteMin(root);\n            if (!isEmpty()) root.color = BLACK;\n            // assert check();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 6, 7 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "delete|min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13, 14 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "throws",
    "type" : "TagElement",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "removes|the|smallest|key|and|associated|value|from|the|symbol|table",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "no|such|element|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "if|the|symbol|table|is|empty",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 15, 16 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 35 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 40, 41 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 17 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "no|such|element|exception",
    "type" : "SimpleType",
    "children" : [ 21 ]
  }, {
    "id" : 20,
    "token" : "bst|underflow",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "no|such|element|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 24, 25 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 32 ]
  }, {
    "id" : 24,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 26 ]
  }, {
    "id" : 25,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 29 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "is|red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "rootleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "is|red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "rootright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "rootcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39 ]
  }, {
    "id" : 38,
    "token" : "delete|min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 42 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 44 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 43 ]
  }, {
    "id" : 43,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 45, 46 ]
  }, {
    "id" : 45,
    "token" : "rootcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "black",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "deleteMax",
  "full_name" : "RedBlackBST.LongJavaFileProject.deleteMax",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Removes the largest key and associated value from the symbol table.\n         * @throws NoSuchElementException if the symbol table is empty\n         */",
  "comment" : null,
  "body" : "public void deleteMax() {\n            if (isEmpty()) throw new NoSuchElementException(\"BST underflow\");\n\n            // if both children of root are black, set root to red\n            if (!isRed(root.left) && !isRed(root.right))\n                root.color = RED;\n\n            root = deleteMax(root);\n            if (!isEmpty()) root.color = BLACK;\n            // assert check();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 6, 7 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "delete|max",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13, 14 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "throws",
    "type" : "TagElement",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "removes|the|largest|key|and|associated|value|from|the|symbol|table",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "no|such|element|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "if|the|symbol|table|is|empty",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 15, 16 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 35 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 40, 41 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 17 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "no|such|element|exception",
    "type" : "SimpleType",
    "children" : [ 21 ]
  }, {
    "id" : 20,
    "token" : "bst|underflow",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "no|such|element|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 24, 25 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 32 ]
  }, {
    "id" : 24,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 26 ]
  }, {
    "id" : 25,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 29 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "is|red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "rootleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "is|red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "rootright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "rootcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39 ]
  }, {
    "id" : 38,
    "token" : "delete|max",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 42 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 44 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 43 ]
  }, {
    "id" : 43,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 45, 46 ]
  }, {
    "id" : 45,
    "token" : "rootcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "black",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "delete",
  "full_name" : "RedBlackBST.LongJavaFileProject.delete",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Removes the specified key and its associated value from this symbol table\n         * (if the key is in this symbol table).\n         *\n         * @param  key the key\n         * @throws IllegalArgumentException if {@code key} is {@code null}\n         */",
  "comment" : null,
  "body" : "public void delete(Key key) {\n            if (key == null) throw new IllegalArgumentException(\"argument to delete() is null\");\n            if (!contains(key)) return;\n\n            // if both children of root are black, set root to red\n            if (!isRed(root.left) && !isRed(root.right))\n                root.color = RED;\n\n            root = delete(root, key);\n            if (!isEmpty()) root.color = BLACK;\n            // assert check();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7, 8, 9 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "delete",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 21, 22 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 24, 25, 26, 27, 28 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 10, 11 ]
  }, {
    "id" : 8,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 9,
    "token" : "throws",
    "type" : "TagElement",
    "children" : [ 14, 15, 16, 17, 18 ]
  }, {
    "id" : 10,
    "token" : "removes|the|specified|key|and|its|associated|value|from|this|symbol|table",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "if|the|key|is|in|this|symbol|table",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "the|key",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "if",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 19 ]
  }, {
    "id" : 17,
    "token" : "is",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "code",
    "type" : "TagElement",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "key",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "null",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 23 ]
  }, {
    "id" : 22,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 29, 30 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 37, 38 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 42, 43 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 55 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 61, 62 ]
  }, {
    "id" : 29,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 33 ]
  }, {
    "id" : 31,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "illegal|argument|exception",
    "type" : "SimpleType",
    "children" : [ 36 ]
  }, {
    "id" : 35,
    "token" : "argument|to|delete|is|null",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 39 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 44, 45 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 52 ]
  }, {
    "id" : 44,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 46 ]
  }, {
    "id" : 45,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 49 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 47, 48 ]
  }, {
    "id" : 47,
    "token" : "is|red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "rootleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 50, 51 ]
  }, {
    "id" : 50,
    "token" : "is|red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "rootright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 53, 54 ]
  }, {
    "id" : 53,
    "token" : "rootcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 56, 57 ]
  }, {
    "id" : 56,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 58, 59, 60 ]
  }, {
    "id" : 58,
    "token" : "delete",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 63 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 65 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 64 ]
  }, {
    "id" : 64,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 66, 67 ]
  }, {
    "id" : 66,
    "token" : "rootcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "black",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "rotateRight",
  "full_name" : "RedBlackBST.LongJavaFileProject.rotateRight",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private Node rotateRight(Node h) {\n            // assert (h != null) && isRed(h.left);\n            Node x = h.left;\n            h.left = x.right;\n            x.right = h;\n            x.color = x.right.color;\n            x.right.color = RED;\n            x.size = h.size;\n            h.size = size(h.left) + size(h.right) + 1;\n            return x;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 3,
    "token" : "rotate|right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10, 11, 12, 13, 14, 15, 16, 17 ]
  }, {
    "id" : 6,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 18, 19 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 23 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 26 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 29 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 32 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 35 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 38 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 48 ]
  }, {
    "id" : 18,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "hleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "hleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "xright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "xright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "xcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "xrightcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "xrightcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "xsize",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "hsize",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 39, 40 ]
  }, {
    "id" : 39,
    "token" : "hsize",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 41, 42, 43 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 44, 45 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 46, 47 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "hleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "hright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "rotateLeft",
  "full_name" : "RedBlackBST.LongJavaFileProject.rotateLeft",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private Node rotateLeft(Node h) {\n            // assert (h != null) && isRed(h.right);\n            Node x = h.right;\n            h.right = x.left;\n            x.left = h;\n            x.color = x.left.color;\n            x.left.color = RED;\n            x.size = h.size;\n            h.size = size(h.left) + size(h.right) + 1;\n            return x;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 3,
    "token" : "rotate|left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10, 11, 12, 13, 14, 15, 16, 17 ]
  }, {
    "id" : 6,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 18, 19 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 23 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 26 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 29 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 32 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 35 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 38 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 48 ]
  }, {
    "id" : 18,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "hright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "hright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "xleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "xleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "xcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "xleftcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "xleftcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "xsize",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "hsize",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 39, 40 ]
  }, {
    "id" : 39,
    "token" : "hsize",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 41, 42, 43 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 44, 45 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 46, 47 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "hleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "hright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "flipColors",
  "full_name" : "RedBlackBST.LongJavaFileProject.flipColors",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void flipColors(Node h) {\n            h.color = !h.color;\n            h.left.color = !h.left.color;\n            h.right.color = !h.right.color;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "flip|colors",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10, 11 ]
  }, {
    "id" : 6,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 12 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 16 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 20 ]
  }, {
    "id" : 12,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 13, 14 ]
  }, {
    "id" : 13,
    "token" : "hcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 15 ]
  }, {
    "id" : 15,
    "token" : "hcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 17, 18 ]
  }, {
    "id" : 17,
    "token" : "hleftcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 19 ]
  }, {
    "id" : 19,
    "token" : "hleftcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 21, 22 ]
  }, {
    "id" : 21,
    "token" : "hrightcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 23 ]
  }, {
    "id" : 23,
    "token" : "hrightcolor",
    "type" : "QualifiedName",
    "children" : [ ]
  } ]
}, {
  "name" : "moveRedLeft",
  "full_name" : "RedBlackBST.LongJavaFileProject.moveRedLeft",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private Node moveRedLeft(Node h) {\n            // assert (h != null);\n            // assert isRed(h) && !isRed(h.left) && !isRed(h.left.left);\n\n            flipColors(h);\n            if (isRed(h.right.left)) {\n                h.right = rotateRight(h.right);\n                h = rotateLeft(h);\n                flipColors(h);\n            }\n            return h;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 3,
    "token" : "move|red|left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10, 11, 12 ]
  }, {
    "id" : 6,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 13 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 36 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "flip|colors",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "Block",
    "children" : [ 20, 21, 22 ]
  }, {
    "id" : 18,
    "token" : "is|red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "hrightleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 23 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 28 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 33 ]
  }, {
    "id" : 23,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "hright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "rotate|right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "hright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 29, 30 ]
  }, {
    "id" : 29,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "rotate|left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "flip|colors",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "moveRedRight",
  "full_name" : "RedBlackBST.LongJavaFileProject.moveRedRight",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private Node moveRedRight(Node h) {\n            // assert (h != null);\n            // assert isRed(h) && !isRed(h.right) && !isRed(h.right.left);\n            flipColors(h);\n            if (isRed(h.left.left)) {\n                h = rotateRight(h);\n                flipColors(h);\n            }\n            return h;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 3,
    "token" : "move|red|right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10, 11, 12 ]
  }, {
    "id" : 6,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 13 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 30 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "flip|colors",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "Block",
    "children" : [ 20, 21 ]
  }, {
    "id" : 18,
    "token" : "is|red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "hleftleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 22 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 27 ]
  }, {
    "id" : 22,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 23, 24 ]
  }, {
    "id" : 23,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 25, 26 ]
  }, {
    "id" : 25,
    "token" : "rotate|right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "flip|colors",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "balance",
  "full_name" : "RedBlackBST.LongJavaFileProject.balance",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private Node balance(Node h) {\n            // assert (h != null);\n\n            if (isRed(h.right))                      h = rotateLeft(h);\n            if (isRed(h.left) && isRed(h.left.left)) h = rotateRight(h);\n            if (isRed(h.left) && isRed(h.right))     flipColors(h);\n\n            h.size = size(h.left) + size(h.right) + 1;\n            return h;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 3,
    "token" : "balance",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10, 11, 12, 13, 14 ]
  }, {
    "id" : 6,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 15, 16 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 37, 38 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 48 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 58 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 17, 18 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 19 ]
  }, {
    "id" : 17,
    "token" : "is|red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "hright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "rotate|left",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 26, 27 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 32 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28, 29 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 30, 31 ]
  }, {
    "id" : 28,
    "token" : "is|red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "hleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "is|red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "hleftleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "rotate|right",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 39, 40 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 45 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 41, 42 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 43, 44 ]
  }, {
    "id" : 41,
    "token" : "is|red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "hleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "is|red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "hright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 46, 47 ]
  }, {
    "id" : 46,
    "token" : "flip|colors",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 49, 50 ]
  }, {
    "id" : 49,
    "token" : "hsize",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 51, 52, 53 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 54, 55 ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 56, 57 ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "hleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "hright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "height",
  "full_name" : "RedBlackBST.LongJavaFileProject.height",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int height() {\n            return height(root);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "height",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "height",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "min",
  "full_name" : "RedBlackBST.LongJavaFileProject.min",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Key min() {\n            if (isEmpty()) throw new NoSuchElementException(\"calls min() with empty symbol table\");\n            return min(root).key;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 5 ]
  }, {
    "id" : 3,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 15 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 12, 13 ]
  }, {
    "id" : 12,
    "token" : "no|such|element|exception",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "calls|min|with|empty|symbol|table",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "no|such|element|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "max",
  "full_name" : "RedBlackBST.LongJavaFileProject.max",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Key max() {\n            if (isEmpty()) throw new NoSuchElementException(\"calls max() with empty symbol table\");\n            return max(root).key;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 5 ]
  }, {
    "id" : 3,
    "token" : "max",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 15 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 12, 13 ]
  }, {
    "id" : 12,
    "token" : "no|such|element|exception",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "calls|max|with|empty|symbol|table",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "no|such|element|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "max",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "floor",
  "full_name" : "RedBlackBST.LongJavaFileProject.floor",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Key floor(Key key) {\n            if (key == null) throw new IllegalArgumentException(\"argument to floor() is null\");\n            if (isEmpty()) throw new NoSuchElementException(\"calls floor() with empty symbol table\");\n            Node x = floor(root, key);\n            if (x == null) throw new NoSuchElementException(\"argument to floor() is too small\");\n            else           return x.key;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 3,
    "token" : "floor",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10, 11, 12, 13 ]
  }, {
    "id" : 6,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 29, 30 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 37, 38, 39 ]
  }, {
    "id" : 14,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 18 ]
  }, {
    "id" : 16,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "illegal|argument|exception",
    "type" : "SimpleType",
    "children" : [ 21 ]
  }, {
    "id" : 20,
    "token" : "argument|to|floor|is|null",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 24 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 25 ]
  }, {
    "id" : 24,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "no|such|element|exception",
    "type" : "SimpleType",
    "children" : [ 28 ]
  }, {
    "id" : 27,
    "token" : "calls|floor|with|empty|symbol|table",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "no|such|element|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 31 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 32, 33 ]
  }, {
    "id" : 31,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 34, 35, 36 ]
  }, {
    "id" : 34,
    "token" : "floor",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 40, 41 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 42 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 46 ]
  }, {
    "id" : 40,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "no|such|element|exception",
    "type" : "SimpleType",
    "children" : [ 45 ]
  }, {
    "id" : 44,
    "token" : "argument|to|floor|is|too|small",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "no|such|element|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "xkey",
    "type" : "QualifiedName",
    "children" : [ ]
  } ]
}, {
  "name" : "ceiling",
  "full_name" : "RedBlackBST.LongJavaFileProject.ceiling",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Key ceiling(Key key) {\n            if (key == null) throw new IllegalArgumentException(\"argument to ceiling() is null\");\n            if (isEmpty()) throw new NoSuchElementException(\"calls ceiling() with empty symbol table\");\n            Node x = ceiling(root, key);\n            if (x == null) throw new NoSuchElementException(\"argument to ceiling() is too small\");\n            else           return x.key;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 3,
    "token" : "ceiling",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10, 11, 12, 13 ]
  }, {
    "id" : 6,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 29, 30 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 37, 38, 39 ]
  }, {
    "id" : 14,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 18 ]
  }, {
    "id" : 16,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "illegal|argument|exception",
    "type" : "SimpleType",
    "children" : [ 21 ]
  }, {
    "id" : 20,
    "token" : "argument|to|ceiling|is|null",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 24 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 25 ]
  }, {
    "id" : 24,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "no|such|element|exception",
    "type" : "SimpleType",
    "children" : [ 28 ]
  }, {
    "id" : 27,
    "token" : "calls|ceiling|with|empty|symbol|table",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "no|such|element|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 31 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 32, 33 ]
  }, {
    "id" : 31,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 34, 35, 36 ]
  }, {
    "id" : 34,
    "token" : "ceiling",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 40, 41 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 42 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 46 ]
  }, {
    "id" : 40,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "no|such|element|exception",
    "type" : "SimpleType",
    "children" : [ 45 ]
  }, {
    "id" : 44,
    "token" : "argument|to|ceiling|is|too|small",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "no|such|element|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "xkey",
    "type" : "QualifiedName",
    "children" : [ ]
  } ]
}, {
  "name" : "select",
  "full_name" : "RedBlackBST.LongJavaFileProject.select",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Key select(int rank) {\n            if (rank < 0 || rank >= size()) {\n                throw new IllegalArgumentException(\"argument to select() is invalid: \" + rank);\n            }\n            return select(root, rank);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 3,
    "token" : "select",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "rank",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 11, 12 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 27 ]
  }, {
    "id" : 11,
    "token" : "||",
    "type" : "InfixExpression",
    "children" : [ 13, 14 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Block",
    "children" : [ 20 ]
  }, {
    "id" : 13,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : ">=",
    "type" : "InfixExpression",
    "children" : [ 17, 18 ]
  }, {
    "id" : 15,
    "token" : "rank",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "rank",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 19 ]
  }, {
    "id" : 19,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 21 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "illegal|argument|exception",
    "type" : "SimpleType",
    "children" : [ 24 ]
  }, {
    "id" : 23,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 25, 26 ]
  }, {
    "id" : 24,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "argument|to|select|is|invalid",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "rank",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28, 29, 30 ]
  }, {
    "id" : 28,
    "token" : "select",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "rank",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "rank",
  "full_name" : "RedBlackBST.LongJavaFileProject.rank",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int rank(Key key) {\n            if (key == null) throw new IllegalArgumentException(\"argument to rank() is null\");\n            return rank(key, root);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "rank",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 11, 12 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 19 ]
  }, {
    "id" : 11,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 13, 14 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 15 ]
  }, {
    "id" : 13,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "illegal|argument|exception",
    "type" : "SimpleType",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "argument|to|rank|is|null",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 20, 21, 22 ]
  }, {
    "id" : 20,
    "token" : "rank",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "keys",
  "full_name" : "RedBlackBST.LongJavaFileProject.keys",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Iterable<Key> keys() {\n            if (isEmpty()) return new PriorityQueue<Key>();\n            return keys(min(), max());\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "iterablekey",
    "type" : "ParameterizedType",
    "children" : [ 5, 6 ]
  }, {
    "id" : 3,
    "token" : "keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10 ]
  }, {
    "id" : 5,
    "token" : "iterable",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "iterable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 11, 12 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 20 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 15 ]
  }, {
    "id" : 15,
    "token" : "priority|queuekey",
    "type" : "ParameterizedType",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "priority|queue",
    "type" : "SimpleType",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 19 ]
  }, {
    "id" : 18,
    "token" : "priority|queue",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 21, 22, 23 ]
  }, {
    "id" : 21,
    "token" : "keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 24 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 25 ]
  }, {
    "id" : 24,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "max",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "check",
  "full_name" : "RedBlackBST.LongJavaFileProject.check",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private boolean check() {\n            return isBST() && isSizeConsistent() && isRankConsistent() && is23() && isBalanced();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "check",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 7, 8, 9, 10, 11 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 12 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 13 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 14 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 15 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 16 ]
  }, {
    "id" : 12,
    "token" : "is|bst",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "is|size|consistent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "is|rank|consistent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "is",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "is|balanced",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "isBST",
  "full_name" : "RedBlackBST.LongJavaFileProject.isBST",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private boolean isBST() {\n            return isBST(root, null, null);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "is|bst",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 7, 8, 9, 10 ]
  }, {
    "id" : 7,
    "token" : "is|bst",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "isSizeConsistent",
  "full_name" : "RedBlackBST.LongJavaFileProject.isSizeConsistent",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private boolean isSizeConsistent() { return isSizeConsistent(root); }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "is|size|consistent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "is|size|consistent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "isRankConsistent",
  "full_name" : "RedBlackBST.LongJavaFileProject.isRankConsistent",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private boolean isRankConsistent() {\n            for (int i = 0; i < size(); i++)\n                if (i != rank(select(i))) return false;\n            for (Key key : keys())\n                if (key.compareTo(select(rank(key))) != 0) return false;\n            return true;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "is|rank|consistent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5, 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 8, 9, 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 29, 30, 31 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 48 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 12, 13 ]
  }, {
    "id" : 9,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 16, 17 ]
  }, {
    "id" : 10,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 19 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 12,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 18 ]
  }, {
    "id" : 18,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 22, 23 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 28 ]
  }, {
    "id" : 22,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "rank",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "select",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 32, 33 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 35 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 36, 37 ]
  }, {
    "id" : 32,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 34 ]
  }, {
    "id" : 33,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 38, 39 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 47 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 40, 41, 42 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "compare|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "select",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 45, 46 ]
  }, {
    "id" : 45,
    "token" : "rank",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "is23",
  "full_name" : "RedBlackBST.LongJavaFileProject.is23",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private boolean is23() { return is23(root); }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "is",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "is",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "isBalanced",
  "full_name" : "RedBlackBST.LongJavaFileProject.isBalanced",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private boolean isBalanced() {\n            int black = 0;     // number of black links on path from root to min\n            Node x = root;\n            while (x != null) {\n                if (!isRed(x)) black++;\n                x = x.left;\n            }\n            return isBalanced(root, black);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "is|balanced",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5, 6, 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 13, 14 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 18, 19 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 34 ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 11, 12 ]
  }, {
    "id" : 11,
    "token" : "black",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 20, 21 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Block",
    "children" : [ 22, 23 ]
  }, {
    "id" : 20,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 31 ]
  }, {
    "id" : 24,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 26 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 29 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "is|red",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 30 ]
  }, {
    "id" : 30,
    "token" : "black",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 32, 33 ]
  }, {
    "id" : 32,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "xleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 35, 36, 37 ]
  }, {
    "id" : 35,
    "token" : "is|balanced",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "black",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "BinomialMinPQ",
  "full_name" : "BinomialMinPQ.LongJavaFileProject.BinomialMinPQ",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public BinomialMinPQ() {\n            comp = new MyComparator();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "binomial|min|pq",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 6, 7 ]
  }, {
    "id" : 6,
    "token" : "comp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "my|comparator",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 9,
    "token" : "my|comparator",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "isEmpty",
  "full_name" : "BinomialMinPQ.LongJavaFileProject.isEmpty",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public boolean isEmpty() {\n            return head == null;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "size",
  "full_name" : "BinomialMinPQ.LongJavaFileProject.size",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int size() {\n            int result = 0, tmp;\n            for (Node node = head; node != null; node = node.sibling) {\n                if (node.order > 30) { throw new ArithmeticException(\"The number of elements cannot be evaluated, but the priority queue is still valid.\"); }\n                tmp = 1 << node.order;\n                result |= tmp;\n            }\n            return result;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5, 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 8, 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 14, 15, 16, 17 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 47 ]
  }, {
    "id" : 8,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 11, 12 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 13 ]
  }, {
    "id" : 11,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "tmp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 18, 19 ]
  }, {
    "id" : 15,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 16,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 25, 26 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "Block",
    "children" : [ 27, 28, 29 ]
  }, {
    "id" : 18,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "nodesibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 30, 31 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 39 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 44 ]
  }, {
    "id" : 30,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 32, 33 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "Block",
    "children" : [ 34 ]
  }, {
    "id" : 32,
    "token" : "nodeorder",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 35 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "arithmetic|exception",
    "type" : "SimpleType",
    "children" : [ 38 ]
  }, {
    "id" : 37,
    "token" : "the|number|of|elements|cannot|be|evaluated|but|the|priority|queue|is|still|valid",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "arithmetic|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "tmp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "<<",
    "type" : "InfixExpression",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "nodeorder",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "|=",
    "type" : "Assignment",
    "children" : [ 45, 46 ]
  }, {
    "id" : 45,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "tmp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "result",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "insert",
  "full_name" : "BinomialMinPQ.LongJavaFileProject.insert",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void insert(Key key) {\n            Node x = new Node();\n            x.key = key;\n            x.order = 0;\n            BinomialMinPQ<Key> H = new BinomialMinPQ<Key>(); //The Comparator oh the H heap is not used\n            H.head = x;\n            this.head = this.union(H).head;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "insert",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10, 11, 12, 13, 14 ]
  }, {
    "id" : 6,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 15, 16 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 22 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 25 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 28, 29 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 41 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 44 ]
  }, {
    "id" : 15,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 17 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 20 ]
  }, {
    "id" : 20,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 21 ]
  }, {
    "id" : 21,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 23, 24 ]
  }, {
    "id" : 23,
    "token" : "xkey",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "xorder",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "binomial|min|pqkey",
    "type" : "ParameterizedType",
    "children" : [ 30, 31 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 34, 35 ]
  }, {
    "id" : 30,
    "token" : "binomial|min|pq",
    "type" : "SimpleType",
    "children" : [ 32 ]
  }, {
    "id" : 31,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 33 ]
  }, {
    "id" : 32,
    "token" : "binomial|min|pq",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 36 ]
  }, {
    "id" : 36,
    "token" : "binomial|min|pqkey",
    "type" : "ParameterizedType",
    "children" : [ 37, 38 ]
  }, {
    "id" : 37,
    "token" : "binomial|min|pq",
    "type" : "SimpleType",
    "children" : [ 39 ]
  }, {
    "id" : 38,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 40 ]
  }, {
    "id" : 39,
    "token" : "binomial|min|pq",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "hhead",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 45, 46 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 47, 48 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 49, 50 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 51, 52, 53 ]
  }, {
    "id" : 50,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "union",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "minKey",
  "full_name" : "BinomialMinPQ.LongJavaFileProject.minKey",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Key minKey() {\n            if (isEmpty()) throw new NoSuchElementException(\"Priority queue is empty\");\n            Node min = head;\n            Node current = head;\n            while (current.sibling != null) {\n                min = (greater(min.key, current.sibling.key)) ? current : min;\n                current = current.sibling;\n            }\n            return min.key;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 5 ]
  }, {
    "id" : 3,
    "token" : "min|key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 6, 7, 8, 9, 10 ]
  }, {
    "id" : 5,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 11, 12 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 18, 19 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 23, 24 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 28, 29 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 47 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 15, 16 ]
  }, {
    "id" : 15,
    "token" : "no|such|element|exception",
    "type" : "SimpleType",
    "children" : [ 17 ]
  }, {
    "id" : 16,
    "token" : "priority|queue|is|empty",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "no|such|element|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 25 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 25,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "current",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 30, 31 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "Block",
    "children" : [ 32, 33 ]
  }, {
    "id" : 30,
    "token" : "currentsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 34 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 44 ]
  }, {
    "id" : 34,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "ConditionalExpression",
    "children" : [ 37, 38, 39 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 40 ]
  }, {
    "id" : 38,
    "token" : "current",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 41, 42, 43 ]
  }, {
    "id" : 41,
    "token" : "greater",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "minkey",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "currentsiblingkey",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 45, 46 ]
  }, {
    "id" : 45,
    "token" : "current",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "currentsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "minkey",
    "type" : "QualifiedName",
    "children" : [ ]
  } ]
}, {
  "name" : "delMin",
  "full_name" : "BinomialMinPQ.LongJavaFileProject.delMin",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Key delMin() {\n            if(isEmpty()) throw new NoSuchElementException(\"Priority queue is empty\");\n            Node min = eraseMin();\n            Node x = (min.child == null) ? min : min.child;\n            if (min.child != null) {\n                min.child = null;\n                Node prevx = null, nextx = x.sibling;\n                while (nextx != null) {\n                    x.sibling = prevx;\n                    prevx = x;\n                    x = nextx;nextx = nextx.sibling;\n                }\n                x.sibling = prevx;\n                BinomialMinPQ<Key> H = new BinomialMinPQ<Key>();\n                H.head = x;\n                head = union(H).head;\n            }\n            return min.key;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 5 ]
  }, {
    "id" : 3,
    "token" : "del|min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 6, 7, 8, 9, 10 ]
  }, {
    "id" : 5,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 11, 12 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 18, 19 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 35, 36 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 103 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 15, 16 ]
  }, {
    "id" : 15,
    "token" : "no|such|element|exception",
    "type" : "SimpleType",
    "children" : [ 17 ]
  }, {
    "id" : 16,
    "token" : "priority|queue|is|empty",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "no|such|element|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 23 ]
  }, {
    "id" : 23,
    "token" : "erase|min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 26 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 27, 28 ]
  }, {
    "id" : 26,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ConditionalExpression",
    "children" : [ 29, 30, 31 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 32 ]
  }, {
    "id" : 30,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "minchild",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "minchild",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 37, 38 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "Block",
    "children" : [ 39, 40, 41, 42, 43, 44, 45 ]
  }, {
    "id" : 37,
    "token" : "minchild",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 46 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 49, 50, 51 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 57, 58 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 77 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 80, 81 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 93 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 96 ]
  }, {
    "id" : 46,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 47, 48 ]
  }, {
    "id" : 47,
    "token" : "minchild",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 52 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 53, 54 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 55, 56 ]
  }, {
    "id" : 52,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "prevx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "nextx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "xsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 59, 60 ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "Block",
    "children" : [ 61, 62, 63, 64 ]
  }, {
    "id" : 59,
    "token" : "nextx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 65 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 68 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 71 ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 74 ]
  }, {
    "id" : 65,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 66, 67 ]
  }, {
    "id" : 66,
    "token" : "xsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "prevx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 69, 70 ]
  }, {
    "id" : 69,
    "token" : "prevx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 72, 73 ]
  }, {
    "id" : 72,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "nextx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 75, 76 ]
  }, {
    "id" : 75,
    "token" : "nextx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "nextxsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 78, 79 ]
  }, {
    "id" : 78,
    "token" : "xsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "prevx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "binomial|min|pqkey",
    "type" : "ParameterizedType",
    "children" : [ 82, 83 ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 86, 87 ]
  }, {
    "id" : 82,
    "token" : "binomial|min|pq",
    "type" : "SimpleType",
    "children" : [ 84 ]
  }, {
    "id" : 83,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 85 ]
  }, {
    "id" : 84,
    "token" : "binomial|min|pq",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 88 ]
  }, {
    "id" : 88,
    "token" : "binomial|min|pqkey",
    "type" : "ParameterizedType",
    "children" : [ 89, 90 ]
  }, {
    "id" : 89,
    "token" : "binomial|min|pq",
    "type" : "SimpleType",
    "children" : [ 91 ]
  }, {
    "id" : 90,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 92 ]
  }, {
    "id" : 91,
    "token" : "binomial|min|pq",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 94, 95 ]
  }, {
    "id" : 94,
    "token" : "hhead",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 97, 98 ]
  }, {
    "id" : 97,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 99, 100 ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 101, 102 ]
  }, {
    "id" : 100,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "union",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "minkey",
    "type" : "QualifiedName",
    "children" : [ ]
  } ]
}, {
  "name" : "union",
  "full_name" : "BinomialMinPQ.LongJavaFileProject.union",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public BinomialMinPQ<Key> union(BinomialMinPQ<Key> heap) {\n            if (heap == null) throw new IllegalArgumentException(\"Cannot merge a Binomial Heap with null\");\n            this.head = merge(new Node(), this.head, heap.head).sibling;\n            Node x = this.head;\n            Node prevx = null, nextx = x.sibling;\n            while (nextx != null) {\n                if (x.order < nextx.order ||\n                        (nextx.sibling != null && nextx.sibling.order == x.order)) {\n                    prevx = x; x = nextx;\n                } else if (greater(nextx.key, x.key)) {\n                    x.sibling = nextx.sibling;\n                    link(nextx, x);\n                } else {\n                    if (prevx == null) { this.head = nextx; }\n                    else { prevx.sibling = nextx; }\n                    link(x, nextx);\n                    x = nextx;\n                }\n                nextx = x.sibling;\n            }\n            return this;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "binomial|min|pqkey",
    "type" : "ParameterizedType",
    "children" : [ 6, 7 ]
  }, {
    "id" : 3,
    "token" : "union",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 16, 17, 18, 19, 20, 21 ]
  }, {
    "id" : 6,
    "token" : "binomial|min|pq",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "binomial|min|pq",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "binomial|min|pqkey",
    "type" : "ParameterizedType",
    "children" : [ 12, 13 ]
  }, {
    "id" : 11,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "binomial|min|pq",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 14,
    "token" : "binomial|min|pq",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 30 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 45, 46 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 52, 53, 54 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 60, 61 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 131 ]
  }, {
    "id" : 22,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 24, 25 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 26 ]
  }, {
    "id" : 24,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "illegal|argument|exception",
    "type" : "SimpleType",
    "children" : [ 29 ]
  }, {
    "id" : 28,
    "token" : "cannot|merge|a|binomial|heap|with|null",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 33, 34 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 35, 36 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 37, 38, 39, 40 ]
  }, {
    "id" : 36,
    "token" : "sibling",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "merge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 41 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 43, 44 ]
  }, {
    "id" : 40,
    "token" : "heaphead",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 42 ]
  }, {
    "id" : 42,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 47 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 48, 49 ]
  }, {
    "id" : 47,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 50, 51 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 55 ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 56, 57 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 58, 59 ]
  }, {
    "id" : 55,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "prevx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "nextx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "xsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 62, 63 ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "Block",
    "children" : [ 64, 65 ]
  }, {
    "id" : 62,
    "token" : "nextx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 66, 67, 68 ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 128 ]
  }, {
    "id" : 66,
    "token" : "||",
    "type" : "InfixExpression",
    "children" : [ 69, 70 ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "Block",
    "children" : [ 80, 81 ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 88, 89, 90 ]
  }, {
    "id" : 69,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 71, 72 ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 73 ]
  }, {
    "id" : 71,
    "token" : "xorder",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "nextxorder",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 74, 75 ]
  }, {
    "id" : 74,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 76, 77 ]
  }, {
    "id" : 75,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 78, 79 ]
  }, {
    "id" : 76,
    "token" : "nextxsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "nextxsiblingorder",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "xorder",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 82 ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 85 ]
  }, {
    "id" : 82,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 83, 84 ]
  }, {
    "id" : 83,
    "token" : "prevx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 86, 87 ]
  }, {
    "id" : 86,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "nextx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 91, 92, 93 ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "Block",
    "children" : [ 94, 95 ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "Block",
    "children" : [ 103, 104, 105 ]
  }, {
    "id" : 91,
    "token" : "greater",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "nextxkey",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "xkey",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 96 ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 99 ]
  }, {
    "id" : 96,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 97, 98 ]
  }, {
    "id" : 97,
    "token" : "xsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "nextxsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 100, 101, 102 ]
  }, {
    "id" : 100,
    "token" : "link",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "nextx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 106, 107, 108 ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 121 ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 125 ]
  }, {
    "id" : 106,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 109, 110 ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "Block",
    "children" : [ 111 ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "Block",
    "children" : [ 117 ]
  }, {
    "id" : 109,
    "token" : "prevx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 112 ]
  }, {
    "id" : 112,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 113, 114 ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 115, 116 ]
  }, {
    "id" : 114,
    "token" : "nextx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 118 ]
  }, {
    "id" : 118,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 119, 120 ]
  }, {
    "id" : 119,
    "token" : "prevxsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "nextx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 122, 123, 124 ]
  }, {
    "id" : 122,
    "token" : "link",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "nextx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 126, 127 ]
  }, {
    "id" : 126,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "nextx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 129, 130 ]
  }, {
    "id" : 129,
    "token" : "nextx",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "xsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  } ]
}, {
  "name" : "greater",
  "full_name" : "BinomialMinPQ.LongJavaFileProject.greater",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private boolean greater(Key n, Key m) {\n            if (n == null) return false;\n            if (m == null) return true;\n            return comp.compare(n, m) > 0;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "greater",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 13, 14, 15 ]
  }, {
    "id" : 7,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "m",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 21, 22 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 26 ]
  }, {
    "id" : 16,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 20 ]
  }, {
    "id" : 18,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 25 ]
  }, {
    "id" : 23,
    "token" : "m",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 29, 30, 31, 32 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "comp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "compare",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "m",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "link",
  "full_name" : "BinomialMinPQ.LongJavaFileProject.link",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void link(Node root1, Node root2) {\n            root1.sibling = root2.child;\n            root2.child = root1;\n            root2.order++;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "link",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 13, 14, 15 ]
  }, {
    "id" : 7,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 16 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 19 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 22 ]
  }, {
    "id" : 16,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 17, 18 ]
  }, {
    "id" : 17,
    "token" : "root|sibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "root|child",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "root|child",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "root",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 23 ]
  }, {
    "id" : 23,
    "token" : "root|order",
    "type" : "QualifiedName",
    "children" : [ ]
  } ]
}, {
  "name" : "eraseMin",
  "full_name" : "BinomialMinPQ.LongJavaFileProject.eraseMin",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private Node eraseMin() {\n            Node min = head;\n            Node previous = null;\n            Node current = head;\n            while (current.sibling != null) {\n                if (greater(min.key, current.sibling.key)) {\n                    previous = current;\n                    min = current.sibling;\n                }\n                current = current.sibling;\n            }\n            previous.sibling = min.sibling;\n            if (min == head) head = min.sibling;\n            return min;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 5 ]
  }, {
    "id" : 3,
    "token" : "erase|min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 6, 7, 8, 9, 10, 11, 12 ]
  }, {
    "id" : 5,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 13, 14 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 18, 19 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 23, 24 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 28, 29 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 50 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 53, 54 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 60 ]
  }, {
    "id" : 13,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "previous",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 25 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 25,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "current",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 30, 31 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "Block",
    "children" : [ 32, 33 ]
  }, {
    "id" : 30,
    "token" : "currentsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 34, 35 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 47 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 36, 37, 38 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "Block",
    "children" : [ 39, 40 ]
  }, {
    "id" : 36,
    "token" : "greater",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "minkey",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "currentsiblingkey",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 41 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 44 ]
  }, {
    "id" : 41,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "previous",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "current",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 45, 46 ]
  }, {
    "id" : 45,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "currentsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 48, 49 ]
  }, {
    "id" : 48,
    "token" : "current",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "currentsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 51, 52 ]
  }, {
    "id" : 51,
    "token" : "previoussibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "minsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 55, 56 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 57 ]
  }, {
    "id" : 55,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 58, 59 ]
  }, {
    "id" : 58,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "minsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "merge",
  "full_name" : "BinomialMinPQ.LongJavaFileProject.merge",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private Node merge(Node h, Node x, Node y) {\n            if (x == null && y == null) return h;\n            else if (x == null) h.sibling = merge(y, null, y.sibling);\n            else if (y == null) h.sibling = merge(x, x.sibling, null);\n            else if (x.order < y.order) h.sibling = merge(x, x.sibling, y);\n            else                        h.sibling = merge(y, x, y.sibling);\n            return h;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 3,
    "token" : "merge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 12, 13 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 15, 16 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 18, 19 ]
  }, {
    "id" : 8,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 17 ]
  }, {
    "id" : 16,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 20, 21, 22 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 73 ]
  }, {
    "id" : 20,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 29 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 30, 31, 32 ]
  }, {
    "id" : 23,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 25, 26 ]
  }, {
    "id" : 24,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 27, 28 ]
  }, {
    "id" : 25,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 33, 34 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 35 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 42, 43, 44 ]
  }, {
    "id" : 33,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "hsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39, 40, 41 ]
  }, {
    "id" : 38,
    "token" : "merge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "ysibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 45, 46 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 47 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 54, 55, 56 ]
  }, {
    "id" : 45,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 48, 49 ]
  }, {
    "id" : 48,
    "token" : "hsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 50, 51, 52, 53 ]
  }, {
    "id" : 50,
    "token" : "merge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "xsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 57, 58 ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 59 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 66 ]
  }, {
    "id" : 57,
    "token" : "xorder",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "yorder",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 60, 61 ]
  }, {
    "id" : 60,
    "token" : "hsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 62, 63, 64, 65 ]
  }, {
    "id" : 62,
    "token" : "merge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "xsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 67, 68 ]
  }, {
    "id" : 67,
    "token" : "hsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 69, 70, 71, 72 ]
  }, {
    "id" : 69,
    "token" : "merge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "ysibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "h",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "iterator",
  "full_name" : "BinomialMinPQ.LongJavaFileProject.iterator",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Iterator<Key> iterator() {\n            return new MyIterator();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "iteratorkey",
    "type" : "ParameterizedType",
    "children" : [ 5, 6 ]
  }, {
    "id" : 3,
    "token" : "iterator",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 9 ]
  }, {
    "id" : 5,
    "token" : "iterator",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "iterator",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 10 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "my|iterator",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 12,
    "token" : "my|iterator",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "MyIterator",
  "full_name" : "MyIterator.BinomialMinPQ.LongJavaFileProject.MyIterator",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public MyIterator() {\n                data = new BinomialMinPQ<Key>(comp);\n                data.head = clone(head, null);\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "my|iterator",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4, 5 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 6 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 15 ]
  }, {
    "id" : 6,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "data",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 9, 10 ]
  }, {
    "id" : 9,
    "token" : "binomial|min|pqkey",
    "type" : "ParameterizedType",
    "children" : [ 11, 12 ]
  }, {
    "id" : 10,
    "token" : "comp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "binomial|min|pq",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "binomial|min|pq",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "datahead",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 18, 19, 20 ]
  }, {
    "id" : 18,
    "token" : "clone",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "clone",
  "full_name" : "MyIterator.BinomialMinPQ.LongJavaFileProject.clone",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private Node clone(Node x, Node parent) {\n                if (x == null) return null;\n                Node node = new Node();\n                node.key = x.key;\n                node.sibling = clone(x.sibling, parent);\n                node.child = clone(x.child, node);\n                return node;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 3,
    "token" : "clone",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 14, 15, 16, 17, 18, 19 ]
  }, {
    "id" : 7,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "parent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 25, 26 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 32 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 35 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 41 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 47 ]
  }, {
    "id" : 20,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 22, 23 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 24 ]
  }, {
    "id" : 22,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 27 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 28, 29 ]
  }, {
    "id" : 27,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 30 ]
  }, {
    "id" : 30,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 31 ]
  }, {
    "id" : 31,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "nodekey",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "xkey",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "nodesibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39, 40 ]
  }, {
    "id" : 38,
    "token" : "clone",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "xsibling",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "parent",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "nodechild",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 44, 45, 46 ]
  }, {
    "id" : 44,
    "token" : "clone",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "xchild",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "hasNext",
  "full_name" : "MyIterator.BinomialMinPQ.LongJavaFileProject.hasNext",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public boolean hasNext() {\n                return !data.isEmpty();\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "has|next",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 7 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 8, 9 ]
  }, {
    "id" : 8,
    "token" : "data",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "next",
  "full_name" : "MyIterator.BinomialMinPQ.LongJavaFileProject.next",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Key next() {\n                if (!hasNext()) throw new NoSuchElementException();\n                return data.delMin();\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 5 ]
  }, {
    "id" : 3,
    "token" : "next",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 15 ]
  }, {
    "id" : 8,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 12 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "has|next",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 13 ]
  }, {
    "id" : 13,
    "token" : "no|such|element|exception",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 14,
    "token" : "no|such|element|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "data",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "del|min",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "remove",
  "full_name" : "MyIterator.BinomialMinPQ.LongJavaFileProject.remove",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void remove() {\n                throw new UnsupportedOperationException();\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "remove",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 7 ]
  }, {
    "id" : 7,
    "token" : "unsupported|operation|exception",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "unsupported|operation|exception",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "compare",
  "full_name" : "MyComparator.BinomialMinPQ.LongJavaFileProject.compare",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "@Override\n            public int compare(Key key1, Key key2) {\n                return ((Comparable<Key>) key1).compareTo(key2);\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "MarkerAnnotation",
    "children" : [ 8 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "compare",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 12, 13 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 15 ]
  }, {
    "id" : 8,
    "token" : "override",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 14 ]
  }, {
    "id" : 13,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 16 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 20 ]
  }, {
    "id" : 18,
    "token" : "compare|to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 21, 22 ]
  }, {
    "id" : 21,
    "token" : "comparablekey",
    "type" : "ParameterizedType",
    "children" : [ 23, 24 ]
  }, {
    "id" : 22,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "comparable",
    "type" : "SimpleType",
    "children" : [ 25 ]
  }, {
    "id" : 24,
    "token" : "key",
    "type" : "SimpleType",
    "children" : [ 26 ]
  }, {
    "id" : 25,
    "token" : "comparable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "SegmentTree",
  "full_name" : "SegmentTree.LongJavaFileProject.SegmentTree",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Time-Complexity:  O(n*log(n))\n         *\n         * @param array the Initialization array\n         */",
  "comment" : null,
  "body" : "public SegmentTree(int[] array) {\n            this.array = Arrays.copyOf(array, array.length);\n            //The max size of this array is about 2 * 2 ^ log2(n) + 1\n            size = (int) (2 * Math.pow(2.0, Math.floor((Math.log((double) array.length) / Math.log(2.0)) + 1)));\n            heap = new Node[size];\n            build(1, 0, array.length);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 6, 7 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "segment|tree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 15, 16, 17, 18 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "timecomplexity|onlogn",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "the|initialization|array",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 13, 14 ]
  }, {
    "id" : 12,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 19 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 28 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 56 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 64 ]
  }, {
    "id" : 19,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 22, 23 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 24, 25, 26, 27 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "arrays",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "copy|of",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "arraylength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 29, 30 ]
  }, {
    "id" : 29,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 33 ]
  }, {
    "id" : 33,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 36, 37, 38, 39 ]
  }, {
    "id" : 36,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "pow",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : ".",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 40, 41, 42 ]
  }, {
    "id" : 40,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "floor",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 45 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 46, 47 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 48, 49, 50 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 53, 54, 55 ]
  }, {
    "id" : 48,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "log",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "CastExpression",
    "children" : [ 51, 52 ]
  }, {
    "id" : 51,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "arraylength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "log",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : ".",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 57, 58 ]
  }, {
    "id" : 57,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 59, 60 ]
  }, {
    "id" : 59,
    "token" : "node",
    "type" : "ArrayType",
    "children" : [ 61, 62 ]
  }, {
    "id" : 60,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 63 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 65, 66, 67, 68 ]
  }, {
    "id" : 65,
    "token" : "build",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "arraylength",
    "type" : "QualifiedName",
    "children" : [ ]
  } ]
}, {
  "name" : "size",
  "full_name" : "SegmentTree.LongJavaFileProject.size",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int size() {\n            return array.length;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "arraylength",
    "type" : "QualifiedName",
    "children" : [ ]
  } ]
}, {
  "name" : "build",
  "full_name" : "SegmentTree.LongJavaFileProject.build",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void build(int v, int from, int size) {\n            heap[v] = new Node();\n            heap[v].from = from;\n            heap[v].to = from + size - 1;\n\n            if (size == 1) {\n                heap[v].sum = array[from];\n                heap[v].min = array[from];\n            } else {\n                //Build childs\n                build(2 * v, from, size / 2);\n                build(2 * v + 1, from + size / 2, size - size / 2);\n\n                heap[v].sum = heap[2 * v].sum + heap[2 * v + 1].sum;\n                //min = min of the children\n                heap[v].min = Math.min(heap[2 * v].min, heap[2 * v + 1].min);\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "build",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 12, 13 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 14, 15, 16, 17 ]
  }, {
    "id" : 8,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 18 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 25 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 32 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 43, 44, 45 ]
  }, {
    "id" : 18,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 23 ]
  }, {
    "id" : 21,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 24 ]
  }, {
    "id" : 24,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 28, 29 ]
  }, {
    "id" : 27,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 30, 31 ]
  }, {
    "id" : 29,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 35, 36 ]
  }, {
    "id" : 34,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 39, 40 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 37, 38 ]
  }, {
    "id" : 36,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 41, 42 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 46, 47 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "Block",
    "children" : [ 48, 49 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "Block",
    "children" : [ 68, 69, 70, 71 ]
  }, {
    "id" : 46,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 50 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 59 ]
  }, {
    "id" : 50,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 51, 52 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 53, 54 ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 57, 58 ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 55, 56 ]
  }, {
    "id" : 54,
    "token" : "sum",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 60, 61 ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 62, 63 ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 66, 67 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 64, 65 ]
  }, {
    "id" : 63,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 72 ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 81 ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 98 ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 121 ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 73, 74, 75, 76 ]
  }, {
    "id" : 73,
    "token" : "build",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 77, 78 ]
  }, {
    "id" : 75,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 79, 80 ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 82, 83, 84, 85 ]
  }, {
    "id" : 82,
    "token" : "build",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 86, 87 ]
  }, {
    "id" : 84,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 90, 91 ]
  }, {
    "id" : 85,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 94, 95 ]
  }, {
    "id" : 86,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 88, 89 ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 92, 93 ]
  }, {
    "id" : 92,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 96, 97 ]
  }, {
    "id" : 96,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 99, 100 ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 101, 102 ]
  }, {
    "id" : 100,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 105, 106 ]
  }, {
    "id" : 101,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 103, 104 ]
  }, {
    "id" : 102,
    "token" : "sum",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 107, 108 ]
  }, {
    "id" : 106,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 113, 114 ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 109, 110 ]
  }, {
    "id" : 108,
    "token" : "sum",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 111, 112 ]
  }, {
    "id" : 111,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 115, 116 ]
  }, {
    "id" : 114,
    "token" : "sum",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 117, 118 ]
  }, {
    "id" : 117,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 119, 120 ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 122, 123 ]
  }, {
    "id" : 122,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 124, 125 ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 128, 129, 130, 131 ]
  }, {
    "id" : 124,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 126, 127 ]
  }, {
    "id" : 125,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 132, 133 ]
  }, {
    "id" : 131,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 138, 139 ]
  }, {
    "id" : 132,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 134, 135 ]
  }, {
    "id" : 133,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 134,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 135,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 136, 137 ]
  }, {
    "id" : 136,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 137,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 138,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 140, 141 ]
  }, {
    "id" : 139,
    "token" : "min",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 140,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 141,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 142, 143 ]
  }, {
    "id" : 142,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 144, 145 ]
  }, {
    "id" : 143,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 144,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "rsq",
  "full_name" : "SegmentTree.LongJavaFileProject.rsq",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Range Sum Query\n         *\n         * Time-Complexity: O(log(n))\n         *\n         * @param  from from index\n         * @param  to to index\n         * @return sum\n         */",
  "comment" : null,
  "body" : "public int rsq(int from, int to) {\n            return rsq(1, from, to);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 8, 9, 10, 11 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "rsq",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 19, 20 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 21, 22 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 23 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 9,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 10,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 11,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 18 ]
  }, {
    "id" : 12,
    "token" : "range|sum|query",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "timecomplexity|ologn",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "from|index",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "to|index",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "sum",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 24 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 25, 26, 27, 28 ]
  }, {
    "id" : 25,
    "token" : "rsq",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "rMinQ",
  "full_name" : "SegmentTree.LongJavaFileProject.rMinQ",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Range Min Query\n         *\n         * Time-Complexity: O(log(n))\n         *\n         * @param  from from index\n         * @param  to to index\n         * @return min\n         */",
  "comment" : null,
  "body" : "public int rMinQ(int from, int to) {\n            return rMinQ(1, from, to);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 8, 9, 10, 11 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "r|min|q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 19, 20 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 21, 22 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 23 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 9,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 10,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 11,
    "token" : "return",
    "type" : "TagElement",
    "children" : [ 18 ]
  }, {
    "id" : 12,
    "token" : "range|min|query",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "timecomplexity|ologn",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "from|index",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "to|index",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "min",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 24 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 25, 26, 27, 28 ]
  }, {
    "id" : 25,
    "token" : "r|min|q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "update",
  "full_name" : "SegmentTree.LongJavaFileProject.update",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Range Update Operation.\n         * With this operation you can update either one position or a range of positions with a given number.\n         * The update operations will update the less it can to update the whole range (Lazy Propagation).\n         * The values will be propagated lazily from top to bottom of the segment tree.\n         * This behavior is really useful for updates on portions of the array\n         * <p>\n         * Time-Complexity: O(log(n))\n         *\n         * @param from  from index\n         * @param to    to index\n         * @param value value\n         */",
  "comment" : null,
  "body" : "public void update(int from, int to, int value) {\n            update(1, from, to, value);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 9, 10, 11, 12 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "update",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 26, 27 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 28, 29 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 30, 31 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Block",
    "children" : [ 32 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 13, 14, 15, 16, 17, 18, 19 ]
  }, {
    "id" : 10,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 11,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 12,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 13,
    "token" : "range|update|operation",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "with|this|operation|you|can|update|either|one|position|or|a|range|of|positions|with|a|given|number",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "the|update|operations|will|update|the|less|it|can|to|update|the|whole|range|lazy|propagation",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "the|values|will|be|propagated|lazily|from|top|to|bottom|of|the|segment|tree",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "this|behavior|is|really|useful|for|updates|on|portions|of|the|array",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "p",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "timecomplexity|ologn",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "from|index",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "to|index",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "value",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 33 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 34, 35, 36, 37, 38 ]
  }, {
    "id" : 34,
    "token" : "update",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "propagate",
  "full_name" : "SegmentTree.LongJavaFileProject.propagate",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void propagate(int v) {\n            Node n = heap[v];\n\n            if (n.pendingVal != null) {\n                change(heap[2 * v], n.pendingVal);\n                change(heap[2 * v + 1], n.pendingVal);\n                n.pendingVal = null; //unset the pending propagation value\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "propagate",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 8, 9 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 10, 11 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 17, 18 ]
  }, {
    "id" : 10,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 13, 14 ]
  }, {
    "id" : 12,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 15, 16 ]
  }, {
    "id" : 15,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 19, 20 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "Block",
    "children" : [ 21, 22, 23 ]
  }, {
    "id" : 19,
    "token" : "npending|val",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 24 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 32 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 42 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 25, 26, 27 ]
  }, {
    "id" : 25,
    "token" : "change",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 28, 29 ]
  }, {
    "id" : 27,
    "token" : "npending|val",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 33, 34, 35 ]
  }, {
    "id" : 33,
    "token" : "change",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 36, 37 ]
  }, {
    "id" : 35,
    "token" : "npending|val",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "heap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 38, 39 ]
  }, {
    "id" : 38,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 40, 41 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "npending|val",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "change",
  "full_name" : "SegmentTree.LongJavaFileProject.change",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void change(Node n, int value) {\n            n.pendingVal = value;\n            n.sum = n.size() * value;\n            n.min = value;\n            array[n.from] = value;\n\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "change",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 12, 13, 14, 15 ]
  }, {
    "id" : 7,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 16 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 19 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 26 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 29 ]
  }, {
    "id" : 16,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 17, 18 ]
  }, {
    "id" : 17,
    "token" : "npending|val",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "nsum",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 24, 25 ]
  }, {
    "id" : 23,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 27, 28 ]
  }, {
    "id" : 27,
    "token" : "nmin",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 32, 33 ]
  }, {
    "id" : 31,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "nfrom",
    "type" : "QualifiedName",
    "children" : [ ]
  } ]
}, {
  "name" : "contains",
  "full_name" : "SegmentTree.LongJavaFileProject.contains",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private boolean contains(int from1, int to1, int from2, int to2) {\n            return from2 >= from1 && to2 <= to1;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 13, 14 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 15, 16 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Block",
    "children" : [ 17 ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 18 ]
  }, {
    "id" : 18,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : ">=",
    "type" : "InfixExpression",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 21,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "intersects",
  "full_name" : "SegmentTree.LongJavaFileProject.intersects",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private boolean intersects(int from1, int to1, int from2, int to2) {\n            return from1 <= from2 && to1 >= from2   //  (.[..)..] or (.[...]..)\n                    || from1 >= from2 && from1 <= to2; // [.(..]..) or [..(..)..\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7, 8 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "intersects",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 13, 14 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 15, 16 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Block",
    "children" : [ 17 ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 18 ]
  }, {
    "id" : 18,
    "token" : "||",
    "type" : "InfixExpression",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 27, 28 ]
  }, {
    "id" : 21,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 22,
    "token" : ">=",
    "type" : "InfixExpression",
    "children" : [ 25, 26 ]
  }, {
    "id" : 23,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : ">=",
    "type" : "InfixExpression",
    "children" : [ 29, 30 ]
  }, {
    "id" : 28,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 29,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "size",
  "full_name" : "Node.SegmentTree.LongJavaFileProject.size",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "int size() {\n                return to - from + 1;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 6, 7 ]
  }, {
    "id" : 6,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "to",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "from",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "SegmentTree.LongJavaFileProject.main",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void main(String[] args) {\n\n\n            SegmentTree st = null;\n\n            String cmd = \"cmp\";\n            while (true) {\n                String[] line = new String[0];\n\n                if (line[0].equals(\"exit\")) break;\n\n                int arg1 = 0, arg2 = 0, arg3 = 0;\n\n                if (line.length > 1) {\n                    arg1 = Integer.parseInt(line[1]);\n                }\n                if (line.length > 2) {\n                    arg2 = Integer.parseInt(line[2]);\n                }\n                if (line.length > 3) {\n                    arg3 = Integer.parseInt(line[3]);\n                }\n\n                if ((!line[0].equals(\"set\") && !line[0].equals(\"init\")) && st == null) {\n                    continue;\n                }\n                int array[];\n                if (line[0].equals(\"set\")) {\n                    array = new int[line.length - 1];\n                    for (int i = 0; i < line.length - 1; i++) {\n                        array[i] = Integer.parseInt(line[i + 1]);\n                    }\n                    st = new SegmentTree(array);\n                }\n                else if (line[0].equals(\"init\")) {\n                    array = new int[arg1];\n                    Arrays.fill(array, arg2);\n                    st = new SegmentTree(array);\n\n                    for (int i = 0; i < st.size(); i++) {\n\n                    }\n                }\n\n                else if (line[0].equals(\"up\")) {\n                    st.update(arg1, arg2, arg3);\n                    for (int i = 0; i < st.size(); i++) {\n\n                    }\n\n                }\n                else if (line[0].equals(\"rsq\")) {\n\n                }\n                else if (line[0].equals(\"rmq\")) {\n\n                }\n                else {\n\n                }\n\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 19, 20 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 14,
    "token" : "segment|tree",
    "type" : "SimpleType",
    "children" : [ 16 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 17, 18 ]
  }, {
    "id" : 16,
    "token" : "segment|tree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 21 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 21,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "cmd",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "cmp",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "Block",
    "children" : [ 26, 27, 28, 29, 30, 31, 32, 33, 34 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 35, 36 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 47, 48 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 54, 55, 56, 57 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 64, 65 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 77, 78 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 90, 91 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 103, 104 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 125, 126 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 129, 130, 131 ]
  }, {
    "id" : 35,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 37, 38 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 40, 41 ]
  }, {
    "id" : 37,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 39 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 44, 45 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 46 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 49, 50, 51 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "BreakStatement",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 52, 53 ]
  }, {
    "id" : 50,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "exit",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 58, 59 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 60, 61 ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 62, 63 ]
  }, {
    "id" : 58,
    "token" : "arg",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "arg",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "arg",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 66, 67 ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "Block",
    "children" : [ 68 ]
  }, {
    "id" : 66,
    "token" : "linelength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 69 ]
  }, {
    "id" : 69,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 70, 71 ]
  }, {
    "id" : 70,
    "token" : "arg",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 72, 73, 74 ]
  }, {
    "id" : 72,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "parse|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 75, 76 ]
  }, {
    "id" : 75,
    "token" : "line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 79, 80 ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "Block",
    "children" : [ 81 ]
  }, {
    "id" : 79,
    "token" : "linelength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 82 ]
  }, {
    "id" : 82,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 83, 84 ]
  }, {
    "id" : 83,
    "token" : "arg",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 85, 86, 87 ]
  }, {
    "id" : 85,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "parse|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 88, 89 ]
  }, {
    "id" : 88,
    "token" : "line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 92, 93 ]
  }, {
    "id" : 91,
    "token" : "",
    "type" : "Block",
    "children" : [ 94 ]
  }, {
    "id" : 92,
    "token" : "linelength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 95 ]
  }, {
    "id" : 95,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 96, 97 ]
  }, {
    "id" : 96,
    "token" : "arg",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 98, 99, 100 ]
  }, {
    "id" : 98,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "parse|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 101, 102 ]
  }, {
    "id" : 101,
    "token" : "line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 105, 106 ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "Block",
    "children" : [ 124 ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 107 ]
  }, {
    "id" : 106,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 122, 123 ]
  }, {
    "id" : 107,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 108, 109 ]
  }, {
    "id" : 108,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 110 ]
  }, {
    "id" : 109,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 116 ]
  }, {
    "id" : 110,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 111, 112, 113 ]
  }, {
    "id" : 111,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 114, 115 ]
  }, {
    "id" : 112,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "set",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 117, 118, 119 ]
  }, {
    "id" : 117,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 120, 121 ]
  }, {
    "id" : 118,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "init",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "",
    "type" : "ContinueStatement",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 127, 128 ]
  }, {
    "id" : 127,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 132, 133, 134 ]
  }, {
    "id" : 130,
    "token" : "",
    "type" : "Block",
    "children" : [ 137, 138, 139 ]
  }, {
    "id" : 131,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 181, 182, 183 ]
  }, {
    "id" : 132,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 135, 136 ]
  }, {
    "id" : 133,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 134,
    "token" : "set",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 135,
    "token" : "line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 137,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 140 ]
  }, {
    "id" : 138,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 149, 150, 151, 152 ]
  }, {
    "id" : 139,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 175 ]
  }, {
    "id" : 140,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 141, 142 ]
  }, {
    "id" : 141,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 143, 144 ]
  }, {
    "id" : 143,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 145, 146 ]
  }, {
    "id" : 144,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 147, 148 ]
  }, {
    "id" : 145,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 146,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "linelength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 153, 154 ]
  }, {
    "id" : 150,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 157, 158 ]
  }, {
    "id" : 151,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 161 ]
  }, {
    "id" : 152,
    "token" : "",
    "type" : "Block",
    "children" : [ 162 ]
  }, {
    "id" : 153,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 154,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 155, 156 ]
  }, {
    "id" : 155,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 157,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 158,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 159, 160 ]
  }, {
    "id" : 159,
    "token" : "linelength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 160,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 162,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 163 ]
  }, {
    "id" : 163,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 164, 165 ]
  }, {
    "id" : 164,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 166, 167 ]
  }, {
    "id" : 165,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 168, 169, 170 ]
  }, {
    "id" : 166,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 167,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 168,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 169,
    "token" : "parse|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 170,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 171, 172 ]
  }, {
    "id" : 171,
    "token" : "line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 172,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 173, 174 ]
  }, {
    "id" : 173,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 174,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 175,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 176, 177 ]
  }, {
    "id" : 176,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 177,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 178, 179 ]
  }, {
    "id" : 178,
    "token" : "segment|tree",
    "type" : "SimpleType",
    "children" : [ 180 ]
  }, {
    "id" : 179,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 180,
    "token" : "segment|tree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 181,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 184, 185, 186 ]
  }, {
    "id" : 182,
    "token" : "",
    "type" : "Block",
    "children" : [ 189, 190, 191, 192 ]
  }, {
    "id" : 183,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 224, 225, 226 ]
  }, {
    "id" : 184,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 187, 188 ]
  }, {
    "id" : 185,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 186,
    "token" : "init",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 187,
    "token" : "line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 188,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 189,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 193 ]
  }, {
    "id" : 190,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 200 ]
  }, {
    "id" : 191,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 205 ]
  }, {
    "id" : 192,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 211, 212, 213, 214 ]
  }, {
    "id" : 193,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 194, 195 ]
  }, {
    "id" : 194,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 195,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 196, 197 ]
  }, {
    "id" : 196,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 198, 199 ]
  }, {
    "id" : 197,
    "token" : "arg",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 198,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 199,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 200,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 201, 202, 203, 204 ]
  }, {
    "id" : 201,
    "token" : "arrays",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 202,
    "token" : "fill",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 203,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 204,
    "token" : "arg",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 205,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 206, 207 ]
  }, {
    "id" : 206,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 207,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 208, 209 ]
  }, {
    "id" : 208,
    "token" : "segment|tree",
    "type" : "SimpleType",
    "children" : [ 210 ]
  }, {
    "id" : 209,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 210,
    "token" : "segment|tree",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 211,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 215, 216 ]
  }, {
    "id" : 212,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 219, 220 ]
  }, {
    "id" : 213,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 223 ]
  }, {
    "id" : 214,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 215,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 216,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 217, 218 ]
  }, {
    "id" : 217,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 218,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 219,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 220,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 221, 222 ]
  }, {
    "id" : 221,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 222,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 223,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 224,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 227, 228, 229 ]
  }, {
    "id" : 225,
    "token" : "",
    "type" : "Block",
    "children" : [ 232, 233 ]
  }, {
    "id" : 226,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 253, 254, 255 ]
  }, {
    "id" : 227,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 230, 231 ]
  }, {
    "id" : 228,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 229,
    "token" : "up",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 230,
    "token" : "line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 231,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 232,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 234 ]
  }, {
    "id" : 233,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 240, 241, 242, 243 ]
  }, {
    "id" : 234,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 235, 236, 237, 238, 239 ]
  }, {
    "id" : 235,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 236,
    "token" : "update",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 237,
    "token" : "arg",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 238,
    "token" : "arg",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 239,
    "token" : "arg",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 240,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 244, 245 ]
  }, {
    "id" : 241,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 248, 249 ]
  }, {
    "id" : 242,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 252 ]
  }, {
    "id" : 243,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 244,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 245,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 246, 247 ]
  }, {
    "id" : 246,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 247,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 248,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 249,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 250, 251 ]
  }, {
    "id" : 250,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 251,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 252,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 253,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 256, 257, 258 ]
  }, {
    "id" : 254,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 255,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 261, 262, 263 ]
  }, {
    "id" : 256,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 259, 260 ]
  }, {
    "id" : 257,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 258,
    "token" : "rsq",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 259,
    "token" : "line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 260,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 261,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 264, 265, 266 ]
  }, {
    "id" : 262,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 263,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 264,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 267, 268 ]
  }, {
    "id" : 265,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 266,
    "token" : "rmq",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 267,
    "token" : "line",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 268,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "GaussJordanElimination",
  "full_name" : "GaussJordanElimination.LongJavaFileProject.GaussJordanElimination",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : "/**\n         * Solves the linear system of equations <em>Ax</em> = <em>b</em>,\n         * where <em>A</em> is an <em>n</em>-by-<em>n</em> matrix and <em>b</em>\n         * is a length <em>n</em> vector.\n         *\n         * @param  A the <em>n</em>-by-<em>n</em> constraint matrix\n         * @param  b the length <em>n</em> right-hand-side vector\n         */",
  "comment" : null,
  "body" : "public GaussJordanElimination(double[][] A, double[] b) {\n            n = b.length;\n\n            // build augmented matrix\n            a = new double[n][n+n+1];\n            for (int i = 0; i < n; i++)\n                for (int j = 0; j < n; j++)\n                    a[i][j] = A[i][j];\n\n            // only needed if you want to find certificate of infeasibility (or compute inverse)\n            for (int i = 0; i < n; i++)\n                a[i][n+i] = 1.0;\n\n            for (int i = 0; i < n; i++)\n                a[i][n+n] = b[i];\n\n            solve();\n\n            assert certifySolution(A, b);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7, 8, 9 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "gauss|jordan|elimination",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 17, 18 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 22, 23 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 26, 27, 28, 29, 30, 31, 32 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 10, 11, 12 ]
  }, {
    "id" : 8,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 13, 14 ]
  }, {
    "id" : 9,
    "token" : "param",
    "type" : "TagElement",
    "children" : [ 15, 16 ]
  }, {
    "id" : 10,
    "token" : "solves|the|linear|system|of|equations|emaxem|=|embem",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "where|emaem|is|an|emnembyemnem|matrix|and|embem",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "is|a|length|emnem|vector",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "the|emnembyemnem|constraint|matrix",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "the|length|emnem|righthandside|vector",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 19, 20, 21 ]
  }, {
    "id" : 18,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 24, 25 ]
  }, {
    "id" : 23,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 33 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 36 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 48, 49, 50, 51 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 81, 82, 83, 84 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 101, 102, 103, 104 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 123 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "AssertStatement",
    "children" : [ 125 ]
  }, {
    "id" : 33,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "blength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 37, 38 ]
  }, {
    "id" : 37,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 39, 40, 41 ]
  }, {
    "id" : 39,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 42, 43, 44 ]
  }, {
    "id" : 40,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 45, 46, 47 ]
  }, {
    "id" : 42,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 52, 53 ]
  }, {
    "id" : 49,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 56, 57 ]
  }, {
    "id" : 50,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 58 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 59, 60, 61, 62 ]
  }, {
    "id" : 52,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 54, 55 ]
  }, {
    "id" : 54,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 63, 64 ]
  }, {
    "id" : 60,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 67, 68 ]
  }, {
    "id" : 61,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 69 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 70 ]
  }, {
    "id" : 63,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 65, 66 ]
  }, {
    "id" : 65,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 71, 72 ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 73, 74 ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 77, 78 ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 75, 76 ]
  }, {
    "id" : 74,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 79, 80 ]
  }, {
    "id" : 78,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 85, 86 ]
  }, {
    "id" : 82,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 89, 90 ]
  }, {
    "id" : 83,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 91 ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 92 ]
  }, {
    "id" : 85,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 87, 88 ]
  }, {
    "id" : 87,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 93, 94 ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 95, 96 ]
  }, {
    "id" : 94,
    "token" : ".",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 97, 98 ]
  }, {
    "id" : 96,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 99, 100 ]
  }, {
    "id" : 97,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 100,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 105, 106 ]
  }, {
    "id" : 102,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 109, 110 ]
  }, {
    "id" : 103,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 111 ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 112 ]
  }, {
    "id" : 105,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 107, 108 ]
  }, {
    "id" : 107,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 113, 114 ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 115, 116 ]
  }, {
    "id" : 114,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 121, 122 ]
  }, {
    "id" : 115,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 117, 118 ]
  }, {
    "id" : 116,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 119, 120 ]
  }, {
    "id" : 117,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 124 ]
  }, {
    "id" : 124,
    "token" : "solve",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 126, 127, 128 ]
  }, {
    "id" : 126,
    "token" : "certify|solution",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "solve",
  "full_name" : "GaussJordanElimination.LongJavaFileProject.solve",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void solve() {\n\n            // Gauss-Jordan elimination\n            for (int p = 0; p < n; p++) {\n                // show();\n\n                // find pivot row using partial pivoting\n                int max = p;\n                for (int i = p+1; i < n; i++) {\n                    if (Math.abs(a[i][p]) > Math.abs(a[max][p])) {\n                        max = i;\n                    }\n                }\n\n                // exchange row p with row max\n                swap(p, max);\n\n                // singular or nearly singular\n                if (Math.abs(a[p][p]) <= EPSILON) {\n                    continue;\n                    // throw new ArithmeticException(\"Matrix is singular or nearly singular\");\n                }\n\n                // pivot\n                pivot(p, p);\n            }\n            // show();\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "solve",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 6, 7, 8, 9 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 10, 11 ]
  }, {
    "id" : 7,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 14, 15 ]
  }, {
    "id" : 8,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 16 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Block",
    "children" : [ 17, 18, 19, 20, 21 ]
  }, {
    "id" : 10,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 12, 13 ]
  }, {
    "id" : 12,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 26, 27, 28, 29 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 62 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 66, 67 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 78 ]
  }, {
    "id" : 22,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "max",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 30, 31 ]
  }, {
    "id" : 27,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 36, 37 ]
  }, {
    "id" : 28,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 38 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "Block",
    "children" : [ 39 ]
  }, {
    "id" : 30,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 32, 33 ]
  }, {
    "id" : 32,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 34, 35 ]
  }, {
    "id" : 34,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "Block",
    "children" : [ 58 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 44, 45, 46 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 51, 52, 53 ]
  }, {
    "id" : 44,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "abs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 47, 48 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 49, 50 ]
  }, {
    "id" : 48,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "abs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 54, 55 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 56, 57 ]
  }, {
    "id" : 55,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "max",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 59 ]
  }, {
    "id" : 59,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 60, 61 ]
  }, {
    "id" : 60,
    "token" : "max",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 63, 64, 65 ]
  }, {
    "id" : 63,
    "token" : "swap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "max",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 68, 69 ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "Block",
    "children" : [ 77 ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 70, 71, 72 ]
  }, {
    "id" : 69,
    "token" : "epsilon",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "abs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 73, 74 ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 75, 76 ]
  }, {
    "id" : 74,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "ContinueStatement",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 79, 80, 81 ]
  }, {
    "id" : 79,
    "token" : "pivot",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "swap",
  "full_name" : "GaussJordanElimination.LongJavaFileProject.swap",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void swap(int row1, int row2) {\n            double[] temp = a[row1];\n            a[row1] = a[row2];\n            a[row2] = temp;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "swap",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13 ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 22 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 29 ]
  }, {
    "id" : 14,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 18, 19 ]
  }, {
    "id" : 16,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 23, 24 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 25, 26 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 27, 28 ]
  }, {
    "id" : 25,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 32, 33 ]
  }, {
    "id" : 31,
    "token" : "temp",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "row",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "pivot",
  "full_name" : "GaussJordanElimination.LongJavaFileProject.pivot",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void pivot(int p, int q) {\n\n            // everything but row p and column q\n            for (int i = 0; i < n; i++) {\n                double alpha = a[i][q] / a[p][q];\n                for (int j = 0; j <= n+n; j++) {\n                    if (i != p && j != q) a[i][j] -= alpha * a[p][j];\n                }\n            }\n\n            // zero out column q\n            for (int i = 0; i < n; i++)\n                if (i != p) a[i][q] = 0.0;\n\n            // scale row p (ok to go from q+1 to n, but do this for consistency with simplex pivot)\n            for (int j = 0; j <= n+n; j++)\n                if (j != q) a[p][j] /= a[p][q];\n            a[p][q] = 1.0;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "pivot",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13, 14 ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 15, 16, 17, 18 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 77, 78, 79, 80 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 99, 100, 101, 102 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 127 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 19, 20 ]
  }, {
    "id" : 16,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 17,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 25 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "Block",
    "children" : [ 26, 27 ]
  }, {
    "id" : 19,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 21, 22 ]
  }, {
    "id" : 21,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 28, 29 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 42, 43, 44, 45 ]
  }, {
    "id" : 28,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "alpha",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 32, 33 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 34, 35 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 38, 39 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 36, 37 ]
  }, {
    "id" : 35,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 40, 41 ]
  }, {
    "id" : 39,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 46, 47 ]
  }, {
    "id" : 43,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 50, 51 ]
  }, {
    "id" : 44,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 54 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "Block",
    "children" : [ 55 ]
  }, {
    "id" : 46,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 48, 49 ]
  }, {
    "id" : 48,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 52, 53 ]
  }, {
    "id" : 52,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 56, 57 ]
  }, {
    "id" : 56,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 58, 59 ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 64 ]
  }, {
    "id" : 58,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 60, 61 ]
  }, {
    "id" : 59,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 62, 63 ]
  }, {
    "id" : 60,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "-=",
    "type" : "Assignment",
    "children" : [ 65, 66 ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 67, 68 ]
  }, {
    "id" : 66,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 71, 72 ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 69, 70 ]
  }, {
    "id" : 68,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "alpha",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 73, 74 ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 75, 76 ]
  }, {
    "id" : 74,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 81, 82 ]
  }, {
    "id" : 78,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 85, 86 ]
  }, {
    "id" : 79,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 87 ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 88, 89 ]
  }, {
    "id" : 81,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 83, 84 ]
  }, {
    "id" : 83,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 90, 91 ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 92 ]
  }, {
    "id" : 90,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 93, 94 ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 95, 96 ]
  }, {
    "id" : 94,
    "token" : ".",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 97, 98 ]
  }, {
    "id" : 96,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 103, 104 ]
  }, {
    "id" : 100,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 107, 108 ]
  }, {
    "id" : 101,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 111 ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 112, 113 ]
  }, {
    "id" : 103,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 105, 106 ]
  }, {
    "id" : 105,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 109, 110 ]
  }, {
    "id" : 109,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 114, 115 ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 116 ]
  }, {
    "id" : 114,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "/=",
    "type" : "Assignment",
    "children" : [ 117, 118 ]
  }, {
    "id" : 117,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 119, 120 ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 123, 124 ]
  }, {
    "id" : 119,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 121, 122 ]
  }, {
    "id" : 120,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 125, 126 ]
  }, {
    "id" : 124,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 128, 129 ]
  }, {
    "id" : 128,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 130, 131 ]
  }, {
    "id" : 129,
    "token" : ".",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 132, 133 ]
  }, {
    "id" : 131,
    "token" : "q",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 132,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "primal",
  "full_name" : "GaussJordanElimination.LongJavaFileProject.primal",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public double[] primal() {\n            double[] x = new double[n];\n            for (int i = 0; i < n; i++) {\n                if (Math.abs(a[i][i]) > EPSILON)\n                    x[i] = a[i][n+n] / a[i][i];\n                else if (Math.abs(a[i][n+n]) > EPSILON)\n                    return null;\n            }\n            return x;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 5, 6 ]
  }, {
    "id" : 3,
    "token" : "primal",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 7, 8, 9 ]
  }, {
    "id" : 5,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 10, 11 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 20, 21, 22, 23 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 75 ]
  }, {
    "id" : 10,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 12, 13 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 14, 15 ]
  }, {
    "id" : 12,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 24, 25 ]
  }, {
    "id" : 21,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 28, 29 ]
  }, {
    "id" : 22,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 30 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "Block",
    "children" : [ 31 ]
  }, {
    "id" : 24,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 32, 33, 34 ]
  }, {
    "id" : 32,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 35, 36 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 44 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 61, 62 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 37, 38, 39 ]
  }, {
    "id" : 36,
    "token" : "epsilon",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "abs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 45, 46 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 47, 48 ]
  }, {
    "id" : 46,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 49, 50 ]
  }, {
    "id" : 47,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 51, 52 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 57, 58 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 53, 54 ]
  }, {
    "id" : 52,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 55, 56 ]
  }, {
    "id" : 53,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 59, 60 ]
  }, {
    "id" : 58,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 63, 64 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 74 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 65, 66, 67 ]
  }, {
    "id" : 64,
    "token" : "epsilon",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "abs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 68, 69 ]
  }, {
    "id" : 68,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 70, 71 ]
  }, {
    "id" : 69,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 72, 73 ]
  }, {
    "id" : 70,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "dual",
  "full_name" : "GaussJordanElimination.LongJavaFileProject.dual",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public double[] dual() {\n            double[] y = new double[n];\n            for (int i = 0; i < n; i++) {\n                if ((Math.abs(a[i][i]) <= EPSILON) && (Math.abs(a[i][n+n]) > EPSILON)) {\n                    for (int j = 0; j < n; j++)\n                        y[j] = a[i][n+j];\n                    return y;\n                }\n            }\n            return null;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 5, 6 ]
  }, {
    "id" : 3,
    "token" : "dual",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 7, 8, 9 ]
  }, {
    "id" : 5,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 10, 11 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 20, 21, 22, 23 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 83 ]
  }, {
    "id" : 10,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 12, 13 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 14, 15 ]
  }, {
    "id" : 12,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 16, 17 ]
  }, {
    "id" : 16,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 24, 25 ]
  }, {
    "id" : 21,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 28, 29 ]
  }, {
    "id" : 22,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 30 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "Block",
    "children" : [ 31 ]
  }, {
    "id" : 24,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 32, 33 ]
  }, {
    "id" : 32,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 34, 35 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "Block",
    "children" : [ 58, 59 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 36 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 46 ]
  }, {
    "id" : 36,
    "token" : "<=",
    "type" : "InfixExpression",
    "children" : [ 37, 38 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 39, 40, 41 ]
  }, {
    "id" : 38,
    "token" : "epsilon",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "abs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 44, 45 ]
  }, {
    "id" : 43,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 47, 48 ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 49, 50, 51 ]
  }, {
    "id" : 48,
    "token" : "epsilon",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "abs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 52, 53 ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 54, 55 ]
  }, {
    "id" : 53,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 56, 57 ]
  }, {
    "id" : 54,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 60, 61, 62, 63 ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 82 ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 64, 65 ]
  }, {
    "id" : 61,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 68, 69 ]
  }, {
    "id" : 62,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 70 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 71 ]
  }, {
    "id" : 64,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 66, 67 ]
  }, {
    "id" : 66,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 72, 73 ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 74, 75 ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 76, 77 ]
  }, {
    "id" : 74,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 78, 79 ]
  }, {
    "id" : 77,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 80, 81 ]
  }, {
    "id" : 78,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "isFeasible",
  "full_name" : "GaussJordanElimination.LongJavaFileProject.isFeasible",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public boolean isFeasible() {\n            return primal() != null;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "is|feasible",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "primal",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "show",
  "full_name" : "GaussJordanElimination.LongJavaFileProject.show",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void show() {\n            for (int i = 0; i < n; i++) {\n                for (int j = 0; j < n; j++) {\n                }\n                for (int j = n; j < n+n; j++) {\n                }\n            }\n\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "show",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 6, 7, 8, 9 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 10, 11 ]
  }, {
    "id" : 7,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 14, 15 ]
  }, {
    "id" : 8,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 16 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Block",
    "children" : [ 17, 18 ]
  }, {
    "id" : 10,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 12, 13 ]
  }, {
    "id" : 12,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 19, 20, 21, 22 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 30, 31, 32, 33 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 20,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 27, 28 ]
  }, {
    "id" : 21,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 29 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 25, 26 ]
  }, {
    "id" : 25,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 34, 35 ]
  }, {
    "id" : 31,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 38, 39 ]
  }, {
    "id" : 32,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 42 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "certifySolution",
  "full_name" : "GaussJordanElimination.LongJavaFileProject.certifySolution",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private boolean certifySolution(double[][] A, double[] b) {\n\n            // check that Ax = b\n            if (isFeasible()) {\n                double[] x = primal();\n                for (int i = 0; i < n; i++) {\n                    double sum = 0.0;\n                    for (int j = 0; j < n; j++) {\n                        sum += A[i][j] * x[j];\n                    }\n                    if (Math.abs(sum - b[i]) > EPSILON) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n\n            // or that yA = 0, yb != 0\n            else {\n                double[] y = dual();\n                for (int j = 0; j < n; j++) {\n                    double sum = 0.0;\n                    for (int i = 0; i < n; i++) {\n                        sum += A[i][j] * y[i];\n                    }\n                    if (Math.abs(sum) > EPSILON) {\n                        return false;\n                    }\n                }\n                double sum = 0.0;\n                for (int i = 0; i < n; i++) {\n                    sum += y[i] * b[i];\n                }\n                if (Math.abs(sum) < EPSILON) {\n\n                    return false;\n                }\n                return true;\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "certify|solution",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 12, 13 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 16 ]
  }, {
    "id" : 7,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 9, 10, 11 ]
  }, {
    "id" : 8,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 14, 15 ]
  }, {
    "id" : 13,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 17, 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 20 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "Block",
    "children" : [ 21, 22, 23 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Block",
    "children" : [ 86, 87, 88, 89, 90, 91 ]
  }, {
    "id" : 20,
    "token" : "is|feasible",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 31, 32, 33, 34 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 85 ]
  }, {
    "id" : 24,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 26, 27 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 28, 29 ]
  }, {
    "id" : 26,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 30 ]
  }, {
    "id" : 30,
    "token" : "primal",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 35, 36 ]
  }, {
    "id" : 32,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 39, 40 ]
  }, {
    "id" : 33,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 41 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "Block",
    "children" : [ 42, 43, 44 ]
  }, {
    "id" : 35,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 37, 38 ]
  }, {
    "id" : 37,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 45, 46 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 49, 50, 51, 52 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 72, 73 ]
  }, {
    "id" : 45,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 47, 48 ]
  }, {
    "id" : 47,
    "token" : "sum",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : ".",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 53, 54 ]
  }, {
    "id" : 50,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 57, 58 ]
  }, {
    "id" : 51,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 59 ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "Block",
    "children" : [ 60 ]
  }, {
    "id" : 53,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 55, 56 ]
  }, {
    "id" : 55,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 61 ]
  }, {
    "id" : 61,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 62, 63 ]
  }, {
    "id" : 62,
    "token" : "sum",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 64, 65 ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 66, 67 ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 70, 71 ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 68, 69 ]
  }, {
    "id" : 67,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 74, 75 ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "Block",
    "children" : [ 83 ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 76, 77, 78 ]
  }, {
    "id" : 75,
    "token" : "epsilon",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "abs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 79, 80 ]
  }, {
    "id" : 79,
    "token" : "sum",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 81, 82 ]
  }, {
    "id" : 81,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 84 ]
  }, {
    "id" : 84,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 85,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 92, 93 ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 99, 100, 101, 102 ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 149, 150 ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 153, 154, 155, 156 ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 174, 175 ]
  }, {
    "id" : 91,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 183 ]
  }, {
    "id" : 92,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 94, 95 ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 96, 97 ]
  }, {
    "id" : 94,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 98 ]
  }, {
    "id" : 98,
    "token" : "dual",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 103, 104 ]
  }, {
    "id" : 100,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 107, 108 ]
  }, {
    "id" : 101,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 109 ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "Block",
    "children" : [ 110, 111, 112 ]
  }, {
    "id" : 103,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 105, 106 ]
  }, {
    "id" : 105,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 113, 114 ]
  }, {
    "id" : 111,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 117, 118, 119, 120 ]
  }, {
    "id" : 112,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 140, 141 ]
  }, {
    "id" : 113,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 115, 116 ]
  }, {
    "id" : 115,
    "token" : "sum",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : ".",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 121, 122 ]
  }, {
    "id" : 118,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 125, 126 ]
  }, {
    "id" : 119,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 127 ]
  }, {
    "id" : 120,
    "token" : "",
    "type" : "Block",
    "children" : [ 128 ]
  }, {
    "id" : 121,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 123, 124 ]
  }, {
    "id" : 123,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 129 ]
  }, {
    "id" : 129,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 130, 131 ]
  }, {
    "id" : 130,
    "token" : "sum",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 132, 133 ]
  }, {
    "id" : 132,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 134, 135 ]
  }, {
    "id" : 133,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 138, 139 ]
  }, {
    "id" : 134,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 136, 137 ]
  }, {
    "id" : 135,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 137,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 138,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 139,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 140,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 142, 143 ]
  }, {
    "id" : 141,
    "token" : "",
    "type" : "Block",
    "children" : [ 147 ]
  }, {
    "id" : 142,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 144, 145, 146 ]
  }, {
    "id" : 143,
    "token" : "epsilon",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 144,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "abs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 146,
    "token" : "sum",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 148 ]
  }, {
    "id" : 148,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 150,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 151, 152 ]
  }, {
    "id" : 151,
    "token" : "sum",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 152,
    "token" : ".",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 153,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 157, 158 ]
  }, {
    "id" : 154,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 161, 162 ]
  }, {
    "id" : 155,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 163 ]
  }, {
    "id" : 156,
    "token" : "",
    "type" : "Block",
    "children" : [ 164 ]
  }, {
    "id" : 157,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 158,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 159, 160 ]
  }, {
    "id" : 159,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 160,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 162,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 163,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 164,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 165 ]
  }, {
    "id" : 165,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 166, 167 ]
  }, {
    "id" : 166,
    "token" : "sum",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 167,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 168, 169 ]
  }, {
    "id" : 168,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 170, 171 ]
  }, {
    "id" : 169,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 172, 173 ]
  }, {
    "id" : 170,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 171,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 172,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 173,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 174,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 176, 177 ]
  }, {
    "id" : 175,
    "token" : "",
    "type" : "Block",
    "children" : [ 181 ]
  }, {
    "id" : 176,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 178, 179, 180 ]
  }, {
    "id" : 177,
    "token" : "epsilon",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 178,
    "token" : "math",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 179,
    "token" : "abs",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 180,
    "token" : "sum",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 181,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 182 ]
  }, {
    "id" : 182,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 183,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "test",
  "full_name" : "GaussJordanElimination.LongJavaFileProject.test",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void test(String name, double[][] A, double[] b) {\n\n            GaussJordanElimination gaussian = new GaussJordanElimination(A, b);\n            if (gaussian.isFeasible()) {\n                double[] x = gaussian.primal();\n                for (int i = 0; i < x.length; i++) {\n                }\n            }\n            else {\n                double[] y = gaussian.dual();\n                for (int j = 0; j < y.length; j++) {\n\n                }\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6, 7 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 16, 17 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "Block",
    "children" : [ 20, 21 ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "name",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 13, 14, 15 ]
  }, {
    "id" : 12,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 31, 32, 33 ]
  }, {
    "id" : 22,
    "token" : "gauss|jordan|elimination",
    "type" : "SimpleType",
    "children" : [ 24 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 25, 26 ]
  }, {
    "id" : 24,
    "token" : "gauss|jordan|elimination",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "gaussian",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 27, 28, 29 ]
  }, {
    "id" : 27,
    "token" : "gauss|jordan|elimination",
    "type" : "SimpleType",
    "children" : [ 30 ]
  }, {
    "id" : 28,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "gauss|jordan|elimination",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 34, 35 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "Block",
    "children" : [ 36, 37 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "Block",
    "children" : [ 57, 58 ]
  }, {
    "id" : 34,
    "token" : "gaussian",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "is|feasible",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 38, 39 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 46, 47, 48, 49 ]
  }, {
    "id" : 38,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 40, 41 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 42, 43 ]
  }, {
    "id" : 40,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 44, 45 ]
  }, {
    "id" : 44,
    "token" : "gaussian",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "primal",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 50, 51 ]
  }, {
    "id" : 47,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 54, 55 ]
  }, {
    "id" : 48,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 56 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 52, 53 ]
  }, {
    "id" : 52,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "xlength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 59, 60 ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 67, 68, 69, 70 ]
  }, {
    "id" : 59,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 61, 62 ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 63, 64 ]
  }, {
    "id" : 61,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 65, 66 ]
  }, {
    "id" : 65,
    "token" : "gaussian",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "dual",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 71, 72 ]
  }, {
    "id" : 68,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 75, 76 ]
  }, {
    "id" : 69,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 77 ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 73, 74 ]
  }, {
    "id" : 73,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "ylength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "test1",
  "full_name" : "GaussJordanElimination.LongJavaFileProject.test1",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void test1() {\n            double[][] A = {\n                    { 0, 1,  1 },\n                    { 2, 4, -2 },\n                    { 0, 3, 15 }\n            };\n            double[] b = { 4, 2, 36 };\n            test(\"test 1\", A, b);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5, 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 8, 9 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 28, 29 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 37 ]
  }, {
    "id" : 8,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 10, 11, 12 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 13, 14 ]
  }, {
    "id" : 10,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 18, 19, 20 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 21, 22, 23 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 25, 26, 27 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 24 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 30, 31 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 32, 33 ]
  }, {
    "id" : 30,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 34, 35, 36 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39, 40, 41 ]
  }, {
    "id" : 38,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "test",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "test2",
  "full_name" : "GaussJordanElimination.LongJavaFileProject.test2",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void test2() {\n            double[][] A = {\n                    {  1, -3,   1 },\n                    {  2, -8,   8 },\n                    { -6,  3, -15 }\n            };\n            double[] b = { 4, -2, 9 };\n            test(\"test 2\", A, b);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5, 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 8, 9 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 31, 32 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 41 ]
  }, {
    "id" : 8,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 10, 11, 12 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 13, 14 ]
  }, {
    "id" : 10,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 18, 19, 20 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 22, 23, 24 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 26, 27, 28 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 21 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 25 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 29 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 30 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 33, 34 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 35, 36 ]
  }, {
    "id" : 33,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 37, 38, 39 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 40 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 42, 43, 44, 45 ]
  }, {
    "id" : 42,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "test",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "test3",
  "full_name" : "GaussJordanElimination.LongJavaFileProject.test3",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void test3() {\n            double[][] A = {\n                    {  2, -3, -1,  2,  3 },\n                    {  4, -4, -1,  4, 11 },\n                    {  2, -5, -2,  2, -1 },\n                    {  0,  2,  1,  0,  4 },\n                    { -4,  6,  0,  0,  7 },\n            };\n            double[] b = { 4, 4, 9, -6, 5 };\n            test(\"test 3\", A, b);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5, 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 8, 9 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 53, 54 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 65 ]
  }, {
    "id" : 8,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 10, 11, 12 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 13, 14 ]
  }, {
    "id" : 10,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 15, 16, 17, 18, 19 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 20, 21, 22, 23, 24 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 27, 28, 29, 30, 31 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 34, 35, 36, 37, 38 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 42, 43, 44, 45, 46 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 47, 48, 49, 50, 51 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 25 ]
  }, {
    "id" : 22,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 26 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 32 ]
  }, {
    "id" : 29,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 33 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 39 ]
  }, {
    "id" : 36,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 40 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 41 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 52 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 55, 56 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 57, 58 ]
  }, {
    "id" : 55,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 59, 60, 61, 62, 63 ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 64 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 66, 67, 68, 69 ]
  }, {
    "id" : 66,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "test",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "test4",
  "full_name" : "GaussJordanElimination.LongJavaFileProject.test4",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void test4() {\n            double[][] A = {\n                    {  2, -3, -1,  2,  3 },\n                    {  4, -4, -1,  4, 11 },\n                    {  2, -5, -2,  2, -1 },\n                    {  0,  2,  1,  0,  4 },\n                    { -4,  6,  0,  0,  7 },\n            };\n            double[] b = { 4, 4, 9, -5, 5 };\n            test(\"test 4\", A, b);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5, 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 8, 9 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 53, 54 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 65 ]
  }, {
    "id" : 8,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 10, 11, 12 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 13, 14 ]
  }, {
    "id" : 10,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 15, 16, 17, 18, 19 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 20, 21, 22, 23, 24 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 27, 28, 29, 30, 31 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 34, 35, 36, 37, 38 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 42, 43, 44, 45, 46 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 47, 48, 49, 50, 51 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 25 ]
  }, {
    "id" : 22,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 26 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 32 ]
  }, {
    "id" : 29,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 33 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 39 ]
  }, {
    "id" : 36,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 40 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 41 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 52 ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 55, 56 ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 57, 58 ]
  }, {
    "id" : 55,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 59, 60, 61, 62, 63 ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 64 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 66, 67, 68, 69 ]
  }, {
    "id" : 66,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "test",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "test5",
  "full_name" : "GaussJordanElimination.LongJavaFileProject.test5",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void test5() {\n            double[][] A = {\n                    {  2, -1,  1 },\n                    {  3,  2, -4 },\n                    { -6,  3, -3 },\n            };\n            double[] b = { 1, 4, 2 };\n            test(\"test 5\", A, b);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5, 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 8, 9 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 31, 32 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 40 ]
  }, {
    "id" : 8,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 10, 11, 12 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 13, 14 ]
  }, {
    "id" : 10,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 18, 19, 20 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 22, 23, 24 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 26, 27, 28 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 21 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 25 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 29 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 30 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 33, 34 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 35, 36 ]
  }, {
    "id" : 33,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 37, 38, 39 ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 41, 42, 43, 44 ]
  }, {
    "id" : 41,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "test",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "test6",
  "full_name" : "GaussJordanElimination.LongJavaFileProject.test6",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void test6() {\n            double[][] A = {\n                    {  1, -1,  2 },\n                    {  4,  4, -2 },\n                    { -2,  2, -4 },\n            };\n            double[] b = { -3, 1, 6 };\n            test(\"test 6 (infinitely many solutions)\", A, b);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5, 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 8, 9 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 31, 32 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 41 ]
  }, {
    "id" : 8,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 10, 11, 12 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 13, 14 ]
  }, {
    "id" : 10,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 18, 19, 20 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 22, 23, 24 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 26, 27, 28 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 21 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 25 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 29 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 30 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 33, 34 ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 35, 36 ]
  }, {
    "id" : 33,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "ArrayInitializer",
    "children" : [ 37, 38, 39 ]
  }, {
    "id" : 37,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 40 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 42, 43, 44, 45 ]
  }, {
    "id" : 42,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "test|infinitely|many|solutions",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "GaussJordanElimination.LongJavaFileProject.main",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void main(String[] args) {\n\n            test1();\n            test2();\n            test3();\n            test4();\n            test5();\n            test6();\n\n            // n-by-n random system (likely full rank)\n            int n = Integer.parseInt(args[0]);\n            double[][] A = new double[n][n];\n            for (int i = 0; i < n; i++)\n                for (int j = 0; j < n; j++){}\n\n            double[] b = new double[n];\n            for (int i = 0; i < n; i++){}\n\n            test(\"random \" + n + \"-by-\" + n + \" (likely full rank)\", A, b);\n\n            A = new double[n][n];\n            for (int i = 0; i < n-1; i++)\n                for (int j = 0; j < n; j++){}\n\n            for (int i = 0; i < n-1; i++) {\n                double alpha = - 5.0;\n                for (int j = 0; j < n; j++) {\n                    A[n-1][j] += alpha * A[i][j];\n                }\n            }\n            b = new double[n];\n            for (int i = 0; i < n; i++)\n\n            test(\"random \" + n + \"-by-\" + n + \" (likely infeasible)\", A, b);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 28 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 30 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 32 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 34 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 36 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 38 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 40, 41 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 49, 50 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 62, 63, 64, 65 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 84, 85 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 94, 95, 96, 97 ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 105 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 115 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 124, 125, 126, 127 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 148, 149, 150, 151 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 195 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 202, 203, 204, 205 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 29 ]
  }, {
    "id" : 29,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 31 ]
  }, {
    "id" : 31,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 33 ]
  }, {
    "id" : 33,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 35 ]
  }, {
    "id" : 35,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 37 ]
  }, {
    "id" : 37,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 39 ]
  }, {
    "id" : 39,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 44, 45, 46 ]
  }, {
    "id" : 44,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "parse|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 47, 48 ]
  }, {
    "id" : 47,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 51, 52, 53 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 54, 55 ]
  }, {
    "id" : 51,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 56, 57, 58 ]
  }, {
    "id" : 56,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 59, 60, 61 ]
  }, {
    "id" : 57,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 66, 67 ]
  }, {
    "id" : 63,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 70, 71 ]
  }, {
    "id" : 64,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 72 ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 73, 74, 75, 76 ]
  }, {
    "id" : 66,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 68, 69 ]
  }, {
    "id" : 68,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 77, 78 ]
  }, {
    "id" : 74,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 81, 82 ]
  }, {
    "id" : 75,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 83 ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 79, 80 ]
  }, {
    "id" : 79,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 86, 87 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 88, 89 ]
  }, {
    "id" : 86,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 90, 91 ]
  }, {
    "id" : 90,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 92, 93 ]
  }, {
    "id" : 91,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 98, 99 ]
  }, {
    "id" : 95,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 102, 103 ]
  }, {
    "id" : 96,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 104 ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 100, 101 ]
  }, {
    "id" : 100,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 106, 107, 108, 109 ]
  }, {
    "id" : 106,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 110, 111, 112, 113, 114 ]
  }, {
    "id" : 108,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "random",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "by",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "likely|full|rank",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 116, 117 ]
  }, {
    "id" : 116,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 118, 119, 120 ]
  }, {
    "id" : 118,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 121, 122, 123 ]
  }, {
    "id" : 119,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 128, 129 ]
  }, {
    "id" : 125,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 132, 133 ]
  }, {
    "id" : 126,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 136 ]
  }, {
    "id" : 127,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 137, 138, 139, 140 ]
  }, {
    "id" : 128,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 130, 131 ]
  }, {
    "id" : 130,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 132,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 134, 135 ]
  }, {
    "id" : 134,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 135,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 137,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 141, 142 ]
  }, {
    "id" : 138,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 145, 146 ]
  }, {
    "id" : 139,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 147 ]
  }, {
    "id" : 140,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 141,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 143, 144 ]
  }, {
    "id" : 143,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 144,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 146,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 152, 153 ]
  }, {
    "id" : 149,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 156, 157 ]
  }, {
    "id" : 150,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 160 ]
  }, {
    "id" : 151,
    "token" : "",
    "type" : "Block",
    "children" : [ 161, 162 ]
  }, {
    "id" : 152,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 153,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 154, 155 ]
  }, {
    "id" : 154,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 155,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 157,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 158, 159 ]
  }, {
    "id" : 158,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 159,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 160,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 163, 164 ]
  }, {
    "id" : 162,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 168, 169, 170, 171 ]
  }, {
    "id" : 163,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 164,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 165, 166 ]
  }, {
    "id" : 165,
    "token" : "alpha",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 166,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 167 ]
  }, {
    "id" : 167,
    "token" : ".",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 168,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 172, 173 ]
  }, {
    "id" : 169,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 176, 177 ]
  }, {
    "id" : 170,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 178 ]
  }, {
    "id" : 171,
    "token" : "",
    "type" : "Block",
    "children" : [ 179 ]
  }, {
    "id" : 172,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 173,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 174, 175 ]
  }, {
    "id" : 174,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 175,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 176,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 177,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 178,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 179,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 180 ]
  }, {
    "id" : 180,
    "token" : "+=",
    "type" : "Assignment",
    "children" : [ 181, 182 ]
  }, {
    "id" : 181,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 183, 184 ]
  }, {
    "id" : 182,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 189, 190 ]
  }, {
    "id" : 183,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 185, 186 ]
  }, {
    "id" : 184,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 185,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 186,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 187, 188 ]
  }, {
    "id" : 187,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 188,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 189,
    "token" : "alpha",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 190,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 191, 192 ]
  }, {
    "id" : 191,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 193, 194 ]
  }, {
    "id" : 192,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 193,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 194,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 195,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 196, 197 ]
  }, {
    "id" : 196,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 197,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 198, 199 ]
  }, {
    "id" : 198,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 200, 201 ]
  }, {
    "id" : 199,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 200,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 201,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 202,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 206, 207 ]
  }, {
    "id" : 203,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 210, 211 ]
  }, {
    "id" : 204,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 212 ]
  }, {
    "id" : 205,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 213 ]
  }, {
    "id" : 206,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 207,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 208, 209 ]
  }, {
    "id" : 208,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 209,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 210,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 211,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 212,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 213,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 214, 215, 216, 217 ]
  }, {
    "id" : 214,
    "token" : "test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 215,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 218, 219, 220, 221, 222 ]
  }, {
    "id" : 216,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 217,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 218,
    "token" : "random",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 219,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 220,
    "token" : "by",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 221,
    "token" : "n",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 222,
    "token" : "likely|infeasible",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "Node",
  "full_name" : "Node.PatriciaST.LongJavaFileProject.Node",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Node(String key, Value val, int b) {\n                this.key = key;\n                this.val = val;\n                this.b = b;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 13, 14 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "value",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "val",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 18 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 23 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 28 ]
  }, {
    "id" : 18,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 26, 27 ]
  }, {
    "id" : 25,
    "token" : "val",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "val",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 29, 30 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 31, 32 ]
  }, {
    "id" : 30,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "PatriciaST",
  "full_name" : "PatriciaST.LongJavaFileProject.PatriciaST",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public PatriciaST() {\n            head = new Node(\"\", null, 0);\n            head.left = head;\n            head.right = head;\n            count = 0;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "patricia|st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4, 5, 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 16 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 19 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 22 ]
  }, {
    "id" : 8,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 9, 10 ]
  }, {
    "id" : 9,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 11, 12, 13, 14 ]
  }, {
    "id" : 11,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 17, 18 ]
  }, {
    "id" : 17,
    "token" : "headleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "headright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 23, 24 ]
  }, {
    "id" : 23,
    "token" : "count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "put",
  "full_name" : "PatriciaST.LongJavaFileProject.put",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void put(String key, Value val) {\n            if (key == null) throw new IllegalArgumentException(\"called put(null)\");\n            if (key.length() == 0) throw new IllegalArgumentException(\"invalid key\");\n            if (val == null) delete(key);\n            Node p;\n            Node x = head;\n            do {\n                p = x;\n                if (safeBitTest(key, x.b)) x = x.right;\n                else                       x = x.left;\n            } while (p.b < x.b);\n            if (!x.key.equals(key)) {\n                int b = firstDifferingBit(x.key, key);\n                x = head;\n                do {\n                    p = x;\n                    if (safeBitTest(key, x.b)) x = x.right;\n                    else                       x = x.left;\n                } while (p.b < x.b && x.b < b);\n                Node t = new Node(key, val, b);\n                if (safeBitTest(key, b)) {\n                    t.left  = x;\n                    t.right = t;\n                }\n                else {\n                    t.left  = t;\n                    t.right = x;\n                }\n                if (safeBitTest(key, p.b)) p.right = t;\n                else                       p.left  = t;\n                count++;\n            }\n            else x.val = val;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "put",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 13, 14, 15, 16, 17, 18, 19 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "value",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "val",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 28, 29 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 38, 39 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 45, 46 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 49, 50 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "DoStatement",
    "children" : [ 54, 55 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 75, 76, 77 ]
  }, {
    "id" : 20,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 22, 23 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 24 ]
  }, {
    "id" : 22,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 25, 26 ]
  }, {
    "id" : 25,
    "token" : "illegal|argument|exception",
    "type" : "SimpleType",
    "children" : [ 27 ]
  }, {
    "id" : 26,
    "token" : "called|putnull",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 30, 31 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 34 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 32, 33 ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "illegal|argument|exception",
    "type" : "SimpleType",
    "children" : [ 37 ]
  }, {
    "id" : 36,
    "token" : "invalid|key",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 40, 41 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 42 ]
  }, {
    "id" : 40,
    "token" : "val",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "delete",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 47 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 48 ]
  }, {
    "id" : 47,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 51 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 52, 53 ]
  }, {
    "id" : 51,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "Block",
    "children" : [ 56, 57 ]
  }, {
    "id" : 55,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 73, 74 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 58 ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 61, 62, 63 ]
  }, {
    "id" : 58,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 59, 60 ]
  }, {
    "id" : 59,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 64, 65, 66 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 67 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 70 ]
  }, {
    "id" : 64,
    "token" : "safe|bit|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "xb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 68, 69 ]
  }, {
    "id" : 68,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "xright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 71, 72 ]
  }, {
    "id" : 71,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "xleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "pb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "xb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 78 ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "Block",
    "children" : [ 82, 83, 84, 85, 86, 87, 88 ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 170 ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 79, 80, 81 ]
  }, {
    "id" : 79,
    "token" : "xkey",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 89, 90 ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 96 ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "DoStatement",
    "children" : [ 99, 100 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 124, 125 ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 134, 135, 136 ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 156, 157, 158 ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 168 ]
  }, {
    "id" : 89,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 91, 92 ]
  }, {
    "id" : 91,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 93, 94, 95 ]
  }, {
    "id" : 93,
    "token" : "first|differing|bit",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 94,
    "token" : "xkey",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 97, 98 ]
  }, {
    "id" : 97,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "Block",
    "children" : [ 101, 102 ]
  }, {
    "id" : 100,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 118, 119 ]
  }, {
    "id" : 101,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 103 ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 106, 107, 108 ]
  }, {
    "id" : 103,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 104, 105 ]
  }, {
    "id" : 104,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 109, 110, 111 ]
  }, {
    "id" : 107,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 112 ]
  }, {
    "id" : 108,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 115 ]
  }, {
    "id" : 109,
    "token" : "safe|bit|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "xb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 113, 114 ]
  }, {
    "id" : 113,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "xright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 116, 117 ]
  }, {
    "id" : 116,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "xleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 120, 121 ]
  }, {
    "id" : 119,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 122, 123 ]
  }, {
    "id" : 120,
    "token" : "pb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "xb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "xb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 126 ]
  }, {
    "id" : 125,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 127, 128 ]
  }, {
    "id" : 126,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 127,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 129, 130, 131, 132 ]
  }, {
    "id" : 129,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 133 ]
  }, {
    "id" : 130,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "val",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 132,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 134,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 137, 138, 139 ]
  }, {
    "id" : 135,
    "token" : "",
    "type" : "Block",
    "children" : [ 140, 141 ]
  }, {
    "id" : 136,
    "token" : "",
    "type" : "Block",
    "children" : [ 148, 149 ]
  }, {
    "id" : 137,
    "token" : "safe|bit|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 138,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 139,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 140,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 142 ]
  }, {
    "id" : 141,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 145 ]
  }, {
    "id" : 142,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 143, 144 ]
  }, {
    "id" : 143,
    "token" : "tleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 144,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 146, 147 ]
  }, {
    "id" : 146,
    "token" : "tright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 150 ]
  }, {
    "id" : 149,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 153 ]
  }, {
    "id" : 150,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 151, 152 ]
  }, {
    "id" : 151,
    "token" : "tleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 152,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 153,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 154, 155 ]
  }, {
    "id" : 154,
    "token" : "tright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 155,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 159, 160, 161 ]
  }, {
    "id" : 157,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 162 ]
  }, {
    "id" : 158,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 165 ]
  }, {
    "id" : 159,
    "token" : "safe|bit|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 160,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "pb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 162,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 163, 164 ]
  }, {
    "id" : 163,
    "token" : "pright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 164,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 165,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 166, 167 ]
  }, {
    "id" : 166,
    "token" : "pleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 167,
    "token" : "t",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 168,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 169 ]
  }, {
    "id" : 169,
    "token" : "count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 170,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 171, 172 ]
  }, {
    "id" : 171,
    "token" : "xval",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 172,
    "token" : "val",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "get",
  "full_name" : "PatriciaST.LongJavaFileProject.get",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Value get(String key) {\n            if (key == null) throw new IllegalArgumentException(\"called get(null)\");\n            if (key.length() == 0) throw new IllegalArgumentException(\"invalid key\");\n            Node p;\n            Node x = head;\n            do {\n                p = x;\n                if (safeBitTest(key, x.b)) x = x.right;\n                else                       x = x.left;\n            } while (p.b < x.b);\n            if (x.key.equals(key)) return x.val;\n            else                   return null;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "value",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 3,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10, 11, 12, 13, 14, 15 ]
  }, {
    "id" : 6,
    "token" : "value",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 34, 35 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 38, 39 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "DoStatement",
    "children" : [ 43, 44 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 64, 65, 66 ]
  }, {
    "id" : 16,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 20 ]
  }, {
    "id" : 18,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 21, 22 ]
  }, {
    "id" : 21,
    "token" : "illegal|argument|exception",
    "type" : "SimpleType",
    "children" : [ 23 ]
  }, {
    "id" : 22,
    "token" : "called|getnull",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 26, 27 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 30 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28, 29 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "illegal|argument|exception",
    "type" : "SimpleType",
    "children" : [ 33 ]
  }, {
    "id" : 32,
    "token" : "invalid|key",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 36 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 37 ]
  }, {
    "id" : 36,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 40 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 41, 42 ]
  }, {
    "id" : 40,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "Block",
    "children" : [ 45, 46 ]
  }, {
    "id" : 44,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 62, 63 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 47 ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 50, 51, 52 ]
  }, {
    "id" : 47,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 48, 49 ]
  }, {
    "id" : 48,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 53, 54, 55 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 56 ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 59 ]
  }, {
    "id" : 53,
    "token" : "safe|bit|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "xb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 57, 58 ]
  }, {
    "id" : 57,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "xright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 60, 61 ]
  }, {
    "id" : 60,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "xleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "pb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "xb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 67, 68, 69 ]
  }, {
    "id" : 65,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 70 ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 71 ]
  }, {
    "id" : 67,
    "token" : "xkey",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "xval",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "delete",
  "full_name" : "PatriciaST.LongJavaFileProject.delete",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void delete(String key) {\n            if (key == null) throw new IllegalArgumentException(\"called delete(null)\");\n            if (key.length() == 0) throw new IllegalArgumentException(\"invalid key\");\n            Node g;             // previous previous (grandparent)\n            Node p = head;      // previous (parent)\n            Node x = head;      // node to delete\n            do {\n                g = p;\n                p = x;\n                if (safeBitTest(key, x.b)) x = x.right;\n                else                       x = x.left;\n            } while (p.b < x.b);\n            if (x.key.equals(key)) {\n                Node z;\n                Node y = head;\n                do {            // find the true parent (z) of x\n                    z = y;\n                    if (safeBitTest(key, y.b)) y = y.right;\n                    else                       y = y.left;\n                } while (y != x);\n                if (x == p) {   // case 1: remove (leaf node) x\n                    Node c;     // child of x\n                    if (safeBitTest(key, x.b)) c = x.left;\n                    else                       c = x.right;\n                    if (safeBitTest(key, z.b)) z.right = c;\n                    else                       z.left  = c;\n                }\n                else {          // case 2: p replaces (internal node) x\n                    Node c;     // child of p\n                    if (safeBitTest(key, p.b)) c = p.left;\n                    else                       c = p.right;\n                    if (safeBitTest(key, g.b)) g.right = c;\n                    else                       g.left  = c;\n                    if (safeBitTest(key, z.b)) z.right = p;\n                    else                       z.left  = p;\n                    p.left = x.left;\n                    p.right = x.right;\n                    p.b = x.b;\n                }\n                count--;\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "delete",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10, 11, 12, 13, 14, 15 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 34, 35 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 38, 39 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 43, 44 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "DoStatement",
    "children" : [ 48, 49 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 73, 74 ]
  }, {
    "id" : 16,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 20 ]
  }, {
    "id" : 18,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 21, 22 ]
  }, {
    "id" : 21,
    "token" : "illegal|argument|exception",
    "type" : "SimpleType",
    "children" : [ 23 ]
  }, {
    "id" : 22,
    "token" : "called|deletenull",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 26, 27 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 30 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28, 29 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 31, 32 ]
  }, {
    "id" : 31,
    "token" : "illegal|argument|exception",
    "type" : "SimpleType",
    "children" : [ 33 ]
  }, {
    "id" : 32,
    "token" : "invalid|key",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 36 ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 37 ]
  }, {
    "id" : 36,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "g",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 40 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 41, 42 ]
  }, {
    "id" : 40,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 45 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 46, 47 ]
  }, {
    "id" : 45,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "Block",
    "children" : [ 50, 51, 52 ]
  }, {
    "id" : 49,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 71, 72 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 53 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 56 ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 59, 60, 61 ]
  }, {
    "id" : 53,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 54, 55 ]
  }, {
    "id" : 54,
    "token" : "g",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 56,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 57, 58 ]
  }, {
    "id" : 57,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 62, 63, 64 ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 65 ]
  }, {
    "id" : 61,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 68 ]
  }, {
    "id" : 62,
    "token" : "safe|bit|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "xb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 66, 67 ]
  }, {
    "id" : 66,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "xright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 68,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 69, 70 ]
  }, {
    "id" : 69,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "xleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "pb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "xb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 75, 76, 77 ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "Block",
    "children" : [ 78, 79, 80, 81, 82 ]
  }, {
    "id" : 75,
    "token" : "xkey",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "equals",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 83, 84 ]
  }, {
    "id" : 79,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 87, 88 ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "DoStatement",
    "children" : [ 92, 93 ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 113, 114, 115 ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 205 ]
  }, {
    "id" : 83,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 85 ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 86 ]
  }, {
    "id" : 85,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 86,
    "token" : "z",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 87,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 89 ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 90, 91 ]
  }, {
    "id" : 89,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 91,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "Block",
    "children" : [ 94, 95 ]
  }, {
    "id" : 93,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 111, 112 ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 96 ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 99, 100, 101 ]
  }, {
    "id" : 96,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 97, 98 ]
  }, {
    "id" : 97,
    "token" : "z",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 102, 103, 104 ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 105 ]
  }, {
    "id" : 101,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 108 ]
  }, {
    "id" : 102,
    "token" : "safe|bit|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "yb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 106, 107 ]
  }, {
    "id" : 106,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "yright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 109, 110 ]
  }, {
    "id" : 109,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "yleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "y",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 116, 117 ]
  }, {
    "id" : 114,
    "token" : "",
    "type" : "Block",
    "children" : [ 118, 119, 120 ]
  }, {
    "id" : 115,
    "token" : "",
    "type" : "Block",
    "children" : [ 149, 150, 151, 152, 153, 154, 155 ]
  }, {
    "id" : 116,
    "token" : "x",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 121, 122 ]
  }, {
    "id" : 119,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 125, 126, 127 ]
  }, {
    "id" : 120,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 137, 138, 139 ]
  }, {
    "id" : 121,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 123 ]
  }, {
    "id" : 122,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 124 ]
  }, {
    "id" : 123,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 124,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 125,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 128, 129, 130 ]
  }, {
    "id" : 126,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 131 ]
  }, {
    "id" : 127,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 134 ]
  }, {
    "id" : 128,
    "token" : "safe|bit|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "xb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 132, 133 ]
  }, {
    "id" : 132,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 133,
    "token" : "xleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 134,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 135, 136 ]
  }, {
    "id" : 135,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "xright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 137,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 140, 141, 142 ]
  }, {
    "id" : 138,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 143 ]
  }, {
    "id" : 139,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 146 ]
  }, {
    "id" : 140,
    "token" : "safe|bit|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 141,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "zb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 143,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 144, 145 ]
  }, {
    "id" : 144,
    "token" : "zright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 145,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 146,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 147, 148 ]
  }, {
    "id" : 147,
    "token" : "zleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 149,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 156, 157 ]
  }, {
    "id" : 150,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 160, 161, 162 ]
  }, {
    "id" : 151,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 172, 173, 174 ]
  }, {
    "id" : 152,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 184, 185, 186 ]
  }, {
    "id" : 153,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 196 ]
  }, {
    "id" : 154,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 199 ]
  }, {
    "id" : 155,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 202 ]
  }, {
    "id" : 156,
    "token" : "node",
    "type" : "SimpleType",
    "children" : [ 158 ]
  }, {
    "id" : 157,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 159 ]
  }, {
    "id" : 158,
    "token" : "node",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 159,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 160,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 163, 164, 165 ]
  }, {
    "id" : 161,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 166 ]
  }, {
    "id" : 162,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 169 ]
  }, {
    "id" : 163,
    "token" : "safe|bit|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 164,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 165,
    "token" : "pb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 166,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 167, 168 ]
  }, {
    "id" : 167,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 168,
    "token" : "pleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 169,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 170, 171 ]
  }, {
    "id" : 170,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 171,
    "token" : "pright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 172,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 175, 176, 177 ]
  }, {
    "id" : 173,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 178 ]
  }, {
    "id" : 174,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 181 ]
  }, {
    "id" : 175,
    "token" : "safe|bit|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 176,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 177,
    "token" : "gb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 178,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 179, 180 ]
  }, {
    "id" : 179,
    "token" : "gright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 180,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 181,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 182, 183 ]
  }, {
    "id" : 182,
    "token" : "gleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 183,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 184,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 187, 188, 189 ]
  }, {
    "id" : 185,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 190 ]
  }, {
    "id" : 186,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 193 ]
  }, {
    "id" : 187,
    "token" : "safe|bit|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 188,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 189,
    "token" : "zb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 190,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 191, 192 ]
  }, {
    "id" : 191,
    "token" : "zright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 192,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 193,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 194, 195 ]
  }, {
    "id" : 194,
    "token" : "zleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 195,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 196,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 197, 198 ]
  }, {
    "id" : 197,
    "token" : "pleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 198,
    "token" : "xleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 199,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 200, 201 ]
  }, {
    "id" : 200,
    "token" : "pright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 201,
    "token" : "xright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 202,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 203, 204 ]
  }, {
    "id" : 203,
    "token" : "pb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 204,
    "token" : "xb",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 205,
    "token" : "--",
    "type" : "PostfixExpression",
    "children" : [ 206 ]
  }, {
    "id" : 206,
    "token" : "count",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "contains",
  "full_name" : "PatriciaST.LongJavaFileProject.contains",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public boolean contains(String key) {\n            return get(key) != null;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 10 ]
  }, {
    "id" : 10,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 11, 12 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 13, 14 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "isEmpty",
  "full_name" : "PatriciaST.LongJavaFileProject.isEmpty",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "boolean isEmpty() {\n            return count == 0;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 6, 7 ]
  }, {
    "id" : 6,
    "token" : "count",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "size",
  "full_name" : "PatriciaST.LongJavaFileProject.size",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "int size() {\n            return count;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "count",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "keys",
  "full_name" : "PatriciaST.LongJavaFileProject.keys",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Iterable<String> keys() {\n            Queue<String> queue = new PriorityQueue<>();\n            if (head.left  != head) keys(head.left,  0, queue);\n            if (head.right != head) keys(head.right, 0, queue);\n            return queue;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "iterablestring",
    "type" : "ParameterizedType",
    "children" : [ 5, 6 ]
  }, {
    "id" : 3,
    "token" : "keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10, 11, 12 ]
  }, {
    "id" : 5,
    "token" : "iterable",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "iterable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 13, 14 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 33, 34 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 42 ]
  }, {
    "id" : 13,
    "token" : "queuestring",
    "type" : "ParameterizedType",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 19, 20 ]
  }, {
    "id" : 15,
    "token" : "queue",
    "type" : "SimpleType",
    "children" : [ 17 ]
  }, {
    "id" : 16,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "queue",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "queue",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 21 ]
  }, {
    "id" : 21,
    "token" : "priority|queue",
    "type" : "ParameterizedType",
    "children" : [ 22 ]
  }, {
    "id" : 22,
    "token" : "priority|queue",
    "type" : "SimpleType",
    "children" : [ 23 ]
  }, {
    "id" : 23,
    "token" : "priority|queue",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 26, 27 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 28 ]
  }, {
    "id" : 26,
    "token" : "headleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 29, 30, 31, 32 ]
  }, {
    "id" : 29,
    "token" : "keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "headleft",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "queue",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 35, 36 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 37 ]
  }, {
    "id" : 35,
    "token" : "headright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "head",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 38, 39, 40, 41 ]
  }, {
    "id" : 38,
    "token" : "keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "headright",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "queue",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "queue",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "safeBitTest",
  "full_name" : "PatriciaST.LongJavaFileProject.safeBitTest",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private boolean safeBitTest(String key, int b) {\n            if (b < key.length() * 16)      return bitTest(key, b) != 0;\n            if (b > key.length() * 16 + 15) return false;   // padding\n            /* 16 bits of 0xffff */         return true;    // end marker\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "safe|bit|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 15, 16 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 29, 30 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 40 ]
  }, {
    "id" : 15,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 17, 18 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 23 ]
  }, {
    "id" : 17,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 26, 27, 28 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "bit|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 39 ]
  }, {
    "id" : 31,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 35, 36 ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 37, 38 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "bitTest",
  "full_name" : "PatriciaST.LongJavaFileProject.bitTest",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private int bitTest(String key, int b) {\n            return (key.charAt(b >>> 4) >>> (b & 0xf)) & 1;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "bit|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 12 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 13 ]
  }, {
    "id" : 13,
    "token" : "&",
    "type" : "InfixExpression",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 16 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : ">>>",
    "type" : "InfixExpression",
    "children" : [ 17, 18 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 19, 20, 21 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 24 ]
  }, {
    "id" : 19,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "char|at",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : ">>>",
    "type" : "InfixExpression",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "&",
    "type" : "InfixExpression",
    "children" : [ 25, 26 ]
  }, {
    "id" : 25,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "xf",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "safeCharAt",
  "full_name" : "PatriciaST.LongJavaFileProject.safeCharAt",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private int safeCharAt(String key, int i) {\n            if (i < key.length()) return key.charAt(i);\n            if (i > key.length()) return 0x0000;            // padding\n            else                  return 0xffff;            // end marker\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "safe|char|at",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 12, 13 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 24, 25, 26 ]
  }, {
    "id" : 14,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 20 ]
  }, {
    "id" : 16,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 18, 19 ]
  }, {
    "id" : 18,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 21, 22, 23 ]
  }, {
    "id" : 21,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "char|at",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 27, 28 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 31 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 32 ]
  }, {
    "id" : 27,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 29, 30 ]
  }, {
    "id" : 29,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "length",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "x",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "xffff",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "firstDifferingBit",
  "full_name" : "PatriciaST.LongJavaFileProject.firstDifferingBit",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private int firstDifferingBit(String k1, String k2) {\n            int i = 0;\n            int c1 = safeCharAt(k1, 0) & ~1;\n            int c2 = safeCharAt(k2, 0) & ~1;\n            if (c1 == c2) {\n                i = 1;\n                while (safeCharAt(k1, i) == safeCharAt(k2, i)) i++;\n                c1 = safeCharAt(k1, i);\n                c2 = safeCharAt(k2, i);\n            }\n            int b = 0;\n            while (((c1 >>> b) & 1) == ((c2 >>> b) & 1)) b++;\n            return i * 16 + b;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "first|differing|bit",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 13, 14, 15, 16, 17, 18, 19 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 34, 35 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 44, 45 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 79, 80 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 83, 84 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 101 ]
  }, {
    "id" : 20,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "&",
    "type" : "InfixExpression",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 30, 31, 32 ]
  }, {
    "id" : 29,
    "token" : "~",
    "type" : "PrefixExpression",
    "children" : [ 33 ]
  }, {
    "id" : 30,
    "token" : "safe|char|at",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "&",
    "type" : "InfixExpression",
    "children" : [ 38, 39 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 40, 41, 42 ]
  }, {
    "id" : 39,
    "token" : "~",
    "type" : "PrefixExpression",
    "children" : [ 43 ]
  }, {
    "id" : 40,
    "token" : "safe|char|at",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 46, 47 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "Block",
    "children" : [ 48, 49, 50, 51 ]
  }, {
    "id" : 46,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 52 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 55, 56 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 67 ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 73 ]
  }, {
    "id" : 52,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 53, 54 ]
  }, {
    "id" : 53,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 57, 58 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 65 ]
  }, {
    "id" : 57,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 59, 60, 61 ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 62, 63, 64 ]
  }, {
    "id" : 59,
    "token" : "safe|char|at",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "safe|char|at",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 63,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 66 ]
  }, {
    "id" : 66,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 68, 69 ]
  }, {
    "id" : 68,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 70, 71, 72 ]
  }, {
    "id" : 70,
    "token" : "safe|char|at",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 71,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 74, 75 ]
  }, {
    "id" : 74,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 76, 77, 78 ]
  }, {
    "id" : 76,
    "token" : "safe|char|at",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "k",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 79,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 81, 82 ]
  }, {
    "id" : 81,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 85, 86 ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 99 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 87 ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 93 ]
  }, {
    "id" : 87,
    "token" : "&",
    "type" : "InfixExpression",
    "children" : [ 88, 89 ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 90 ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 90,
    "token" : ">>>",
    "type" : "InfixExpression",
    "children" : [ 91, 92 ]
  }, {
    "id" : 91,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 92,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 93,
    "token" : "&",
    "type" : "InfixExpression",
    "children" : [ 94, 95 ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 96 ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : ">>>",
    "type" : "InfixExpression",
    "children" : [ 97, 98 ]
  }, {
    "id" : 97,
    "token" : "c",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 98,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 99,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 100 ]
  }, {
    "id" : 100,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 102, 103 ]
  }, {
    "id" : 102,
    "token" : "*",
    "type" : "InfixExpression",
    "children" : [ 104, 105 ]
  }, {
    "id" : 103,
    "token" : "b",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "PatriciaST.LongJavaFileProject.main",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public void main(String[] args) {\n            PatriciaST<Integer> st = new PatriciaST<Integer>();\n            int limitItem = 1000000;\n            int limitPass = 1;\n            int countPass = 0;\n            boolean ok = true;\n\n            if (args.length > 0) limitItem = Integer.parseInt(args[0]);\n            if (args.length > 1) limitPass = Integer.parseInt(args[1]);\n\n            do {\n                String[] a = new String[limitItem];\n                int[]    v = new int[limitItem];\n\n                for (int i = 0; i < limitItem; i++) {\n                    a[i] = Integer.toString(i, 16);\n                    v[i] = i;\n                }\n\n                for (int i = 0; i < limitItem; i++)\n                    st.put(a[v[i]], v[i]);\n\n                int countKeys = 0;\n                for (String key : st.keys()) countKeys++;\n                if (countKeys != limitItem) ok = false;\n                if (countKeys != st.size()) ok = false;\n\n\n                int limitDelete = limitItem / 2;\n                for (int i = 0; i < limitDelete; i++)\n                    st.delete(a[v[i]]);\n\n                countKeys = 0;\n                for (String key : st.keys()) countKeys++;\n                if (countKeys != limitItem - limitDelete) ok = false;\n                if (countKeys != st.size())               ok = false;\n\n                int countDelete = 0;\n                int countRemain = 0;\n                for (int i = 0; i < limitItem; i++) {\n                    if (i < limitDelete) {\n                        if (!st.contains(a[v[i]])) countDelete++;\n                    }\n                    else {\n                        int val = st.get(a[v[i]]);\n                        if (val == v[i]) countRemain++;\n                    }\n                }\n\n                if (countRemain + countDelete != limitItem) ok = false;\n                if (countRemain               != st.size()) ok = false;\n                if (st.isEmpty())                           ok = false;\n\n\n                for (int i = countDelete; i < limitItem; i++)\n                    st.delete(a[v[i]]);\n                if (!st.isEmpty()) ok = false;\n\n                countPass++;\n                if (ok) {\n                }\n                else {\n\n                }\n            } while (ok && countPass < limitPass);\n\n            if (!ok) throw new java.lang.RuntimeException(\"TESTS FAILED\");\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12, 13, 14, 15, 16, 17, 18, 19 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 33, 34 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 37, 38 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 41, 42 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 45, 46 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 49, 50 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 61, 62 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "DoStatement",
    "children" : [ 73, 74 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 376, 377 ]
  }, {
    "id" : 20,
    "token" : "patricia|stinteger",
    "type" : "ParameterizedType",
    "children" : [ 22, 23 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 22,
    "token" : "patricia|st",
    "type" : "SimpleType",
    "children" : [ 24 ]
  }, {
    "id" : 23,
    "token" : "integer",
    "type" : "SimpleType",
    "children" : [ 25 ]
  }, {
    "id" : 24,
    "token" : "patricia|st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 28 ]
  }, {
    "id" : 28,
    "token" : "patricia|stinteger",
    "type" : "ParameterizedType",
    "children" : [ 29, 30 ]
  }, {
    "id" : 29,
    "token" : "patricia|st",
    "type" : "SimpleType",
    "children" : [ 31 ]
  }, {
    "id" : 30,
    "token" : "integer",
    "type" : "SimpleType",
    "children" : [ 32 ]
  }, {
    "id" : 31,
    "token" : "patricia|st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 35, 36 ]
  }, {
    "id" : 35,
    "token" : "limit|item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 39, 40 ]
  }, {
    "id" : 39,
    "token" : "limit|pass",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 43, 44 ]
  }, {
    "id" : 43,
    "token" : "count|pass",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 47, 48 ]
  }, {
    "id" : 47,
    "token" : "ok",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 51, 52 ]
  }, {
    "id" : 50,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 53 ]
  }, {
    "id" : 51,
    "token" : "argslength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 54, 55 ]
  }, {
    "id" : 54,
    "token" : "limit|item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 56, 57, 58 ]
  }, {
    "id" : 56,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "parse|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 59, 60 ]
  }, {
    "id" : 59,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 61,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 63, 64 ]
  }, {
    "id" : 62,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 65 ]
  }, {
    "id" : 63,
    "token" : "argslength",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 65,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 66, 67 ]
  }, {
    "id" : 66,
    "token" : "limit|pass",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 68, 69, 70 ]
  }, {
    "id" : 68,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 69,
    "token" : "parse|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 71, 72 ]
  }, {
    "id" : 71,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 73,
    "token" : "",
    "type" : "Block",
    "children" : [ 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98 ]
  }, {
    "id" : 74,
    "token" : "&&",
    "type" : "InfixExpression",
    "children" : [ 372, 373 ]
  }, {
    "id" : 75,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 99, 100 ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 111, 112 ]
  }, {
    "id" : 77,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 121, 122, 123, 124 ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 148, 149, 150, 151 ]
  }, {
    "id" : 79,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 170, 171 ]
  }, {
    "id" : 80,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 174, 175, 176 ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 184, 185 ]
  }, {
    "id" : 82,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 191, 192 ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 200, 201 ]
  }, {
    "id" : 84,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 206, 207, 208, 209 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 225 ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 228, 229, 230 ]
  }, {
    "id" : 87,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 238, 239 ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 247, 248 ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 256, 257 ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 260, 261 ]
  }, {
    "id" : 91,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 264, 265, 266, 267 ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 315, 316 ]
  }, {
    "id" : 93,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 324, 325 ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 333, 334 ]
  }, {
    "id" : 95,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 340, 341, 342, 343 ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 359, 360 ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 367 ]
  }, {
    "id" : 98,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 369, 370, 371 ]
  }, {
    "id" : 99,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 101, 102 ]
  }, {
    "id" : 100,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 104, 105 ]
  }, {
    "id" : 101,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 103 ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 103,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 104,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 106, 107 ]
  }, {
    "id" : 106,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 108, 109 ]
  }, {
    "id" : 107,
    "token" : "limit|item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 108,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 110 ]
  }, {
    "id" : 109,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 110,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 111,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 113, 114 ]
  }, {
    "id" : 112,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 115, 116 ]
  }, {
    "id" : 113,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 114,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 115,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 116,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 117, 118 ]
  }, {
    "id" : 117,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 119, 120 ]
  }, {
    "id" : 118,
    "token" : "limit|item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 119,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 120,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 125, 126 ]
  }, {
    "id" : 122,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 129, 130 ]
  }, {
    "id" : 123,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 131 ]
  }, {
    "id" : 124,
    "token" : "",
    "type" : "Block",
    "children" : [ 132, 133 ]
  }, {
    "id" : 125,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 126,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 127, 128 ]
  }, {
    "id" : 127,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "limit|item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 131,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 132,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 134 ]
  }, {
    "id" : 133,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 143 ]
  }, {
    "id" : 134,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 135, 136 ]
  }, {
    "id" : 135,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 137, 138 ]
  }, {
    "id" : 136,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 139, 140, 141, 142 ]
  }, {
    "id" : 137,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 138,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 139,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 140,
    "token" : "to|string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 141,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 143,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 144, 145 ]
  }, {
    "id" : 144,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 146, 147 ]
  }, {
    "id" : 145,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 146,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 152, 153 ]
  }, {
    "id" : 149,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 156, 157 ]
  }, {
    "id" : 150,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 158 ]
  }, {
    "id" : 151,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 159 ]
  }, {
    "id" : 152,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 153,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 154, 155 ]
  }, {
    "id" : 154,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 155,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 157,
    "token" : "limit|item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 158,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 159,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 160, 161, 162, 163 ]
  }, {
    "id" : 160,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "put",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 162,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 164, 165 ]
  }, {
    "id" : 163,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 168, 169 ]
  }, {
    "id" : 164,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 165,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 166, 167 ]
  }, {
    "id" : 166,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 167,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 168,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 169,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 170,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 171,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 172, 173 ]
  }, {
    "id" : 172,
    "token" : "count|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 173,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 174,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 177, 178 ]
  }, {
    "id" : 175,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 180, 181 ]
  }, {
    "id" : 176,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 182 ]
  }, {
    "id" : 177,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 179 ]
  }, {
    "id" : 178,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 179,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 180,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 181,
    "token" : "keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 182,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 183 ]
  }, {
    "id" : 183,
    "token" : "count|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 184,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 186, 187 ]
  }, {
    "id" : 185,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 188 ]
  }, {
    "id" : 186,
    "token" : "count|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 187,
    "token" : "limit|item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 188,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 189, 190 ]
  }, {
    "id" : 189,
    "token" : "ok",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 190,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 191,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 193, 194 ]
  }, {
    "id" : 192,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 197 ]
  }, {
    "id" : 193,
    "token" : "count|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 194,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 195, 196 ]
  }, {
    "id" : 195,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 196,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 197,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 198, 199 ]
  }, {
    "id" : 198,
    "token" : "ok",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 199,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 200,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 201,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 202, 203 ]
  }, {
    "id" : 202,
    "token" : "limit|delete",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 203,
    "token" : "/",
    "type" : "InfixExpression",
    "children" : [ 204, 205 ]
  }, {
    "id" : 204,
    "token" : "limit|item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 205,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 206,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 210, 211 ]
  }, {
    "id" : 207,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 214, 215 ]
  }, {
    "id" : 208,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 216 ]
  }, {
    "id" : 209,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 217 ]
  }, {
    "id" : 210,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 211,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 212, 213 ]
  }, {
    "id" : 212,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 213,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 214,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 215,
    "token" : "limit|delete",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 216,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 217,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 218, 219, 220 ]
  }, {
    "id" : 218,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 219,
    "token" : "delete",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 220,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 221, 222 ]
  }, {
    "id" : 221,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 222,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 223, 224 ]
  }, {
    "id" : 223,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 224,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 225,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 226, 227 ]
  }, {
    "id" : 226,
    "token" : "count|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 227,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 228,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 231, 232 ]
  }, {
    "id" : 229,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 234, 235 ]
  }, {
    "id" : 230,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 236 ]
  }, {
    "id" : 231,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 233 ]
  }, {
    "id" : 232,
    "token" : "key",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 233,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 234,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 235,
    "token" : "keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 236,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 237 ]
  }, {
    "id" : 237,
    "token" : "count|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 238,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 240, 241 ]
  }, {
    "id" : 239,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 244 ]
  }, {
    "id" : 240,
    "token" : "count|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 241,
    "token" : "-",
    "type" : "InfixExpression",
    "children" : [ 242, 243 ]
  }, {
    "id" : 242,
    "token" : "limit|item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 243,
    "token" : "limit|delete",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 244,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 245, 246 ]
  }, {
    "id" : 245,
    "token" : "ok",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 246,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 247,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 249, 250 ]
  }, {
    "id" : 248,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 253 ]
  }, {
    "id" : 249,
    "token" : "count|keys",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 250,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 251, 252 ]
  }, {
    "id" : 251,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 252,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 253,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 254, 255 ]
  }, {
    "id" : 254,
    "token" : "ok",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 255,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 256,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 257,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 258, 259 ]
  }, {
    "id" : 258,
    "token" : "count|delete",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 259,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 260,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 261,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 262, 263 ]
  }, {
    "id" : 262,
    "token" : "count|remain",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 263,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 264,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 268, 269 ]
  }, {
    "id" : 265,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 272, 273 ]
  }, {
    "id" : 266,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 274 ]
  }, {
    "id" : 267,
    "token" : "",
    "type" : "Block",
    "children" : [ 275 ]
  }, {
    "id" : 268,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 269,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 270, 271 ]
  }, {
    "id" : 270,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 271,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 272,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 273,
    "token" : "limit|item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 274,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 275,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 276, 277, 278 ]
  }, {
    "id" : 276,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 279, 280 ]
  }, {
    "id" : 277,
    "token" : "",
    "type" : "Block",
    "children" : [ 281 ]
  }, {
    "id" : 278,
    "token" : "",
    "type" : "Block",
    "children" : [ 294, 295 ]
  }, {
    "id" : 279,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 280,
    "token" : "limit|delete",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 281,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 282, 283 ]
  }, {
    "id" : 282,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 284 ]
  }, {
    "id" : 283,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 292 ]
  }, {
    "id" : 284,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 285, 286, 287 ]
  }, {
    "id" : 285,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 286,
    "token" : "contains",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 287,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 288, 289 ]
  }, {
    "id" : 288,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 289,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 290, 291 ]
  }, {
    "id" : 290,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 291,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 292,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 293 ]
  }, {
    "id" : 293,
    "token" : "count|delete",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 294,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 296, 297 ]
  }, {
    "id" : 295,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 307, 308 ]
  }, {
    "id" : 296,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 297,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 298, 299 ]
  }, {
    "id" : 298,
    "token" : "val",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 299,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 300, 301, 302 ]
  }, {
    "id" : 300,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 301,
    "token" : "get",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 302,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 303, 304 ]
  }, {
    "id" : 303,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 304,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 305, 306 ]
  }, {
    "id" : 305,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 306,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 307,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 309, 310 ]
  }, {
    "id" : 308,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 313 ]
  }, {
    "id" : 309,
    "token" : "val",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 310,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 311, 312 ]
  }, {
    "id" : 311,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 312,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 313,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 314 ]
  }, {
    "id" : 314,
    "token" : "count|remain",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 315,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 317, 318 ]
  }, {
    "id" : 316,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 321 ]
  }, {
    "id" : 317,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 319, 320 ]
  }, {
    "id" : 318,
    "token" : "limit|item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 319,
    "token" : "count|remain",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 320,
    "token" : "count|delete",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 321,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 322, 323 ]
  }, {
    "id" : 322,
    "token" : "ok",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 323,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 324,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 326, 327 ]
  }, {
    "id" : 325,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 330 ]
  }, {
    "id" : 326,
    "token" : "count|remain",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 327,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 328, 329 ]
  }, {
    "id" : 328,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 329,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 330,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 331, 332 ]
  }, {
    "id" : 331,
    "token" : "ok",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 332,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 333,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 335, 336 ]
  }, {
    "id" : 334,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 337 ]
  }, {
    "id" : 335,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 336,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 337,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 338, 339 ]
  }, {
    "id" : 338,
    "token" : "ok",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 339,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 340,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 344, 345 ]
  }, {
    "id" : 341,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 348, 349 ]
  }, {
    "id" : 342,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 350 ]
  }, {
    "id" : 343,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 351 ]
  }, {
    "id" : 344,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 345,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 346, 347 ]
  }, {
    "id" : 346,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 347,
    "token" : "count|delete",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 348,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 349,
    "token" : "limit|item",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 350,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 351,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 352, 353, 354 ]
  }, {
    "id" : 352,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 353,
    "token" : "delete",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 354,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 355, 356 ]
  }, {
    "id" : 355,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 356,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 357, 358 ]
  }, {
    "id" : 357,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 358,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 359,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 361 ]
  }, {
    "id" : 360,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 364 ]
  }, {
    "id" : 361,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 362, 363 ]
  }, {
    "id" : 362,
    "token" : "st",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 363,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 364,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 365, 366 ]
  }, {
    "id" : 365,
    "token" : "ok",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 366,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 367,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 368 ]
  }, {
    "id" : 368,
    "token" : "count|pass",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 369,
    "token" : "ok",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 370,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 371,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 372,
    "token" : "ok",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 373,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 374, 375 ]
  }, {
    "id" : 374,
    "token" : "count|pass",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 375,
    "token" : "limit|pass",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 376,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 378 ]
  }, {
    "id" : 377,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 379 ]
  }, {
    "id" : 378,
    "token" : "ok",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 379,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 380, 381 ]
  }, {
    "id" : 380,
    "token" : "javalangruntime|exception",
    "type" : "SimpleType",
    "children" : [ 382 ]
  }, {
    "id" : 381,
    "token" : "tests|failed",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 382,
    "token" : "javalangruntime|exception",
    "type" : "QualifiedName",
    "children" : [ ]
  } ]
}, {
  "name" : "Edge",
  "full_name" : "Edge.EulerianPath.LongJavaFileProject.Edge",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Edge(int v, int w) {\n                this.v = v;\n                this.w = w;\n                isUsed = false;\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 10, 11, 12 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "w",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 13 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 18 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 23 ]
  }, {
    "id" : 13,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 19, 20 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "FieldAccess",
    "children" : [ 21, 22 ]
  }, {
    "id" : 20,
    "token" : "w",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ThisExpression",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "w",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 24, 25 ]
  }, {
    "id" : 24,
    "token" : "is|used",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "other",
  "full_name" : "Edge.EulerianPath.LongJavaFileProject.other",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public int other(int vertex) {\n                if      (vertex == v) return w;\n                else if (vertex == w) return v;\n                else throw new IllegalArgumentException(\"Illegal endpoint\");\n            }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "other",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 8 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "vertex",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 9, 10, 11 ]
  }, {
    "id" : 9,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 12, 13 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 14 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 12,
    "token" : "vertex",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "w",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 18, 19 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 20 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ThrowStatement",
    "children" : [ 21 ]
  }, {
    "id" : 18,
    "token" : "vertex",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "w",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "illegal|argument|exception",
    "type" : "SimpleType",
    "children" : [ 24 ]
  }, {
    "id" : 23,
    "token" : "illegal|endpoint",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "illegal|argument|exception",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "EulerianPath",
  "full_name" : "EulerianPath.LongJavaFileProject.EulerianPath",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public EulerianPath(Graph G) {\n\n            // find vertex from which to start potential Eulerian path:\n            // a vertex v with odd degree(v) if it exits;\n            // otherwise a vertex with degree(v) > 0\n            int oddDegreeVertices = 0;\n            int s = nonIsolatedVertex(G);\n            for (int v = 0; v < 7; v++) {\n                if (2 % 2 != 0) {\n                    oddDegreeVertices++;\n                    s = v;\n                }\n            }\n\n\n            if (oddDegreeVertices > 2) return;\n            if (s == -1) s = 0;\n\n\n\n            for (int v = 0; v < 5; v++) {\n                int selfLoops = 0;\n                    // careful with self loops\n                    if (v == 5) {\n                        if (selfLoops % 2 == 0) {\n                            Edge e = new Edge(v, 5);\n                        }\n                        selfLoops++;\n                    }\n                    else if (v < 5) {\n                        Edge e = new Edge(v, 5);\n\n                    }\n            }\n\n            // initialize stack with any non-isolated vertex\n            Stack<Integer> stack = new Stack<Integer>();\n            stack.push(s);\n\n            // greedily search through edges in iterative DFS style\n            path = new Stack<Integer>();\n            while (!stack.isEmpty()) {\n                int v = stack.pop();\n\n                // push vertex with no more leaving edges to path\n                path.push(v);\n            }\n\n            // check if all edges are used\n            if (path.size() != 5 + 1)\n                path = null;\n\n            assert certifySolution(G);\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "eulerian|path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 ]
  }, {
    "id" : 5,
    "token" : "graph",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "g",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "graph",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 30, 31, 32, 33 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 55, 56 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 59, 60 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 67, 68, 69, 70 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 123, 124 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 136 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 140 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "WhileStatement",
    "children" : [ 148, 149 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 165, 166 ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "AssertStatement",
    "children" : [ 176 ]
  }, {
    "id" : 20,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "odd|degree|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 26, 27 ]
  }, {
    "id" : 26,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28, 29 ]
  }, {
    "id" : 28,
    "token" : "non|isolated|vertex",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "g",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 34, 35 ]
  }, {
    "id" : 31,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 38, 39 ]
  }, {
    "id" : 32,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 40 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "Block",
    "children" : [ 41 ]
  }, {
    "id" : 34,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 36, 37 ]
  }, {
    "id" : 36,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 42, 43 ]
  }, {
    "id" : 42,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 44, 45 ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "Block",
    "children" : [ 48, 49 ]
  }, {
    "id" : 44,
    "token" : "%",
    "type" : "InfixExpression",
    "children" : [ 46, 47 ]
  }, {
    "id" : 45,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 50 ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 52 ]
  }, {
    "id" : 50,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 51 ]
  }, {
    "id" : 51,
    "token" : "odd|degree|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 52,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 53, 54 ]
  }, {
    "id" : 53,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 55,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 57, 58 ]
  }, {
    "id" : 56,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ ]
  }, {
    "id" : 57,
    "token" : "odd|degree|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 58,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 59,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 61, 62 ]
  }, {
    "id" : 60,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 64 ]
  }, {
    "id" : 61,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 62,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 63 ]
  }, {
    "id" : 63,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 64,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 65, 66 ]
  }, {
    "id" : 65,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 66,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 67,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 71, 72 ]
  }, {
    "id" : 68,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 75, 76 ]
  }, {
    "id" : 69,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 77 ]
  }, {
    "id" : 70,
    "token" : "",
    "type" : "Block",
    "children" : [ 78, 79 ]
  }, {
    "id" : 71,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 72,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 73, 74 ]
  }, {
    "id" : 73,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 74,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 75,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 76,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 77,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 78,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 80, 81 ]
  }, {
    "id" : 79,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 84, 85, 86 ]
  }, {
    "id" : 80,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 81,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 82, 83 ]
  }, {
    "id" : 82,
    "token" : "self|loops",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 83,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 84,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 87, 88 ]
  }, {
    "id" : 85,
    "token" : "",
    "type" : "Block",
    "children" : [ 89, 90 ]
  }, {
    "id" : 86,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 109, 110 ]
  }, {
    "id" : 87,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 88,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 89,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 91, 92 ]
  }, {
    "id" : 90,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 107 ]
  }, {
    "id" : 91,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 93, 94 ]
  }, {
    "id" : 92,
    "token" : "",
    "type" : "Block",
    "children" : [ 97 ]
  }, {
    "id" : 93,
    "token" : "%",
    "type" : "InfixExpression",
    "children" : [ 95, 96 ]
  }, {
    "id" : 94,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 95,
    "token" : "self|loops",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 96,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 97,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 98, 99 ]
  }, {
    "id" : 98,
    "token" : "edge",
    "type" : "SimpleType",
    "children" : [ 100 ]
  }, {
    "id" : 99,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 101, 102 ]
  }, {
    "id" : 100,
    "token" : "edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 101,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 102,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 103, 104, 105 ]
  }, {
    "id" : 103,
    "token" : "edge",
    "type" : "SimpleType",
    "children" : [ 106 ]
  }, {
    "id" : 104,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 105,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 106,
    "token" : "edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 107,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 108 ]
  }, {
    "id" : 108,
    "token" : "self|loops",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 109,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 111, 112 ]
  }, {
    "id" : 110,
    "token" : "",
    "type" : "Block",
    "children" : [ 113 ]
  }, {
    "id" : 111,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 112,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 113,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 114, 115 ]
  }, {
    "id" : 114,
    "token" : "edge",
    "type" : "SimpleType",
    "children" : [ 116 ]
  }, {
    "id" : 115,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 117, 118 ]
  }, {
    "id" : 116,
    "token" : "edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 117,
    "token" : "e",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 118,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 119, 120, 121 ]
  }, {
    "id" : 119,
    "token" : "edge",
    "type" : "SimpleType",
    "children" : [ 122 ]
  }, {
    "id" : 120,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 121,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 122,
    "token" : "edge",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 123,
    "token" : "stackinteger",
    "type" : "ParameterizedType",
    "children" : [ 125, 126 ]
  }, {
    "id" : 124,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 129, 130 ]
  }, {
    "id" : 125,
    "token" : "stack",
    "type" : "SimpleType",
    "children" : [ 127 ]
  }, {
    "id" : 126,
    "token" : "integer",
    "type" : "SimpleType",
    "children" : [ 128 ]
  }, {
    "id" : 127,
    "token" : "stack",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 128,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 129,
    "token" : "stack",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 130,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 131 ]
  }, {
    "id" : 131,
    "token" : "stackinteger",
    "type" : "ParameterizedType",
    "children" : [ 132, 133 ]
  }, {
    "id" : 132,
    "token" : "stack",
    "type" : "SimpleType",
    "children" : [ 134 ]
  }, {
    "id" : 133,
    "token" : "integer",
    "type" : "SimpleType",
    "children" : [ 135 ]
  }, {
    "id" : 134,
    "token" : "stack",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 135,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 136,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 137, 138, 139 ]
  }, {
    "id" : 137,
    "token" : "stack",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 138,
    "token" : "push",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 139,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 140,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 141, 142 ]
  }, {
    "id" : 141,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 142,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 143 ]
  }, {
    "id" : 143,
    "token" : "stackinteger",
    "type" : "ParameterizedType",
    "children" : [ 144, 145 ]
  }, {
    "id" : 144,
    "token" : "stack",
    "type" : "SimpleType",
    "children" : [ 146 ]
  }, {
    "id" : 145,
    "token" : "integer",
    "type" : "SimpleType",
    "children" : [ 147 ]
  }, {
    "id" : 146,
    "token" : "stack",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 147,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 148,
    "token" : "!",
    "type" : "PrefixExpression",
    "children" : [ 150 ]
  }, {
    "id" : 149,
    "token" : "",
    "type" : "Block",
    "children" : [ 153, 154 ]
  }, {
    "id" : 150,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 151, 152 ]
  }, {
    "id" : 151,
    "token" : "stack",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 152,
    "token" : "is|empty",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 153,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 155, 156 ]
  }, {
    "id" : 154,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 161 ]
  }, {
    "id" : 155,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 156,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 157, 158 ]
  }, {
    "id" : 157,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 158,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 159, 160 ]
  }, {
    "id" : 159,
    "token" : "stack",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 160,
    "token" : "pop",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 161,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 162, 163, 164 ]
  }, {
    "id" : 162,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 163,
    "token" : "push",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 164,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 165,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 167, 168 ]
  }, {
    "id" : 166,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 173 ]
  }, {
    "id" : 167,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 169, 170 ]
  }, {
    "id" : 168,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 171, 172 ]
  }, {
    "id" : 169,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 170,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 171,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 172,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 173,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 174, 175 ]
  }, {
    "id" : 174,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 175,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 176,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 177, 178 ]
  }, {
    "id" : 177,
    "token" : "certify|solution",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 178,
    "token" : "g",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "path",
  "full_name" : "EulerianPath.LongJavaFileProject.path",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public Iterable<Integer> path() {\n            return path;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "iterableinteger",
    "type" : "ParameterizedType",
    "children" : [ 5, 6 ]
  }, {
    "id" : 3,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 9 ]
  }, {
    "id" : 5,
    "token" : "iterable",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "integer",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "iterable",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "integer",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 10 ]
  }, {
    "id" : 10,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "hasEulerianPath",
  "full_name" : "EulerianPath.LongJavaFileProject.hasEulerianPath",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "public boolean hasEulerianPath() {\n            return path != null;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "has|eulerian|path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "nonIsolatedVertex",
  "full_name" : "EulerianPath.LongJavaFileProject.nonIsolatedVertex",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private int nonIsolatedVertex(Graph G) {\n            for (int v = 0; v < 6; v++)\n                if (1 > 0)\n                    return v;\n            return -1;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "non|isolated|vertex",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10 ]
  }, {
    "id" : 6,
    "token" : "graph",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "g",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "graph",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 11, 12, 13, 14 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 27 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 15, 16 ]
  }, {
    "id" : 12,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 19, 20 ]
  }, {
    "id" : 13,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 21 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 22, 23 ]
  }, {
    "id" : 15,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 17, 18 ]
  }, {
    "id" : 17,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 24, 25 ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 26 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "-",
    "type" : "PrefixExpression",
    "children" : [ 28 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "satisfiesNecessaryAndSufficientConditions",
  "full_name" : "EulerianPath.LongJavaFileProject.satisfiesNecessaryAndSufficientConditions",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private boolean satisfiesNecessaryAndSufficientConditions(Graph G) {\n            if (2 == 0) return true;\n\n            // Condition 1: degree(v) is even except for possibly two\n            int oddDegreeVertices = 0;\n            for (int v = 0; v <7; v++)\n                if (3 % 2 != 0)\n                    oddDegreeVertices++;\n            if (oddDegreeVertices > 2) return false;\n\n            // Condition 2: graph is connected, ignoring isolated vertices\n            int s = nonIsolatedVertex(G);\n            return true;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "satisfies|necessary|and|sufficient|conditions",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10, 11, 12, 13, 14 ]
  }, {
    "id" : 6,
    "token" : "graph",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "g",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "graph",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 15, 16 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 20, 21 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 24, 25, 26, 27 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 43, 44 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 48, 49 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 54 ]
  }, {
    "id" : 15,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 17, 18 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "odd|degree|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 28, 29 ]
  }, {
    "id" : 25,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 32, 33 ]
  }, {
    "id" : 26,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 34 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 35, 36 ]
  }, {
    "id" : 28,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 30, 31 ]
  }, {
    "id" : 30,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 37, 38 ]
  }, {
    "id" : 36,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 41 ]
  }, {
    "id" : 37,
    "token" : "%",
    "type" : "InfixExpression",
    "children" : [ 39, 40 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 41,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 42 ]
  }, {
    "id" : 42,
    "token" : "odd|degree|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 45, 46 ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 47 ]
  }, {
    "id" : 45,
    "token" : "odd|degree|vertices",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 47,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 48,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 49,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 50, 51 ]
  }, {
    "id" : 50,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 51,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 52, 53 ]
  }, {
    "id" : 52,
    "token" : "non|isolated|vertex",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 53,
    "token" : "g",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 54,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "certifySolution",
  "full_name" : "EulerianPath.LongJavaFileProject.certifySolution",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private boolean certifySolution(Graph G) {\n\n            // internal consistency check\n            if (hasEulerianPath() == (path() == null)) return false;\n\n            // hashEulerianPath() returns correct value\n            if (hasEulerianPath() != satisfiesNecessaryAndSufficientConditions(G)) return false;\n\n            // nothing else to check if no Eulerian path\n            if (path == null) return true;\n\n            // check that path() uses correct number of edges\n            if (path.size() != 7 + 1) return false;\n\n            // check that path() is a path in G\n            // TODO\n\n            return true;\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "boolean",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "certify|solution",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 9, 10, 11, 12, 13 ]
  }, {
    "id" : 6,
    "token" : "graph",
    "type" : "SimpleType",
    "children" : [ 8 ]
  }, {
    "id" : 7,
    "token" : "g",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "graph",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 14, 15 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 24, 25 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 32, 33 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 37, 38 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 46 ]
  }, {
    "id" : 14,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 16, 17 ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 23 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 18 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "ParenthesizedExpression",
    "children" : [ 19 ]
  }, {
    "id" : 18,
    "token" : "has|eulerian|path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 22 ]
  }, {
    "id" : 21,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 26, 27 ]
  }, {
    "id" : 25,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 31 ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 28 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 29, 30 ]
  }, {
    "id" : 28,
    "token" : "has|eulerian|path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 29,
    "token" : "satisfies|necessary|and|sufficient|conditions",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 30,
    "token" : "g",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "==",
    "type" : "InfixExpression",
    "children" : [ 34, 35 ]
  }, {
    "id" : 33,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 36 ]
  }, {
    "id" : 34,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "",
    "type" : "NullLiteral",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "!=",
    "type" : "InfixExpression",
    "children" : [ 39, 40 ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 45 ]
  }, {
    "id" : 39,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 41, 42 ]
  }, {
    "id" : 40,
    "token" : "+",
    "type" : "InfixExpression",
    "children" : [ 43, 44 ]
  }, {
    "id" : 41,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 43,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "false",
    "type" : "BooleanLiteral",
    "children" : [ ]
  }, {
    "id" : 46,
    "token" : "true",
    "type" : "BooleanLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "unitTest",
  "full_name" : "EulerianPath.LongJavaFileProject.unitTest",
  "file" : "astminer/src/jmh/resources/LongJavaFile.java",
  "doc" : null,
  "comment" : null,
  "body" : "private void unitTest(Graph G, String description) {\n\n            EulerianPath euler = new EulerianPath(G);\n\n            if (euler.hasEulerianPath()) {\n                for (int v : euler.path()) {\n                }\n            }\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "private",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "unit|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 13, 14 ]
  }, {
    "id" : 7,
    "token" : "graph",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "g",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "graph",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 12 ]
  }, {
    "id" : 11,
    "token" : "description",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 15, 16 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 23, 24 ]
  }, {
    "id" : 15,
    "token" : "eulerian|path",
    "type" : "SimpleType",
    "children" : [ 17 ]
  }, {
    "id" : 16,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "eulerian|path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "euler",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "ClassInstanceCreation",
    "children" : [ 20, 21 ]
  }, {
    "id" : 20,
    "token" : "eulerian|path",
    "type" : "SimpleType",
    "children" : [ 22 ]
  }, {
    "id" : 21,
    "token" : "g",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "eulerian|path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 25, 26 ]
  }, {
    "id" : 24,
    "token" : "",
    "type" : "Block",
    "children" : [ 27 ]
  }, {
    "id" : 25,
    "token" : "euler",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "has|eulerian|path",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "EnhancedForStatement",
    "children" : [ 28, 29, 30 ]
  }, {
    "id" : 28,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 31, 32 ]
  }, {
    "id" : 29,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 33, 34 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 31,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "v",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 33,
    "token" : "euler",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "path",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "IntArrayInitialization",
  "full_name" : "ComplexArrayInitialization.IntArrayInitialization",
  "file" : "astminer/src/test/resources/arrayCalls/ComplexArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "IntArrayInitialization() {\n        array = new ComplexObject[1];\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "int|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ 3 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "complex|object",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "complex|object",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "complex|object",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "ComplexTest",
  "full_name" : "ComplexTest.ComplexTest",
  "file" : "astminer/src/test/resources/arrayCalls/ComplexTest.java",
  "doc" : null,
  "comment" : null,
  "body" : "public ComplexTest() {\n        array = new int[SIZE][SIZE];\n        for (int i = 0; i < SIZE; i++) {\n            for (int j = 0; j < SIZE; j++) {\n                array[i][j] = 0;\n            }\n        }\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "complex|test",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4, 5 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 6 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 15, 16, 17, 18 ]
  }, {
    "id" : 6,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 9, 10, 11 ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 10,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 19, 20 ]
  }, {
    "id" : 16,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 23, 24 ]
  }, {
    "id" : 17,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 25 ]
  }, {
    "id" : 18,
    "token" : "",
    "type" : "Block",
    "children" : [ 26 ]
  }, {
    "id" : 19,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 21, 22 ]
  }, {
    "id" : 21,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 22,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 24,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 25,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 26,
    "token" : "",
    "type" : "ForStatement",
    "children" : [ 27, 28, 29, 30 ]
  }, {
    "id" : 27,
    "token" : "",
    "type" : "VariableDeclarationExpression",
    "children" : [ 31, 32 ]
  }, {
    "id" : 28,
    "token" : "<",
    "type" : "InfixExpression",
    "children" : [ 35, 36 ]
  }, {
    "id" : 29,
    "token" : "++",
    "type" : "PostfixExpression",
    "children" : [ 37 ]
  }, {
    "id" : 30,
    "token" : "",
    "type" : "Block",
    "children" : [ 38 ]
  }, {
    "id" : 31,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 32,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 33, 34 ]
  }, {
    "id" : 33,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 34,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 35,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 36,
    "token" : "size",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 37,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 38,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 39 ]
  }, {
    "id" : 39,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 40, 41 ]
  }, {
    "id" : 40,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 42, 43 ]
  }, {
    "id" : 41,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 42,
    "token" : "",
    "type" : "ArrayAccess",
    "children" : [ 44, 45 ]
  }, {
    "id" : 43,
    "token" : "j",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 44,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 45,
    "token" : "i",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "IntArrayInitialization",
  "full_name" : "DoubleArrayInitialization.IntArrayInitialization",
  "file" : "astminer/src/test/resources/arrayCalls/DoubleArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "IntArrayInitialization() {\n        array = new double[1];\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "int|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ 3 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "double",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "double",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  } ]
}, {
  "name" : "IntArrayInitialization",
  "full_name" : "IntArrayInitialization.IntArrayInitialization",
  "file" : "astminer/src/test/resources/arrayCalls/IntArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "IntArrayInitialization() {\n        array = new int[1];\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "int|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ 3 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  } ]
}, {
  "name" : "StringArrayInitialization",
  "full_name" : "StringArrayInitialization.StringArrayInitialization",
  "file" : "astminer/src/test/resources/arrayCalls/StringArrayInitialization.java",
  "doc" : null,
  "comment" : null,
  "body" : "StringArrayInitialization() {\n        array = new String[1];\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2 ]
  }, {
    "id" : 1,
    "token" : "string|array|initialization",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "",
    "type" : "Block",
    "children" : [ 3 ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 5, 6 ]
  }, {
    "id" : 5,
    "token" : "array",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "ArrayCreation",
    "children" : [ 7, 8 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "fun_withReallyLong_And_ComplicatedName",
  "full_name" : "SingleFunction.fun_withReallyLong_And_ComplicatedName",
  "file" : "astminer/src/test/resources/code2vecPathMining/1.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun_withReallyLong_And_ComplicatedName(String[] args, int param) {\n        System.out.println(\" Hello again world!  \");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun|with|really|long|and|complicated|name",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 13 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 14 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "Another_Fun_withReallyLong_And_ComplicatedName",
  "full_name" : "SingleFunction.Another_Fun_withReallyLong_And_ComplicatedName",
  "file" : "astminer/src/test/resources/code2vecPathMining/1.java",
  "doc" : null,
  "comment" : null,
  "body" : "int Another_Fun_withReallyLong_And_ComplicatedName(String s)) {\n        System.out.println(s);\n    }\n}",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "another|fun|with|really|long|and|complicated|name",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 7 ]
  }, {
    "id" : 6,
    "token" : "s",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "foo",
  "full_name" : "Foo.foo",
  "file" : "astminer/src/test/resources/common/NonParsableFile.java",
  "doc" : "/**\n     * Prints \"bar'.\n     */",
  "comment" : null,
  "body" : null,
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "foo",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "prints|bar",
    "type" : "TextElement",
    "children" : [ ]
  } ]
}, {
  "name" : "foo",
  "full_name" : "Foo.foo",
  "file" : "astminer/src/test/resources/common/ParsableFile.java",
  "doc" : "/**\n     * Prints \"bar'.\n     */",
  "comment" : null,
  "body" : "public static void foo() {\n        System.out.println(\"bar\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "",
    "type" : "Javadoc",
    "children" : [ 7 ]
  }, {
    "id" : 2,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "foo",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 9 ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "TagElement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "prints|bar",
    "type" : "TextElement",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 10 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 11, 12, 13 ]
  }, {
    "id" : 11,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "bar",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "Main.main",
  "file" : "astminer/src/test/resources/examples/1.java",
  "doc" : null,
  "comment" : null,
  "body" : "public static void main(String[] args) {\n        System.out.println(\"Hello world\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "public",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "static",
    "type" : "Modifier",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 4,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ 12 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 9, 10 ]
  }, {
    "id" : 8,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 11 ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 13 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 14,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "hello|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "fun",
  "full_name" : "SingleFunction.fun",
  "file" : "astminer/src/test/resources/examples/test_dir_name_extension.java/1.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun(String[] args, int param) {\n        System.out.println(\"Hello again world!\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 13 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 14 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "hi",
  "full_name" : "A.hi",
  "file" : "astminer/src/test/resources/featureextraction/hello.java",
  "doc" : null,
  "comment" : null,
  "body" : "void hi() {\n        String hi = \"Hello\";\n        int a = 5;\n        if (a > 0) {\n            a = 0;\n        }\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "hi",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4, 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 7, 8 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "VariableDeclarationStatement",
    "children" : [ 12, 13 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "IfStatement",
    "children" : [ 16, 17 ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 10, 11 ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "hi",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "hello",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "VariableDeclarationFragment",
    "children" : [ 14, 15 ]
  }, {
    "id" : 14,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : ">",
    "type" : "InfixExpression",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "Block",
    "children" : [ 20 ]
  }, {
    "id" : 18,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  }, {
    "id" : 20,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 21 ]
  }, {
    "id" : 21,
    "token" : "=",
    "type" : "Assignment",
    "children" : [ 22, 23 ]
  }, {
    "id" : 22,
    "token" : "a",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 23,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "fun",
  "full_name" : "SingleFunction.fun",
  "file" : "astminer/src/test/resources/gumTreeMethodSplitter/1.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun(String[] args, int param) {\n        System.out.println(\"Hello again world!\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 13 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 14 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "InnerClass.SingleMethodInnerClass.main",
  "file" : "astminer/src/test/resources/gumTreeMethodSplitter/2.java",
  "doc" : null,
  "comment" : null,
  "body" : "void main(String[] args) {\n            System.out.println(\"Hello world!\");\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 5,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 12,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "hello|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "main",
  "full_name" : "InnerClass.SingleMethodInnerClass.main",
  "file" : "astminer/src/test/resources/gumTreeMethodSplitter/3.java",
  "doc" : null,
  "comment" : null,
  "body" : "void main(String[] args) {\n            System.out.println(\"Hello world!\");\n        }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "main",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ 10 ]
  }, {
    "id" : 5,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 7, 8 ]
  }, {
    "id" : 6,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 11 ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 12,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "hello|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "fun",
  "full_name" : "SingleMethodInnerClass.fun",
  "file" : "astminer/src/test/resources/gumTreeMethodSplitter/3.java",
  "doc" : null,
  "comment" : null,
  "body" : "void fun(String[] args, int param) {\n        System.out.println(\"Hello again world!\");\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 11, 12 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 13 ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 8, 9 ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 14 ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 15, 16, 17 ]
  }, {
    "id" : 15,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "fun",
  "full_name" : "SingleFunction.fun",
  "file" : "astminer/src/test/resources/gumTreeMethodSplitter/4.java",
  "doc" : null,
  "comment" : null,
  "body" : "int fun(int args, SingleFunction param) {\n        System.out.println(\"Hello again world!\");\n        return 0;\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5 ]
  }, {
    "id" : 1,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "fun",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 6, 7 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 8, 9 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Block",
    "children" : [ 11, 12 ]
  }, {
    "id" : 6,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "args",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 8,
    "token" : "single|function",
    "type" : "SimpleType",
    "children" : [ 10 ]
  }, {
    "id" : 9,
    "token" : "param",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "single|function",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 11,
    "token" : "",
    "type" : "ExpressionStatement",
    "children" : [ 13 ]
  }, {
    "id" : 12,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 17 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 14, 15, 16 ]
  }, {
    "id" : 14,
    "token" : "systemout",
    "type" : "QualifiedName",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "println",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "hello|again|world",
    "type" : "StringLiteral",
    "children" : [ ]
  }, {
    "id" : 17,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "functionReturningVoid",
  "full_name" : "Class1.functionReturningVoid",
  "file" : "astminer/src/test/resources/methodSplitting/testMethodSplitting.java",
  "doc" : null,
  "comment" : null,
  "body" : "void functionReturningVoid() {}",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "function|returning|void",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  } ]
}, {
  "name" : "functionReturningInt",
  "full_name" : "Class1.functionReturningInt",
  "file" : "astminer/src/test/resources/methodSplitting/testMethodSplitting.java",
  "doc" : null,
  "comment" : null,
  "body" : "int functionReturningInt() {\n        return 0;\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "function|returning|int",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 4 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 5 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "NumberLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "functionReturningStrings",
  "full_name" : "Class1.functionReturningStrings",
  "file" : "astminer/src/test/resources/methodSplitting/testMethodSplitting.java",
  "doc" : null,
  "comment" : null,
  "body" : "String[] functionReturningStrings() {\n        return \"\";\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 4, 5 ]
  }, {
    "id" : 2,
    "token" : "function|returning|strings",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 7 ]
  }, {
    "id" : 4,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 6 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 8 ]
  }, {
    "id" : 8,
    "token" : "",
    "type" : "StringLiteral",
    "children" : [ ]
  } ]
}, {
  "name" : "functionReturningClass",
  "full_name" : "Class1.functionReturningClass",
  "file" : "astminer/src/test/resources/methodSplitting/testMethodSplitting.java",
  "doc" : null,
  "comment" : null,
  "body" : "Class1 functionReturningClass() {\n        return Class1();\n    }",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "class",
    "type" : "SimpleType",
    "children" : [ 4 ]
  }, {
    "id" : 2,
    "token" : "function|returning|class",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ 5 ]
  }, {
    "id" : 4,
    "token" : "class",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "ReturnStatement",
    "children" : [ 6 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "MethodInvocation",
    "children" : [ 7 ]
  }, {
    "id" : 7,
    "token" : "class",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "functionInClass1",
  "full_name" : "Class1.functionInClass1",
  "file" : "astminer/src/test/resources/methodSplitting/testMethodSplitting.java",
  "doc" : null,
  "comment" : null,
  "body" : "void functionInClass1() {}",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "function|in|class",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  } ]
}, {
  "name" : "functionInClass2",
  "full_name" : "Class2.Class1.functionInClass2",
  "file" : "astminer/src/test/resources/methodSplitting/testMethodSplitting.java",
  "doc" : null,
  "comment" : null,
  "body" : "void functionInClass2() {}",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "function|in|class",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  } ]
}, {
  "name" : "functionWithNoParameters",
  "full_name" : "Class1.functionWithNoParameters",
  "file" : "astminer/src/test/resources/methodSplitting/testMethodSplitting.java",
  "doc" : null,
  "comment" : null,
  "body" : "void functionWithNoParameters() {}",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "function|with|no|parameters",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  } ]
}, {
  "name" : "functionWithOneParameter",
  "full_name" : "Class1.functionWithOneParameter",
  "file" : "astminer/src/test/resources/methodSplitting/testMethodSplitting.java",
  "doc" : null,
  "comment" : null,
  "body" : "void functionWithOneParameter(int p1) {}",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "function|with|one|parameter",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 5, 6 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 5,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 6,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  } ]
}, {
  "name" : "functionWithThreeParameters",
  "full_name" : "Class1.functionWithThreeParameters",
  "file" : "astminer/src/test/resources/methodSplitting/testMethodSplitting.java",
  "doc" : null,
  "comment" : null,
  "body" : "void functionWithThreeParameters(Class p1, String[][] p2, int[]... p3) {}",
  "commit" : {
    "parents_cnt" : 2,
    "message" : "Merge pull request #109 from JetBrains-Research/master-dev",
    "date" : "2020-10-12",
    "hash" : "478901869c60f788b2b256fc410b73323edce4cc"
  },
  "ast" : [ {
    "id" : 0,
    "token" : "",
    "type" : "MethodDeclaration",
    "children" : [ 1, 2, 3, 4, 5, 6 ]
  }, {
    "id" : 1,
    "token" : "void",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 2,
    "token" : "function|with|three|parameters",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 3,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 7, 8 ]
  }, {
    "id" : 4,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 10, 11 ]
  }, {
    "id" : 5,
    "token" : "",
    "type" : "SingleVariableDeclaration",
    "children" : [ 16, 17 ]
  }, {
    "id" : 6,
    "token" : "",
    "type" : "Block",
    "children" : [ ]
  }, {
    "id" : 7,
    "token" : "class",
    "type" : "SimpleType",
    "children" : [ 9 ]
  }, {
    "id" : 8,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 9,
    "token" : "class",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 10,
    "token" : "string",
    "type" : "ArrayType",
    "children" : [ 12, 13, 14 ]
  }, {
    "id" : 11,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 12,
    "token" : "string",
    "type" : "SimpleType",
    "children" : [ 15 ]
  }, {
    "id" : 13,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 14,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  }, {
    "id" : 15,
    "token" : "string",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 16,
    "token" : "int",
    "type" : "ArrayType",
    "children" : [ 18, 19 ]
  }, {
    "id" : 17,
    "token" : "p",
    "type" : "SimpleName",
    "children" : [ ]
  }, {
    "id" : 18,
    "token" : "int",
    "type" : "PrimitiveType",
    "children" : [ ]
  }, {
    "id" : 19,
    "token" : "",
    "type" : "Dimension",
    "children" : [ ]
  } ]
} ]